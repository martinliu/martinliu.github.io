<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cms on Martin Liu's Blog</title><link>https://martinliu.cn/tags/cms/</link><description>Recent content in Cms on Martin Liu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 09 Oct 2022 21:44:15 +0800</lastBuildDate><atom:link href="https://martinliu.cn/tags/cms/index.xml" rel="self" type="application/rss+xml"/><item><title>规划CMDB数据填充-003</title><link>https://martinliu.cn/2010/07/20/cmdb003/</link><pubDate>Tue, 20 Jul 2010 11:35:44 +0000</pubDate><guid>https://martinliu.cn/2010/07/20/cmdb003/</guid><description>&lt;p>From 《Step by step to build a CMDB》步骤 17-规划 CMDB 数据填充&lt;/p>
&lt;p>本文描述填充过程的任务 3 到任务 4：&lt;/p>
&lt;p>&lt;img src="http://martinliu.cn/wp-content/gallery/cmdb/ci-data-mapping.png"
loading="lazy"
alt="ci-data-mapping"
>&lt;/p>
&lt;p>&lt;strong>任务 3 映射 CI 和数据源&lt;/strong>
现在拿出您的 CI 清单，并把每一类 CI 与具有相关信息的数据源映射起来。一个简单的电子数据表格，像图 17.2 一样的就足够了。有更复杂数据需求的大一点的企业可能需要多个数据页或者通过 CI 分类来连接到不同的数据页。&lt;/p>
&lt;p>这项工作的最终目标不仅是识别用以填充 CMDB 数据源，而且还识别了流程和平台的接触点，有些平台对数据填充是有影响的。这项工作也是至关重要，用来定义数据调和规则，定义数据优先度，这些会在下面的步骤，任务 7“建立调和规则”中用的。
工具映射如下图 17.2 所示，包括了每一个 CI 类，相关的属性，相关的关系数据，和数据源。
图 17.2 Ci 和数据源之间的对照关系图样例
您可能会发现一些 s 数据源之间的重叠，特别是 CI 库存清单的属性数据。这些数据通常包括唯一物理特性和 CI 的地点的说明 ，例如：型号、序列号、地点和所有者。此信息可能被存储在其他多个地方，它们也可用于 CI 数据填充的来源和日常维护的来源。
多种的资产和库存清单数据来源可能包括如下：&lt;/p>
&lt;ul>
&lt;li>审计（资产清单或者配置发现数据库；无代理和有代理方式）&lt;/li>
&lt;li>资产管理系统&lt;/li>
&lt;li>采购系统和许可证管理&lt;/li>
&lt;li>财会系统（采购或者收货）&lt;/li>
&lt;li>合同管理系统&lt;/li>
&lt;li>变更管理系统&lt;/li>
&lt;li>其他财务应用和系统&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>任务 4 访问数据源环境&lt;/strong>
为了确保数据质量，你应该访问所有的数据源环境，而不仅仅只是 CMDB，还包括连接工具和相关技术，要逐一访问查看每一个数据源。在这里，“进来的是垃圾，出去的就是垃圾”这个俗语是适用的。CMDB 项目的成功可能依赖于对系统或者基础架构的更新，以适应网络流量和数据量，还依赖于确保每一个数据源的数据质量。&lt;/p>
&lt;p>当你规划 CMDB 数据填充的时候，要自问这样几个问题，是有关外部映射数据源质量的：&lt;/p>
&lt;ul>
&lt;li>现在那些信息在那里、怎样被存储的？ &amp;ndash;数据库、电子表格、Word 文档？&lt;/li>
&lt;li>当前环境中有没有审计（发现）工具、软件分发、配置管理或者采购系统，用来自动的跟踪和存储这些信息？ 或者数据时被手工地收集和更新的？&lt;/li>
&lt;li>这些系统是基于开放标准还是私有技术的？&lt;/li>
&lt;li>这些系统的厂商有没有标准化的工具？或者 CMDB 厂商？&lt;/li>
&lt;li>需要被继承的数据源的物理位置在那里？&lt;/li>
&lt;li>在 CMDB 和数据源之间，通讯的方式是双向的还是单向的？&lt;/li>
&lt;/ul>
&lt;p>还要考虑有关映射数据源性能相关的问题：&lt;/p>
&lt;ul>
&lt;li>就当前的数据源来说，现实的性能、容量和可靠性是怎样的？&lt;/li>
&lt;li>系统上当前的活动状况怎样？&lt;/li>
&lt;li>活动用户数&lt;/li>
&lt;li>其他并发继承此数据源的工具&lt;/li>
&lt;li>备份、病毒扫描、报表或者数据挖掘的日程&lt;/li>
&lt;li>审计工具（配置发现或者库存清单）扫描或者排队日程&lt;/li>
&lt;li>其他任何将影响性能的事情&lt;/li>
&lt;li>硬件和当前环境是不是能完全满足今后数据迁移所需要的附加工作量和空间需求？以及满足对于以后的日常数据同步？有没有对今后几年里增长率有做过计算？&lt;/li>
&lt;li>是不是需要考虑要满足什么约束或者特殊权限？&lt;/li>
&lt;li>厂商是否在与他们数据库集成方面有建议的最佳实践？（使用热备的生产机来降低作业压力）&lt;/li>
&lt;li>CMDB 周边的数据集和连接技术是什么？&lt;/li>
&lt;li>网络环境中物理的限制（带宽、距离等）是否会有影响？&lt;/li>
&lt;li>当前的版本是多少？在以后的六个月或者一年里是否有升级的计划？有哪些好处？&lt;/li>
&lt;li>为当前的解决方案是否得到了足够的资料来负责架构、排错以及连接系统的维护？&lt;/li>
&lt;/ul>
&lt;p>通过尽早的回答这些问题，就可以避免后续可能出现的性能问题，那些问题会影响项目的成功。如果数据源不太可靠，而且数据质量和性能方面是有问题的，这个时候，可以回到这些数据的关键利益相关者那里，与他们讨论，并确定这是否会影响到使用方面的关键需求。如果没有，需要把这部分数据需求从 CMDB 项目计划的第一阶段中展示放弃。这里最重要的是第一阶段的合理部署，实施结果能够获得用户全面的适应。然而，如果这些数据依然是比较关键的需求，那么需要与数据所有者，和收益者各方进行沟通，并引起各方的高度重视，共同确定一个解决方案。&lt;/p></description></item><item><title>CMDB配置采集工具部署之4大挑战</title><link>https://martinliu.cn/2010/04/26/cmdb-addm-tool-implement-good-practice/</link><pubDate>Mon, 26 Apr 2010 12:24:24 +0000</pubDate><guid>https://martinliu.cn/2010/04/26/cmdb-addm-tool-implement-good-practice/</guid><description>&lt;p>[singlepic id=84 w=320 h=240 mode=watermark float=left] &lt;em>&lt;strong>挑战 1：沟通成本大&lt;/strong>&lt;/em>
项目的参与沟通方可能很多，最多的情况下，可能包括：网络部门、系统部门、安全部门和各个业务部门。沟通的内容主要是配置采集的实施技术方式。其中采集的安全性，风险分析是最重要的部分；在部门多的情况下，面对多种选择的时候，逐一给项目各方说清所有方案，特别是讲清楚利弊是非常耗时的。在充分沟通了所有技术可能性之后，才能做出倾向性选择。逐一这是第一轮沟通，搞清楚了倾向性而已。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战 2：决策成本大&lt;/em>&lt;/strong>
特别是银行等金融企业，安全性要求特别高。安全风险方面的建议往往是最重要的，他们的建议对配置采集工具的实施具有决定性意义。在各方都充分理解了配置采集工具的架构和安全性之后，就是拍板定夺了。这种逐级的审批和决策是需要较长的周期。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战 3：前导时间成本太大&lt;/em>&lt;/strong>
在前导时间里，可能还没有部署正式的 ADDM 采集服务器。在这个阶段里，要配置网络，让以后的采集服务器能够处于能够扫描到所有目标服务器设备。还可能需要在每台服务器上配置相关的准备工作，主要是坚持主机的操作系统的账户、采集协议和安全配置等是否满足配置采集工具的要求。这写工作是一个群众性运动，需要让所有的系统管理员配合。此项工作的设计人员设备多，最好能尽早的开始。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战 4：用户的期望太大&lt;/em>&lt;/strong>
用户对配置工具的期望主要是集中在深度和细度方面。其实这也不为过，只是在实施的过程中，最好还能把发现工具的一下特有的功能和特殊推广给用户。如软件和硬件的 EOL 信息，一些开合即用的报表和图形化展示功能，全文搜索等等功能其实都可以给客户带去意想不到的价值 。&lt;/p></description></item><item><title>21世纪最缺的是什么？</title><link>https://martinliu.cn/2010/04/15/cmdb-project-need-talents/</link><pubDate>Thu, 15 Apr 2010 16:04:28 +0000</pubDate><guid>https://martinliu.cn/2010/04/15/cmdb-project-need-talents/</guid><description>&lt;p>&lt;img src="http://www.photophoto.cn/m55/116/001/1160010007.jpg"
loading="lazy"
>&lt;/p>
&lt;p>21 世纪最缺的是人才，在 ITIL 项目中更是重要。特别是 CMDB 项目，项目团队人员构成是呈金字塔型。&lt;/p>
&lt;p>最顶端的人是 Project Executive Board“项目执行委员会”，简称 PEB，它就像是一个公司董事会；它对 CMDB 项目的目标、预算、工期、项目变更等负责。PEB 人员数量应愈少愈好，不过下面的个角色也是缺一不可。首先，要请至少一个 C level 的人加入，比如数据中心的 CIO。其次，关键利益干系人，它们是 CMDB 的价值的主要承载者，叫好和批评项目成果的都会是它们。然后是 CMS/CMDB 系统的负责人，它们对 CMDB 的规划、维护和之后的发展最重要。最后是项目实施资源的主要提供方领导，说白了他就是出人出力的部门，今后项目的执行和实施都靠他们。所以 PEB 的人数在 4 人左右。他们是相关部门的领导。我在最近的项目实施中，也遇到了几个问题，需要去找客户的老板来拍，也就是找到 PEB 的人决策。其实之前也听到其他同事在项目过程中，曾经感慨道“客户的领导还真辛苦，大事小情都需要替下面做决策，他们的脑袋真禁拍！”。国内的管理者的确挺辛苦的，毕竟所带领的团队都还比较的年轻，这也是国内 IT 管理的成熟度低的一个体现。&lt;/p>
&lt;p>金字塔下面的人就是都是我们的天天加班、做牛做马的辛劳工作的实施人员了。没有规矩不能成方圆，实施团队的技术素质和构成、团队沟通等都是至关重要的。对项目的质量，项目工期都有非常重要的影响。金字塔下面的兄弟姐妹都是一条船上的人，大家要互相配合才能完成项目的各项工作；在这个过程中没有一个船老大也是不行的，船老大就是项目经理。对 CMDB 的项目经理的要求可不低，重要有以下几点：&lt;/p>
&lt;ul>
&lt;li>Planning skills&lt;/li>
&lt;li>IT service management background&lt;/li>
&lt;li>Previous involvement in building a database&lt;/li>
&lt;li>ITIL Manager’s certification&lt;/li>
&lt;li>Ability to make decisions&lt;/li>
&lt;li>Capabilities to motivate staff&lt;/li>
&lt;li>Ability to blend a team&lt;/li>
&lt;li>Strength of character to lead a team&lt;/li>
&lt;li>Capacity to present results and status of project to sponsors and stakeholders&lt;/li>
&lt;li>Self-motivation&lt;/li>
&lt;li>Ability to communicate instructions to the project team (from step by step to build a cmdb)&lt;/li>
&lt;/ul>
&lt;p>项目实施工程应该具备很多的必要素质。CMDB 产品是一个复杂的应用系统，必须有人对它的技术细节非常熟悉，包括应用安装、配置和客户化。这个技能应该是核心中的核心，对产品利用的好，就能减少二次开发的工作量，就能最大发挥产品的原本功能，从而规避项目风险。产品的二次开发技能也是另一个必要因素，这是由于中国用户的特点决定的，对于任何一个大型的 ITSM 项目，国内没有不对产品做二次开发的。程序开发技能也很重要，Java/JSP 开发人员是必须的，他们还需要懂得 html、xml、sql 等技术。如果能在有操作系统和数据库专家就在好不过了，在系统出现性能故障，系统需要全面备份和恢复的时候，数据库专家和系统专家的参与能让事情经行的更高效，更快，不至于由于系统不可用导致的窝工。系统能更安全，能更放心的使用和开发。下面的一些技能是充分条件，包括 ITIL 认证、ITSM 流程的知识背景和项目经验。&lt;/p>
&lt;p>CMDB 项目对实施人员的要求是很高的，实施前要选合适的人；想要追求高品质的项目质量，就需要网络业内的专业的实施专家顾问、有经验的项目经理和合格的项目实施工程师。从这个角度上讲，21 世纪 ITSM 项目最缺的可见是 CMDB 人才；呵呵这纯粹是我的笑谈，不过您要组建一个 CMDB 项目团队的话，挑选人员的时候请务必擦亮眼睛。&lt;/p></description></item><item><title>CMDB需求分析之最佳实践</title><link>https://martinliu.cn/2010/03/29/cmdb-requirement-analysis-practice/</link><pubDate>Mon, 29 Mar 2010 15:19:20 +0000</pubDate><guid>https://martinliu.cn/2010/03/29/cmdb-requirement-analysis-practice/</guid><description>&lt;p>[singlepic id=4 w=320 h=240 mode=watermark float=right]今天终于移师厦门开发中心，这意味着我所经历的史上最长 CMDB 需求分析基本告一阶段，也意味着 CMDB 的构建、集成、定制和 测试工作也徐徐拉开了大幕。&lt;/p>
&lt;p>回忆前三个月所做的的需求分析工作，虽然各项调研和讨论工作进行的缓慢，不过细致的工作最终还是换回了令人满意的成果，起码我是这么认为。&lt;/p>
&lt;p>需求分析的过程是对需求的重新整理、重新定义和梳理。项目的立项并不意味着项目目标树立的精准，项目范围控制的合理。实际需求可以在实施的初期阶段来重定义，从新分析，着觉得不是浪费时间。而且这一点对于中国用户至关重要。国内很多项目都是资金或者预算驱动的，先有需求，通过需求推到出项目的价值，在通过项目的投资回报率申报项目预算的过程在国内是很少见得。国内的项目往往是有多少钱需要花，那么大家在来看，如何把需求花到极致，达到最大的产出。这也是很多需求分析做的贪多、贪大、求全的根源，这样做的好处是在一个项目周期内就把需求实现的尽善尽美（愿望是这样），坏处是：可能导致厂商和服务商的服务成本超支，从而造成的项目质量降低，从用户角度来说一次性接受一大堆的系统功能，负担重，接受度低，同时客户满意度低，项目满意度差。&lt;/p>
&lt;p>我认为较好的最佳实践还要抓项目的主要目标，抓需要实现的主要价值点，抓重点放弃那些可做可不做的功能。懂得放弃的人才懂得获得。把所有的功能需求做成能够分批、分期上线的成果；确保让系统用户能 buy in 每一个阶段性成果，不要奢望给用户带来革命性的提高，由于那样也意味着，你对他们当前工作方式的影响是巨大的，没有用户愿意接受巨变。&lt;/p>
&lt;p>需求分析时，从技术上讲，对会议组织人要求很高。需要此人能非常熟悉 CMDB 项目实施的方法论，需要此人能够非常熟悉产品的各个功能点，需要引导有效的需求分析会议。在白板上尽可能多的画图，用 Visio 或者 ppt 等工具尽量多的讲解各种架构图、功能图、流程图具有事半功倍的效果。不管会议上您可能收到怎样的抱怨、抵制、反对；stakeholder 的反馈将是你最宝贵的收获。没有互动和反馈的需求分析会是相当无聊和浪费时间的。切忌在大型的企业中，要慎重地计划每一次需求分析会，理由也很简单，企业组织越大，沟通的成本也越高。需求分析沟通的效率和成功完全取决于 CMDB 项目执行的方法论，取决于分析引导人的各种项目背景经验，还取决于对客户状况了解和上手的速度。&lt;/p></description></item><item><title>资产CI的一生</title><link>https://martinliu.cn/2009/12/13/service-asset-ci-life-cycle/</link><pubDate>Sun, 13 Dec 2009 07:45:00 +0000</pubDate><guid>https://martinliu.cn/2009/12/13/service-asset-ci-life-cycle/</guid><description>&lt;p>在 ITIL v3 以后，配置管理进化为“服务资产和配置管理 SACM”，换句话说，资产和配置管理不分家。两个流程应该是融合的。从微观上看资产管理设计到 CI 的所有生命周期状态，而这个服务资产在 CMDB 中出现的状态为整个生命周期中的一部分。&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;img src="http://www.butterfliesandart.com/Butterfly_Life_Cycle/Lifecycle3large.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->最好能通过资产管理为统一入口，来完成对 CMDB 中资产的生命周期管理。例如：一台服务器在到货以后，完成资产入库后，就应该在 CMDB 中自动创建 CI，在上架部署了软件后，有配置资产自动采集工具，采集回详细配置信息后，资产状态就自动变为“部署”，当在运行维护中服务器宕机或者维护时，在资产管理中也能看到更新的信息。下面是建议的服务资产的生命周期状态:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>CMDB选型解密</title><link>https://martinliu.cn/2009/11/19/how-to-select-a-cmdb/</link><pubDate>Thu, 19 Nov 2009 16:32:22 +0000</pubDate><guid>https://martinliu.cn/2009/11/19/how-to-select-a-cmdb/</guid><description>&lt;p>自打承接了《Step by Step Guide to Building a CMDB (Updated for ITIL V3)》的翻译工作之后，由于平时工作太忙，翻译工程只能在业余时间完成；现在渐渐感到了此项工作的压力，每每想到读者对英文翻译版本读物的高期望和要求时，就愈加感到此项工作责任之重。不过本书对我来说还是一剂很好的补品，对我最近的 ITSM 项目都有直接的借鉴和指导作用。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->说来此书有很多实用且精彩之处，相信读了英文原版的人更能有所体会。我忍不住想把其中的部分内容提前与你们探讨，这里想与你们分享如下两个内容。&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;a class="link" href="http://www.flickr.com/photos/liuzheng/4117747508/" target="_blank" rel="noopener"
>&lt;img src="http://farm3.static.flickr.com/2604/4117747508_d3d109c936.jpg"
loading="lazy"
alt="CMDB core functions for consideration"
>&lt;/a>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->上图还给所有 CMDB 用户一个清晰地 CMDB 功能点考察点，CMDB 作为业务服务管理的核心，各个厂商其实并没有达成解决方案功能的标准和共识。通常情况下厂商提供的 CMDB 产品的发展和起源有以下几种情况：1）按照 ITIL 中对 CMDB 的需求和标准从无到有开发的标准 CMDB 产品；2）伴随变更流程或者业务影响管理而开发的 CMDB 功能模块；3）伴随配置自动化发现工具而开发的相应 CMDB 功能模块；4）应资产管理或者监控工具扩展而生的 CMDB 功能产品。用户在挑选 CMDB 产品的时候一定要明确 CMDB 的核心功能，除了以上功能外，其他的附加功能可能是 nice to have 的功能，而非必须。本图位于原版书的 134 页，如果您对我的翻译有建议请留言，多谢！&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;a class="link" href="http://www.flickr.com/photos/liuzheng/4117761602/" target="_blank" rel="noopener"
>&lt;img src="http://farm3.static.flickr.com/2639/4117761602_c0bd1ffe63.jpg"
loading="lazy"
alt="Example of vendor scoring system"
>&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>上表为评估一个 CMDB 产品厂商的综合打分评价表样例。在选择并且评测一个 CMDB 厂商时，需要仔细考察的产品功能共有 8 点。用户需要注意的是一定要搞清楚其中的每一个功能是否是由厂商的 CMDB 产品的相关模块所提供的，如果不是的话需要搞清楚，每个功能是否是 CMDB 的外围或者其他产品模块，或者二次开发实现的。如果是这样的话，这种解决方案可能不是一套集成统一的解决方案，可能出现其他附加非 CMDB 产品的采购，可能在实施阶段付出不必要的集成和开发费用。虽然这些潜在因素在采购和实施阶段可能是隐形出现的。征集上表中相关术语的中文翻译：Weighted ，Weighted Rating Score，Total Weighted Score。有好的建议请留言。本图位于原版书籍的 141 页。&lt;/p></description></item><item><title>手把手教您构建CMDB/CMS</title><link>https://martinliu.cn/2009/10/17/step-by-step-guide-to-building-a-cmdb/</link><pubDate>Sat, 17 Oct 2009 09:37:08 +0000</pubDate><guid>https://martinliu.cn/2009/10/17/step-by-step-guide-to-building-a-cmdb/</guid><description>&lt;p>If you have no idea about how to build a CMDB, you should check out this document. &lt;img src="http://media.cms.bmc.com/images/products-graphics-logo-atrium.gif"
loading="lazy"
>&lt;!-- raw HTML omitted -->It come from &lt;a class="link" href="http://www.bmc.com/products/product-listing/53556216-141391-2117.html" target="_blank" rel="noopener"
>http://www.bmc.com/products/product-listing/53556216-141391-2117.html&lt;/a>&lt;!-- raw HTML omitted -->Download it: &lt;a class="link" href="http://documents.bmc.com/products/documents/60/54/96054/96054.pdf" target="_blank" rel="noopener"
>Step by Step Guide to Building a CMDB (Updated for ITIL V3)&lt;/a> (pdf)&lt;!-- raw HTML omitted -->该《手把手 CMDB/CMS 构建指导手册》包括了配置管理数据库/系统建设的所有相关流程、技术和指导性建议。如果你有 CMDB 的建设意向，该手册非常值得仔细阅读。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->欢迎留下一个反馈，投票或者留言都行。&lt;!-- raw HTML omitted -->[poll id=&amp;ldquo;8&amp;rdquo;]&lt;/p></description></item><item><title>MartinMarks for 29th August</title><link>https://martinliu.cn/2009/08/29/martinmarks-for-29th-august/</link><pubDate>Sat, 29 Aug 2009 16:27:38 +0000</pubDate><guid>https://martinliu.cn/2009/08/29/martinmarks-for-29th-august/</guid><description>&lt;p>&lt;strong>&lt;a class="link" href="http://www.cio.com/article/437682/New_IT_Job_CMDB_Manager/1" target="_blank" rel="noopener"
>New IT Job: CMDB Manager&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->从此 IT 部门有多了一个职位 CMDB 经理，不过某人的工作量加倍了也没准哈哈，从这个文章中可以看出这并不是一个可有可无的职位，而且 CMDB 的建设和推广，以及管理和其他的 ITIL 流程没有区别，需要结合技术、流程和人老三样，而且要再次改造人们对于配置管理的行为方式和文化了。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.forrester.com/Research/Document/Excerpt/0,7211,44798,00.html" target="_blank" rel="noopener"
>Role Overview: CMDB Manager&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->CMDB 经理负责管理和维护您的 CI，工作内容都有了，CIT/CTO 招不招这个人由您。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.networkworld.com/news/2006/073106-configuration-management-database.html" target="_blank" rel="noopener"
>CMDBs reduce costs, automate tasks&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->CMDB 更多的不是一种技术，更多的是流程，联邦技术让您从一个集中的 CMDB 来访问这个多元化多变的世界。CMDB 信息需要多种来源、产品和工具。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.itskeptic.org/itil-cmdb-skeptic" target="_blank" rel="noopener"
>Top 10 reasons NOT to implement CMDB&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->不去实施 CMDB 的 10 个理由&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://blog.evergreensys.com/post/2007/05/31/Top-Ten-Reasons-to-Implement-a-CMDB.aspx" target="_blank" rel="noopener"
>Top Ten Reasons to Implement a CMDB&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->实施 CMDB 的 10 个理由&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.networkworld.com/newsletters/nsm/2007/0305nsm2.html" target="_blank" rel="noopener"
>The federated CMDB: Getting past the hype to the good stuff &lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->cmdbf 标准的实施在各家产品中尚处于开始阶段，是否大家都会照着做呢。联邦让所有的配置数据更易访问。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>Logo Mark&lt;/strong>&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://www.itsmcommunity.org/" target="_blank" rel="noopener"
>&lt;img src="http://www.itsmcommunity.org/themes/itsmcommunity/banner.jpg"
loading="lazy"
alt="ITSM Community"
>&lt;/a>&lt;/p></description></item><item><title>CMS/CMDB 配置管理系统和发现工具</title><link>https://martinliu.cn/2009/07/15/cms-cmdb-and-discovery-tools/</link><pubDate>Wed, 15 Jul 2009 03:45:03 +0000</pubDate><guid>https://martinliu.cn/2009/07/15/cms-cmdb-and-discovery-tools/</guid><description>&lt;p>最近的一些 CMDB 项目和测试中都用到和测到了自动发现工具，很多用户对此的理解和看法还不是很到位。&lt;img src="http://www.re-soft.com/images/viewscreen.jpg"
loading="lazy"
>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->**首先：“自动化配置和关系发现工具是什么？” **&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->它是 CMS 工具集当中的数据采集工具。 从产品名称上看，往外都带 DDM，它是 Discovery Dependency Mapping 的缩写。意思就是帮你发现 CI 和 CI 之间关系的工具。很多用户的各种 IT 管理工具都可以自动发现网络、服务器和应用的配置项以及之间的关系，那么为什么还需要在购买一个新的发现工具呢？其实发现工具解决的真实发现工具不统一和发现数据不统一的问题，更重要的是它可以发现配置项之间的依赖和影响关系。对于一个数据中心来说，变更会经常发生，那么一套应用运行了一段时间之后，你很难准确的说出它都连接了那些其他相关的设备，很难理解它当前的部署状态。我们希望发现工具能帮我们更好的洞察当前 IT 基础架构的构成，应用对设备的依赖，底层 IT 服务对业务的影响。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->**其次：“它是如何工作的？” **&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->它的工作原理和其他所有的管理软件也没什么太大的差异。基本上讲有两种技术：无代理发现和有代理发现；三种产品形式：纯粹无代理扫描方式、纯有代理方式和混合方式。无代理采集必须依赖被采集设备的开放协议，常用的采集协议有：snmp,wmi,telnet,ssh,jmx,http 等。往往需要在被采集设备上配合一定的账号和权限。采集动作往往是定时、周期性或者触发式执行。扫描结果返回一个数据库中，准备向 CMDB 同步。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>再次：“它是 CMDB 必须的工具么？”&lt;/strong>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->对于下面几种情况我个人认为它是一个必的工具：1）数据中心用户，服务器和应用成百上千套，变更每周都会进行，新业务系统增长快。CMDB 需要使用它来自动更新配置项信息。2）应用多是多层的复杂应用，CI 之间依赖关系复杂，物理连接图已经不足够用来做影响分析，CMDB 需要它来自动化维护配置自己的关联关系，通过它可以减少进 70%的手工工作量。从国外的一些项目经验上来看，50%的 CMDB 用户并没有使用配置自动发现工具，他们使用的配置数据多是监控管理系统中已有的，CI 间的关系靠手工维护。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>最后：“它是如何与 CMDB 同步的？”&lt;/strong>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->有些厂商的 CMDB 是从发现工具上起家的，所以他们本来就使用的一个库，没有同步问题。有些厂商的发现工具是整合的其他产品工具或者收购的，他们自己的同步就需要一定得数据模型了。通过数据模型来解决数据字段映射的关系，一般来讲 CMDB 中会有数据模型 CDM，发现工具同步的时候就以该模型为准，把 CI 和关系经过一定的过滤条件同步到 CMDB 中。不同厂商的发现工具和 CMDB 如果需要同步的话，需要满足起码这样几点需要：CMDB 必须有标准的数据模型来做数据映射；需要有某种数据集成和同步的工具来连接两个数据库；CMDB 中需要具有强大的数据调和功能来处理发现工具带来的数据。&lt;/p></description></item><item><title>CMDB实施的几种误区</title><link>https://martinliu.cn/2009/07/04/cmdbe5ae9ee696bde79a84e587a0e7a78de8afafe58cba/</link><pubDate>Sat, 04 Jul 2009 05:44:02 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/cmdbe5ae9ee696bde79a84e587a0e7a78de8afafe58cba/</guid><description>&lt;p>&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/266/26670/2008/11/itilv3model.jpg"
loading="lazy"
alt="itilv3model"
>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->上面是 ITIL v3 的定义，CMDB 的定义和 v2 没有变化。可以看出 CMDB 是一个存储配置记录的数据库，非常多的用户一拍脑门“不就是一个数据库么！我们也可以自己开发一个的。”。这样的情况下，IT 组织的不同部门都可能会各自立门户，开发自己的配置管理信息库；例如：资产管理、终端分发和管理、机房管理等等。数据重复、数据不一致、配置信息不对称；无法得到跨部门和系统的报告。所以 V3 提出了 CMS 系统，它是 CMDB 系统的下一代管理系统。CMS 系统需要 具有对现有信息资料的兼容性，CMS 的建立不能忘记过去；一定要集成已有配置信息。&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://lh6.ggpht.com/_KU0istEHv9w/Sb5fe4XU89I/AAAAAAAABWA/gqfJomNUHhM/snap008.jpg" target="_blank" rel="noopener"
>&lt;img src="http://lh6.ggpht.com/_KU0istEHv9w/Sb5fe4XU89I/AAAAAAAABWA/gqfJomNUHhM/snap008.jpg"
loading="lazy"
>&lt;/a>错误一：配置信息是一个独立的配置管理系统，由专人负责数据的更新和维护，手工的管理和维护所有数据。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://lh6.ggpht.com/_KU0istEHv9w/Sb5feqLlKaI/AAAAAAAABV4/rmdsoBoBuiA/snap007.jpg" target="_blank" rel="noopener"
>&lt;img src="http://lh6.ggpht.com/_KU0istEHv9w/Sb5feqLlKaI/AAAAAAAABV4/rmdsoBoBuiA/snap007.jpg"
loading="lazy"
>&lt;/a>错误二：最配置管理就是要做的细，我要管理到机房中的每一根网线，CI 的属性需要设计的非常多，越细致越好。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://lh6.ggpht.com/_KU0istEHv9w/Sb5feHYTZVI/AAAAAAAABVw/4Ns9PAPzrJw/snap006.jpg" target="_blank" rel="noopener"
>&lt;img src="http://lh6.ggpht.com/_KU0istEHv9w/Sb5feHYTZVI/AAAAAAAABVw/4Ns9PAPzrJw/snap006.jpg"
loading="lazy"
>&lt;/a>错误三：我们自己有开发人员，我们有 CMDB 的需求，那就开始做吧，先看法着看看，不就是一个数据的增删改查么！！&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->配置管理或者说 CMDB 的建设可以说是目前，国内 ITIL 用户共同的瓶颈。ITIL 项目中实施最多的三个流程是：Incident Management、Problem Management 和 Change Management。已经实施完毕以上三个流程的用户问的最多的一个问题是：一个故障单、问题单或者变更单一定要和 CI 想关联么？在解决处理的时候寻找目标 CI 或者根源 CI 是必须的么？&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->如果 ITIL 是一种公共语言的话，那么 Incident Management、Problem Management 和 Change Management 等所有流程都是句式或者时态。而 CI 则是主语或者宾语，您觉得没有主语或者缺少宾语的句子，会传递怎么的信息呢？&lt;/p></description></item></channel></rss>
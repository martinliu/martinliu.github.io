<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fedora on Martin Liu's Blog</title><link>https://martinliu.cn/tags/fedora/</link><description>Recent content in Fedora on Martin Liu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 20 May 2024 23:30:38 +0800</lastBuildDate><atom:link href="https://martinliu.cn/tags/fedora/index.xml" rel="self" type="application/rss+xml"/><item><title>Atomic Host 原子主机最简测试</title><link>https://martinliu.cn/2015/07/18/atomic-host-e58e9fe5ad90e4b8bbe69cbae69c80e7ae80e6b58be8af95/</link><pubDate>Sat, 18 Jul 2015 13:29:45 +0000</pubDate><guid>https://martinliu.cn/2015/07/18/atomic-host-e58e9fe5ad90e4b8bbe69cbae69c80e7ae80e6b58be8af95/</guid><description>&lt;h2 id="环境准备">环境准备
&lt;/h2>&lt;p>本文使用笔记本电脑+KVM 虚拟化进行以下的测试过程，当然也可以用其它的操作系统加虚拟化软件的组合，测试机需要满足以下的条件：
测试虚拟机的建议配置 1C/2GB/10GB
虚拟机使用的网络需要能连接到互联网
虚拟机需要能加载光盘 iso 文件
可以执行起停虚拟机操作，能通过控制它登陆来做初始化配置&lt;/p>
&lt;p>本文测试机是 Lenovo T440s 笔记本电脑，安装的操作系统是 Fedora 22，使用 KVM 虚拟化，用 Virt-Manager 做 GUI 图形管理工具。建立了一个 NAT 的静态虚拟网络，虚拟机可以使用该网络来从互联网下载需要的文件包。&lt;/p>
&lt;p>下载 Fedora Atomic Host 虚拟机文件；下载页面： &lt;a class="link" href="http://www.projectatomic.io/download/" target="_blank" rel="noopener"
>http://www.projectatomic.io/download/&lt;/a> 点击绿色的下载按钮。下载 qcow2 格式的 Atomic Host 虚拟机文件。复制下载的文件到虚拟机运行的存储目录中，文件名可以是 master.qcow2，新测试虚拟机会基于它创建。&lt;/p>
&lt;p>在通过这个虚拟机模版文件生成测试机前，需要准备一个 init.iso 的文件，用来初始化测试机的主机名和初始用户密码。&lt;/p>
&lt;p>[bash]
[root@martin-fedora vm]# cat meta-data
instance-id: master
local-hostname: master.xenlab.com
[root@martin-fedora vm]# cat user-data
#cloud-config
password: smartvm
ssh_pwauth: True
chpasswd: { expire: False }
[root@martin-fedora vm]# genisoimage -output init.iso -volid cidata -joliet -rock user-data meta-data
I: -input-charset not specified, using utf-8 (detected in locale settings)
Total translation table size: 0
Total rockridge attributes bytes: 331
Total directory bytes: 0
Path table size(bytes): 10
Max brk space used 0
183 extents written (0 MB)
[/bash]&lt;/p>
&lt;p>以上的两个配置文件 meta-data 和 user-data，最后使用 genisoimage 命令生成出文件 init.iso。至此，Atomic Host 测试机的运行镜像文件和初始化配置文件都准备好了。&lt;/p>
&lt;h2 id="创建-atomic-host-测试虚拟机">创建 Atomic host 测试虚拟机
&lt;/h2>&lt;p>使用虚拟化的管理工具基于准备好的镜像文件（master.qcow2）创建测新的试虚拟机。在首次启动前，还需要添加光驱设备，指定光驱设备在启动时加载上文中创建的 init.iso 配置参数文件。
首次在虚拟管理工具上启动新创建的 Atomic Host 测试虚拟机，查看整个的启动过程。由于本文的测试网络不是 DHCP 的，因此测试机在启动后，还需要登陆虚拟机控制台，使用默认账户，用户名：fedora 用户，fedora 的密码在前面的配置文件中已经指定。静态 IP 地址参考的配置文件如下：&lt;/p>
&lt;p>[bash]
[fedora@master ~]$ cat /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=&amp;ldquo;eth0&amp;rdquo;
BOOTPROTO=&amp;ldquo;static&amp;rdquo;
ONBOOT=&amp;ldquo;yes&amp;rdquo;
TYPE=&amp;ldquo;Ethernet&amp;rdquo;
PERSISTENT_DHCLIENT=&amp;ldquo;yes&amp;rdquo;
IPADDR=192.168.10.42
NETMASK=255.255.255.0
BROADCAST=192.168.10.255
NETWORK=192.168.10.0
GATEWAY=192.168.10.1&lt;/p>
&lt;p>[fedora@master ~]$ cat /etc/resolv.conf&lt;/p>
&lt;h1 id="generated-by-networkmanager">Generated by NetworkManager
&lt;/h1>&lt;p>search xenlab.com
nameserver 192.168.10.1
nameserver 8.8.8.8
[fedora@master ~]$
[/bash]&lt;/p>
&lt;p>至此，Atomic Host 测试虚拟机初始化安装完毕。&lt;/p>
&lt;h2 id="atomic-host-基本操作">Atomic Host 基本操作
&lt;/h2>&lt;p>登陆 Atomic Host 测试虚拟机 master 之后首先需要测试是否能和互联网连接，ping 外部的网址，看是否能够正常解析。由于后面很多相关测试都需要从联网下载内容。
用 ssh 工具登陆之后，看下它：
[bash]
[fedora@master ~]$ cat /etc/redhat-release
Fedora release 22 (Twenty Two)
[fedora@master ~]$ uname -a
Linux master.xenlab.com 4.0.4-301.fc22.x86_64 #1 SMP Thu May 21 13:10:33 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
[fedora@master ~]$ dnf
bash: dnf: command not found
[fedora@master ~]$ yum
bash: yum: command not found
[/bash]&lt;/p>
&lt;p>根据以上显示发现它貌似就是一个 Fedora 22 的服务器，不过默认没有 dnf, yum 包管理工具，不过有 rpm。查询一下这个系统上有什么默认安装的软件包：根据 rpm -qa 结果显示，Atomic Host 虚拟机默认安装了 324 个软件包。下面初步尝试一下 Atomic Host 操作系统更新和管理的主要命令 atomic / rpm-ostree&lt;/p>
&lt;p>[bash]
[fedora@master ~]$ sudo atomic
usage: atomic [-h] {host,info,install,run,uninstall,update} &amp;hellip;&lt;/p>
&lt;p>Atomic Management Tool&lt;/p>
&lt;p>positional arguments:
{host,info,install,run,uninstall,update}
commands
host execute Atomic host commands
info display label information about an image
install execute container image install method
run execute container image run method
uninstall execute container image uninstall method
update pull latest container image from repository&lt;/p>
&lt;p>optional arguments:
-h, &amp;ndash;help show this help message and exit&lt;/p>
&lt;p>error: too few arguments
[fedora@master ~]$ sudo rpm-ostree
Usage:
rpm-ostree [OPTION&amp;hellip;] COMMAND&lt;/p>
&lt;p>Builtin Commands:
compose
upgrade
rebase
rollback
status
db&lt;/p>
&lt;p>Help Options:
-h, &amp;ndash;help Show help options&lt;/p>
&lt;p>Application Options:
&amp;ndash;version Print version information and exit&lt;/p>
&lt;p>error: No command specified&lt;/p>
&lt;p>[fedora@master ~]$ sudo atomic host status
TIMESTAMP (UTC) VERSION ID OSNAME REFSPEC&lt;/p>
&lt;ul>
&lt;li>2015-05-21 19:01:46 22.17 06a63ecfcf fedora-atomic fedora-atomic:fedora-atomic/f22/x86_64/docker-host
[fedora@master ~]$ sudo rpm-ostree status
[fedora@master ~]$ sudo atomic host
usage: atomic host [-h] {rollback,status,upgrade} &amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>positional arguments:
{rollback,status,upgrade}
host commands
rollback switch to alternate tree at boot
status list information about all deployments
upgrade upgrade to the latest Atomic tree if one is available&lt;/p>
&lt;p>optional arguments:
-h, &amp;ndash;help show this help message and exit&lt;/p>
&lt;p>error: too few arguments
[fedora@master ~]$
[/bash]&lt;/p>
&lt;p>下面使用 atomic host upgrade 来升级这个系统，使它运行在最新的补丁和版本下。这个过程需要下载 180+MB 的升级包，这个过程无法断点续传，但是可以任意中断。再次运行该命令后，可以重新从头下载，直到下载成功。下载成功并升级成功以后，重起操作系统。&lt;/p>
&lt;p>[bash]
[fedora@master ~]$ sudo atomic host upgrade
Updating from: fedora-atomic:fedora-atomic/f22/x86_64/docker-host&lt;/p>
&lt;p>0 metadata, 5051 content objects fetched; 183267 KiB transferred in 330 seconds
Copying /etc changes: 25 modified, 0 removed, 41 added
Transaction complete; bootconfig swap: yes deployment count change: 1
Changed:
avahi-autoipd-0.6.31-31.fc22.x86_64
avahi-libs-0.6.31-31.fc22.x86_64
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
tcpdump-14:4.7.4-2.fc22.x86_64
tzdata-2015e-1.fc22.noarch
udisks2-2.1.6-1.fc22.x86_64
Removed:
docker-storage-setup-0.0.4-2.fc22.noarch
pciutils-libs-3.3.0-1.fc22.x86_64
Added:
docker-selinux-1.7.0-6.git74e7a7a.fc22.x86_64
iptables-services-1.4.21-14.fc22.x86_64
kubernetes-master-0.20.0-0.3.git835eded.fc22.x86_64
kubernetes-node-0.20.0-0.3.git835eded.fc22.x86_64
python-pip-6.0.8-1.fc22.noarch
python-setuptools-17.1.1-3.fc22.noarch
Upgrade prepared for next boot; run &amp;ldquo;systemctl reboot&amp;rdquo; to start a reboot
[/bash]&lt;/p>
&lt;p>在 reboot 之后，这个系统就可以投入使用了。在启动的 GRUB 菜单上可以看到出现两个条目，默认进入最新的这个系统版本。&lt;/p>
&lt;p>[bash]
[fedora@master ~]$ sudo atomic host status
TIMESTAMP (UTC) VERSION ID OSNAME REFSPEC&lt;/p>
&lt;ul>
&lt;li>2015-07-15 23:33:20 22.61 db540a53ba fedora-atomic fedora-atomic:fedora-atomic/f22/x86_64/docker-host
2015-05-21 19:01:46 22.17 06a63ecfcf fedora-atomic fedora-atomic:fedora-atomic/f22/x86_64/docker-host
[/bash]&lt;/li>
&lt;/ul>
&lt;p>进入系统之后，我们看到上面这个命令输出，目前 Atomic Host 的操作系统有了两个版本，该系统可以从最新的系统回退或者回滚到旧的版本。可以认为它同时具有多个可以前后切换的操作系统版本。&lt;/p>
&lt;p>在一个 Atomic Host 上有两种软件交付方式：
rpm-ostree 管理部署和升级 host 系统自身的软件
Linux 容器（目前 Docker）提供很多容器来跑各种软件应用服务&lt;/p>
&lt;h2 id="运行第一个-docker-镜像">运行第一个 Docker 镜像
&lt;/h2>&lt;p>现在测试的是 Atomic Host 自身的管理工具，传统的 Linux 系统中，这个软件是用 rpm 包和系统服务的方式，被安装到被管理节点的，可是我们下面使用容器的技术来部署，也达到相同的管理功能。Cockpit 是之前介绍过的一款系统管理工具，兼具对 docker 的管理功能，它可以 Docker image 的形式被下载，并且运行在本机的一个专有权限（提权）的容器中。它可以作为 Atomic Host 的主机管理工具，对 Linix 系统管理不熟练的人可以使用这个图形工具，查看和监控系统的状态，并且可以管理容器中 Image。下面是安装和运行这个特殊功能容器的命令。&lt;/p>
&lt;p>[bash]
[fedora@a1 etc]$ sudo atomic run cockpit/ws
/usr/bin/docker run -d &amp;ndash;privileged &amp;ndash;pid=host -v /:/host cockpit/ws /container/atomic-run &amp;ndash;local-ssh
efd3cbbad8452ff394e1d1a0c309870634207538597ba0cead26d790510e7a5e
[/bash]&lt;/p>
&lt;p>上面这条命令执行完后，就可以在笔记本电脑的浏览器，输入网址，来访问这个工具，如： https://192.168.10.41:9090 登陆的用户名和密码是 Atomic Host 的 fedora 和它的密码。&lt;/p>
&lt;h2 id="hw-实战篇">HW 实战篇
&lt;/h2>&lt;p>不错 HW 就是 Hello World！它太有名了，掠过对它的介绍。现在可以让 docker 命令出场了。在命令行中不加任何参数，看下它的默认输出。输出一下它的版本信息。&lt;/p>
&lt;p>[bash]
[fedora@master ~]$ sudo docker version
Client version: 1.7.0.fc22
Client API version: 1.19
Package Version (client): docker-1.7.0-6.git74e7a7a.fc22.x86_64
Go version (client): go1.4.2
Git commit (client): 74e7a7a/1.7.0
OS/Arch (client): linux/amd64
Server version: 1.7.0.fc22
Server API version: 1.19
Package Version (server): docker-1.7.0-6.git74e7a7a.fc22.x86_64
Go version (server): go1.4.2
Git commit (server): 74e7a7a/1.7.0
OS/Arch (server): linux/amd64
[/bash]&lt;/p>
&lt;p>下面的实战内容是和过程如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>下载 fedora image&lt;/p>
&lt;/li>
&lt;li>
&lt;p>构建 httpd image&lt;/p>
&lt;/li>
&lt;li>
&lt;p>构建 HW 主页&lt;/p>
&lt;/li>
&lt;li>
&lt;p>构建并测试 HW 网站&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>具体的命令执行过程如下：&lt;/p>
&lt;h1 id="dependencies-resolved">[bash]
[fedora@master ~]$ sudo docker run -i -t fedora bash
Unable to find image &amp;lsquo;fedora:latest&amp;rsquo; locally
latest: Pulling from docker.io/fedora
ded7cd95e059: Already exists
48ecf305d2cf: Already exists
docker.io/fedora:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.
Digest: sha256:10ba981a70632d7764c21deae25c6521db6d39730e1dd8caff90719013858a7b
Status: Downloaded newer image for docker.io/fedora:latest
[root@f1c79aa4c931 /]# dnf update -y
Fedora 22 - x86_64 608 kB/s | 41 MB 01:09
Fedora 22 - x86_64 - Updates 439 kB/s | 12 MB 00:27
Last metadata expiration check performed 0:00:19 ago on Fri Jul 17 13:30:18 2015.
Dependencies resolved.
&lt;/h1>&lt;h1 id="package-arch-version-repository-size">Package Arch Version Repository Size
&lt;/h1>&lt;p>Installing:
python-pip noarch 6.0.8-1.fc22 fedora 1.7 M
python-setuptools noarch 17.1.1-3.fc22 updates 425 k
Upgrading:
bash x86_64 4.3.39-4.fc22 updates 1.6 M&lt;/p>
&lt;p>&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.&lt;/p>
&lt;h1 id="transaction-summary">Transaction Summary
&lt;/h1>&lt;p>Install 2 Packages
Upgrade 59 Packages
Total download size: 48 M
Downloading Packages:
(1/61): python-pip-6.0.8-1.fc22.noarch.rpm 434 kB/s | 1.7 MB 00:03
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.
Installed:
python-pip.noarch 6.0.8-1.fc22 python-setuptools.noarch 17.1.1-3.fc22&lt;/p>
&lt;p>Upgraded:
bash.x86_64 4.3.39-4.fc22 bash-completion.noarch 1:2.1-7.20150513git1950590.fc22
coreutils.x86_64 8.23-10.fc22 curl.x86_64 7.40.0-5.fc22
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
systemd.x86_64 219-19.fc22 systemd-libs.x86_64 219-19.fc22
tzdata.noarch 2015e-1.fc22&lt;/p>
&lt;p>Complete!
[root@f1c79aa4c931 /]#
[root@f1c79aa4c931 /]#
[/bash]
上面的过程下载和启动了一个 fedora，然后更新系统到最新的包，为安装 Web 服务器打好了基础。&lt;/p>
&lt;h1 id="dependencies-resolved-1">[bash]
[root@f1c79aa4c931 /]# dnf install -y &lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a>
Last metadata expiration check performed 0:06:11 ago on Fri Jul 17 13:30:18 2015.
Dependencies resolved.
&lt;/h1>&lt;h1 id="package-arch-version-repository-size-1">Package Arch Version Repository Size
&lt;/h1>&lt;p>Installing:
apr x86_64 1.5.1-3.fc22 fedora 111 k
apr-util x86_64 1.5.4-1.fc22 fedora 96 k
fedora-logos-&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a> noarch 22.0.0-1.fc22 fedora 33 k
&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a> x86_64 2.4.12-1.fc22 fedora 1.2 M
&lt;a class="link" href="httpd-filesystem" target="_blank" rel="noopener"
>httpd-filesystem&lt;/a> noarch 2.4.12-1.fc22 fedora 24 k
&lt;a class="link" href="httpd-tools" target="_blank" rel="noopener"
>httpd-tools&lt;/a> x86_64 2.4.12-1.fc22 fedora 87 k
mailcap noarch 2.1.44-1.fc22 fedora 36 k&lt;/p>
&lt;h1 id="transaction-summary-1">Transaction Summary
&lt;/h1>&lt;p>Install 7 Packages&lt;/p>
&lt;p>Total download size: 1.6 M
Installed size: 4.4 M
Downloading Packages:
(1/7): apr-1.5.1-3.fc22.x86_64.rpm 128 kB/s | 111 kB 00:00
(2/7): apr-util-1.5.4-1.fc22.x86_64.rpm 100 kB/s | 96 kB 00:00
(3/7): &lt;a class="link" href="httpd-filesystem-2.4.12-1.fc22.noarch.rpm" target="_blank" rel="noopener"
>httpd-filesystem-2.4.12-1.fc22.noarch.rpm&lt;/a> 123 kB/s | 24 kB 00:00
(4/7): mailcap-2.1.44-1.fc22.noarch.rpm 123 kB/s | 36 kB 00:00
(5/7): &lt;a class="link" href="httpd-tools-2.4.12-1.fc22.x86_64.rpm" target="_blank" rel="noopener"
>httpd-tools-2.4.12-1.fc22.x86_64.rpm&lt;/a> 185 kB/s | 87 kB 00:00
(6/7): fedora-logos-&lt;a class="link" href="httpd-22.0.0-1.fc22.noarch.rpm" target="_blank" rel="noopener"
>httpd-22.0.0-1.fc22.noarch.rpm&lt;/a> 151 kB/s | 33 kB 00:00
(7/7): &lt;a class="link" href="httpd-2.4.12-1.fc22.x86_64.rpm" target="_blank" rel="noopener"
>httpd-2.4.12-1.fc22.x86_64.rpm&lt;/a> 363 kB/s | 1.2 MB 00:03&lt;/p>
&lt;hr>
&lt;p>Total 264 kB/s | 1.6 MB 00:06
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
Installing : apr-1.5.1-3.fc22.x86_64 1/7
warning: Unable to get systemd shutdown inhibition lock
Installing : apr-util-1.5.4-1.fc22.x86_64 2/7
Installing : &lt;a class="link" href="httpd-tools-2.4.12-1.fc22.x86_64" target="_blank" rel="noopener"
>httpd-tools-2.4.12-1.fc22.x86_64&lt;/a> 3/7
Installing : fedora-logos-&lt;a class="link" href="httpd-22.0.0-1.fc22.noarch" target="_blank" rel="noopener"
>httpd-22.0.0-1.fc22.noarch&lt;/a> 4/7
Installing : mailcap-2.1.44-1.fc22.noarch 5/7
Installing : &lt;a class="link" href="httpd-filesystem-2.4.12-1.fc22.noarch" target="_blank" rel="noopener"
>httpd-filesystem-2.4.12-1.fc22.noarch&lt;/a> 6/7
Installing : &lt;a class="link" href="httpd-2.4.12-1.fc22.x86_64" target="_blank" rel="noopener"
>httpd-2.4.12-1.fc22.x86_64&lt;/a> 7/7
Verifying : &lt;a class="link" href="httpd-2.4.12-1.fc22.x86_64" target="_blank" rel="noopener"
>httpd-2.4.12-1.fc22.x86_64&lt;/a> 1/7
Verifying : apr-1.5.1-3.fc22.x86_64 2/7
Verifying : apr-util-1.5.4-1.fc22.x86_64 3/7
Verifying : &lt;a class="link" href="httpd-filesystem-2.4.12-1.fc22.noarch" target="_blank" rel="noopener"
>httpd-filesystem-2.4.12-1.fc22.noarch&lt;/a> 4/7
Verifying : &lt;a class="link" href="httpd-tools-2.4.12-1.fc22.x86_64" target="_blank" rel="noopener"
>httpd-tools-2.4.12-1.fc22.x86_64&lt;/a> 5/7
Verifying : mailcap-2.1.44-1.fc22.noarch 6/7
Verifying : fedora-logos-&lt;a class="link" href="httpd-22.0.0-1.fc22.noarch" target="_blank" rel="noopener"
>httpd-22.0.0-1.fc22.noarch&lt;/a> 7/7&lt;/p>
&lt;p>Installed:
apr.x86_64 1.5.1-3.fc22 apr-util.x86_64 1.5.4-1.fc22 fedora-logos-&lt;a class="link" href="httpd.noarch" target="_blank" rel="noopener"
>httpd.noarch&lt;/a> 22.0.0-1.fc22 &lt;a class="link" href="httpd.x86_64" target="_blank" rel="noopener"
>httpd.x86_64&lt;/a> 2.4.12-1.fc22
&lt;a class="link" href="httpd-filesystem.noarch" target="_blank" rel="noopener"
>httpd-filesystem.noarch&lt;/a> 2.4.12-1.fc22 &lt;a class="link" href="httpd-tools.x86_64" target="_blank" rel="noopener"
>httpd-tools.x86_64&lt;/a> 2.4.12-1.fc22 mailcap.noarch 2.1.44-1.fc22&lt;/p>
&lt;p>Complete!
[root@f1c79aa4c931 /]#
[root@f1c79aa4c931 /]# exit
exit
[fedora@master ~]$
[/bash]
上面在一个互动的 Bash 里面完成了 httpd 的安装，exit 命令之后，容器会停止运行，可以把这个停下来的镜像文件用下面的命令提交到本地的 image 库中。&lt;/p>
&lt;p>[bash]
[fedora@master ~]$ sudo docker ps -a
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
f1c79aa4c931 fedora &amp;ldquo;bash&amp;rdquo; 17 minutes ago Exited (130) 3 minutes ago desperate_franklin
[fedora@master ~]$ sudo docker commit f1c79aa4c931 fedora-&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a>
c77c91fd4af681e736afc2ec76fc316732e25f52f6f3dd8aa97c973f28c55eb2
[fedora@master ~]$ sudo docker images
REPOSITORY TAG IMAGE ID CREATED VIRTUAL SIZE
fedora-&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a> latest c77c91fd4af6 25 seconds ago 605.7 MB
docker.io/cockpit/ws latest 9a4331b694a6 3 weeks ago 572.2 MB
docker.io/fedora latest ded7cd95e059 7 weeks ago 186.5 MB
[/bash]&lt;/p>
&lt;p>第一个名为 “fedora-httpd” 的就是刚才安装完毕之后，停止的 docker image，用 commit 提交到本第的库中待用。下面开始准备网站的内容，其实只有一个主页，上只有一句话“HW”&lt;/p>
&lt;p>[bash]
[fedora@master ~]$ pwd
/home/fedora
[fedora@master ~]$ vi index.html
[fedora@master ~]$ cat index.html
Hello World!
[fedora@master ~]$ tar -cf mysite.tar index.html
[fedora@a1 ~]$ ls
Dockerfile index.html mysite mysite.tar
[fedora@master ~]$ vi Dockerfile
[fedora@master ~]$ cat Dockerfile
FROM fedora-&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a>
MAINTAINER MartinLiu&lt;a class="link" href="mailto:martin@aws-faq.com" >martin@aws-faq.com&lt;/a>&lt;/p>
&lt;h1 id="add-the-tar-file-of-the-web-site">Add the tar file of the web site
&lt;/h1>&lt;p>ADD mysite.tar /tmp/&lt;/p>
&lt;h1 id="docker-automatically-extracted-so-move-files-to-web-directory">Docker automatically extracted. So move files to web directory
&lt;/h1>&lt;p>RUN cp /tmp/index.html /var/www/html&lt;/p>
&lt;p>EXPOSE 80&lt;/p>
&lt;p>ENTRYPOINT [ &amp;ldquo;/usr/sbin/&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&amp;rdquo;&lt;/a> ]
CMD [ &amp;ldquo;-D&amp;rdquo;, &amp;ldquo;FOREGROUND&amp;rdquo; ]
[/bash]&lt;/p>
&lt;p>上面这段命令中最重要的是 Dockerfiler 文件，这个文件的语法还有很多，以上是一个最简化的例子。使用它可构建一个具有静态页面内容的网站。下面开始构建这个网站的 Docker image。&lt;/p>
&lt;p>[bash]
[fedora@a1 ~]$ sudo docker build -rm -t mysite .
Warning: &amp;lsquo;-rm&amp;rsquo; is deprecated, it will be replaced by &amp;lsquo;&amp;ndash;rm&amp;rsquo; soon. See usage.
Sending build context to Docker daemon 31.74 kB
Sending build context to Docker daemon
Step 0 : FROM fedora-&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a>
&amp;mdash;&amp;gt; 05ce6f68d3f2
Step 1 : MAINTAINER A D Ministator email: &lt;a class="link" href="mailto:martin@aws-faq.com" >martin@aws-faq.com&lt;/a>
&amp;mdash;&amp;gt; Running in 7ee99e26ab76
&amp;mdash;&amp;gt; 03cc8c0deff1
Removing intermediate container 7ee99e26ab76
Step 2 : ADD mysite.tar /tmp/
&amp;mdash;&amp;gt; 52abfb1966ad
Removing intermediate container e6c20f7ca5ed
Step 3 : RUN mv /tmp/* /var/www/html
&amp;mdash;&amp;gt; Running in ef455353caff
&amp;mdash;&amp;gt; 6e24f9a9ea6f
Removing intermediate container ef455353caff
Step 4 : EXPOSE 80
&amp;mdash;&amp;gt; Running in 252b59576b54
&amp;mdash;&amp;gt; 7dd7c049c9d2
Removing intermediate container 252b59576b54
Step 5 : ENTRYPOINT /usr/sbin/&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a>
&amp;mdash;&amp;gt; Running in 572c3dafa53a
&amp;mdash;&amp;gt; fa01c160e081
Removing intermediate container 572c3dafa53a
Step 6 : CMD -D FOREGROUND
&amp;mdash;&amp;gt; Running in b133650a6e18
&amp;mdash;&amp;gt; f828e1847160
Removing intermediate container b133650a6e18
Successfully built f828e1847160&lt;/p>
&lt;p>[fedora@master ~]$ sudo docker images
REPOSITORY TAG IMAGE ID CREATED VIRTUAL SIZE
mysite latest 1bd6d7c1970f 45 seconds ago 605.7 MB
fedora-&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a> latest c77c91fd4af6 18 minutes ago 605.7 MB
docker.io/cockpit/ws latest 9a4331b694a6 3 weeks ago 572.2 MB
docker.io/fedora latest ded7cd95e059 7 weeks ago 186.5 MB&lt;/p>
&lt;p>[fedora@master ~]$ sudo docker run -d -P mysite
6122ac7d4dff6cc73c4abc1523ac5dd02606c90d4e42da64823942d787694c1f
[fedora@master ~]$ sudo docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
6122ac7d4dff mysite &amp;ldquo;/usr/sbin/&lt;a class="link" href="httpd" target="_blank" rel="noopener"
>httpd&lt;/a> -D 37 seconds ago Up 35 seconds 0.0.0.0:32768-&amp;gt;80/tcp evil_bardeen
e5032443ab69 cockpit/ws &amp;ldquo;/container/atomic-r 16 minutes ago Up 16 minutes stoic_sammet
[fedora@master ~]$ curl localhost:32768
Hello World!
[/bash]&lt;/p>
&lt;p>在最后的命令行输出中，成功的看到了 Hello World!的出现。用的是 curl 的命令行 web 浏览器。&lt;/p></description></item><item><title>Ovirt 服务器虚拟化测试</title><link>https://martinliu.cn/2015/07/12/ovirt-e69c8de58aa1e599a8e8999ae68b9fe58c96e6b58be8af95/</link><pubDate>Sun, 12 Jul 2015 11:16:44 +0000</pubDate><guid>https://martinliu.cn/2015/07/12/ovirt-e69c8de58aa1e599a8e8999ae68b9fe58c96e6b58be8af95/</guid><description>&lt;h1 id="ovirt-服务器虚拟化测试">Ovirt 服务器虚拟化测试
&lt;/h1>&lt;p>本文安装和测试的软件是 Ovirt+KVM 的服务器虚拟化，这两个项目是红帽 RHEVM+KVM 服务器虚拟化的上游社区产品。可以通过这个文档清晰的了解到红帽服务器虚拟化产品的大体功能，基本特点。本测试文档使用的是 Centos7+社区 yum 源；因此是最新的 ovirt 和 kvm 的功能。如果是正式的企业级需求测试，请使用光纤或者传统存储，从而达到和 vmware 等商业产品最好的类比测试。尽量避免使用嵌套 kvm 虚拟化的方式，除非您很熟悉 Linux，使用两个笔记本是最简单的测试环境。&lt;/p>
&lt;p>下图是 Ovirt 服务器的详细架构图。其中的 ovirt-engine 是本文安装和部署的部分，是用一个 centos7 的虚拟机安装的。Host1 也是用一个 centos7 的虚拟机安装的。半年之前我也配置过一次嵌套 kvm，根本是一头雾水，而且还没有成功，不过这次的配置过程却这么简单容易，就正常工作了。希望简单一点的人，可以把 Host1 用物理机来安装，也会节省很多时间。&lt;/p>
&lt;p>[caption id=&amp;ldquo;attachment_53901&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;512&amp;rdquo;]&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/07/ovirt-512px-Architecture.png"
loading="lazy"
alt="ovirt 架构图"
> ovirt 架构图[/caption]&lt;/p>
&lt;h2 id="kvm-嵌套虚拟化准备">KVM 嵌套虚拟化准备
&lt;/h2>&lt;p>在测试 KVM 服务器虚拟化的过程中，如果您能有独立的物理机跑 Hypervisor，那么您可以忽略本节。至今进入 ovirt 的安装。  下面的测试的物理机是 Lenovo T440s 笔记本，运行的 Fedora 22 操作系统，使用 KVM manager 做虚拟机的管理工具。本次测试用到两个虚拟机：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>ovirt: 运行服务器虚拟化的管理机 ovirt，这个程序类似于 vmware 的 vcenter。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ovirt-host : 用来被 ovirt 管理的 hypervisor；使用 kvm 嵌套 kvm 的方式，来跑虚拟机。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>确认本机的服务器虚拟机 CPU Bios 配置正常。&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;p>egrep -c &amp;lsquo;(vmx|svm)&amp;rsquo; /proc/cpuinfo&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;p>本机是 i5 的 CPU，双核开启超线程，显示为 4。还没有启用嵌套 KVM 的虚拟机，需要新建下面这个配置文件，操作系统不同，可能稍微不同，下面是以 Fedora 22 为例。&lt;/p>
&lt;p>vi /etc/modprobe.d/kvm-nested.conf
编辑以上文件，增加下面这行参数即可
options kvm_intel nested=1&lt;/p>
&lt;p>运行下面的命令，为操作系统内核加載此功能。&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;p>modprobe -r kvm_intel # unload
modprobe kvm_intel # reload again&lt;/p>
&lt;p>cat /sys/module/kvm_intel/parameters/nested
Y&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;p>用上面最后的 cat 的命令确认嵌套功能启用正常，看到的是 Y 即可。&lt;/p>
&lt;p>查看本机虚拟化的 Cpu 相关参数。&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;p>[root@martin-fedora vm]# virsh capabilities | egrep &amp;ldquo;/model|/vendor&amp;rdquo;
&lt;!-- raw HTML omitted -->Westmere&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->Intel&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->none&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->dac&lt;!-- raw HTML omitted -->
[root@martin-fedora vm]#&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;p>到此，物理机的相关准备工作完成。下面使用 Martin&amp;rsquo;s Perfect CentOS7 模板新建一个 2C/4Gd 的虚拟机 ovirt-host; 用这个虚拟机作为跑虚拟机的 hypervisor 把建立好的虚拟机先别开机，需要对它的配置做修改。编辑 ovirt-host 虚拟机的配置，给这个嵌套的 KVM hypervisor 增加和物理机相同的 cpu 属性。&lt;/p>
&lt;p>virsh edit ovirt-host&lt;/p>
&lt;p>本嵌套 kvm 的虚拟机 cpu 参数如下，如果测试的物理机使用非 i5 的 CPU， 实际的配置参数应该和下面不同。&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>[/bash]&lt;/p>
&lt;p>保存配置，启动这个虚拟机，配置好主机名和网络 ip 地址。安装 ovirt yum 源。做 yum update 之后，reboot 待用。&lt;/p>
&lt;p>[bash]
yum -y update
yum install &lt;a class="link" href="http://plain.resources.ovirt.org/pub/yum-repo/ovirt-release35.rpm" target="_blank" rel="noopener"
>http://plain.resources.ovirt.org/pub/yum-repo/ovirt-release35.rpm&lt;/a>&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;h2 id="安装-ovirt-服务器虚拟化管理机">安装 ovirt 服务器虚拟化管理机
&lt;/h2>&lt;p>使用 Martin&amp;rsquo;s Perfect CentOS7 模板新建一个 1C/4G 的虚拟机 ovirt；这个虚拟机上还需要配置 NFS 服务器，用来做 跑虚拟机的共享存储和用于存储 iso 光盘的存储。&lt;/p>
&lt;p>安装和配置 NFS 的过程如下：&lt;/p>
&lt;h2 id="安装-nfs-服务相关的包">安装 nfs 服务相关的包
&lt;/h2>&lt;p>yum install -y nfs-utils&lt;/p>
&lt;h2 id="创建存储目录">创建存储目录
&lt;/h2>&lt;p>mkdir -p /srv/ovirt/{iso,export,sata}
chown -R vdsm:kvm /srv/ovirt/
chmod -R 770 /srv/ovirt/&lt;/p>
&lt;p>编辑 nfs 配置文件 /ect/exports ， 加入下面三行。&lt;/p>
&lt;p>/srv/ovirt/iso 192.168.10.0/24(rw,anonuid=36,anongid=36,all_squash)
/srv/ovirt/export 192.168.10.0/24(rw,anonuid=36,anongid=36,all_squash)
/srv/ovirt/sata 192.168.10.0/24(rw,anonuid=36,anongid=36,all_squash)&lt;/p>
&lt;p>由于 centos 7 的 nfs 默认是 v4，这和 ovirt 不兼容，需要修改配置文件改为 v3， 编辑 /etc/nfsmount.conf 加入下面两个参数。&lt;/p>
&lt;p>Defaultvers=3
Nfsvers=3&lt;/p>
&lt;h2 id="重启动-nfs-服务器-设置开机启动服务">重启动 nfs 服务器 ，设置开机启动服务
&lt;/h2>&lt;p>systemctl start rpcbind.service &amp;amp;&amp;amp; systemctl enable rpcbind.service
systemctl start nfs-server.service &amp;amp;&amp;amp; systemctl enable nfs-server.service&lt;/p>
&lt;p>下面开始安装 ovirt 服务器。&lt;/p>
&lt;p>yum -y update
yum install &lt;a class="link" href="http://plain.resources.ovirt.org/pub/yum-repo/ovirt-release35.rpm" target="_blank" rel="noopener"
>http://plain.resources.ovirt.org/pub/yum-repo/ovirt-release35.rpm&lt;/a>
yum -y install ovirt-engine&lt;/p>
&lt;p>安装完后，用 engine-setup 命令配置和部署 ovirt 服务器。&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;p>[root@ovirt ~]# engine-setup
[ INFO ] Stage: Initializing
[ INFO ] Stage: Environment setup
Configuration files: [&amp;rsquo;/etc/ovirt-engine-setup.conf.d/10-packaging-jboss.conf&amp;rsquo;, &amp;lsquo;/etc/ovirt-engine-setup.conf.d/10-packaging.conf&amp;rsquo;]
Log file: /var/log/ovirt-engine/setup/ovirt-engine-setup-20150711225251-f9k7an.log
Version: otopi-1.3.2 (otopi-1.3.2-1.el7.centos)
[ INFO ] Stage: Environment packages setup
[ INFO ] Yum Downloading: ovirt-3.5-patternfly1-noarch-epel/x86_64 (0%)
[ INFO ] Stage: Programs detection
[ INFO ] Stage: Environment setup
[ INFO ] Stage: Environment customization&lt;/p>
&lt;p>&amp;ndash;== PRODUCT OPTIONS ==&amp;ndash;&lt;/p>
&lt;p>Configure Engine on this host (Yes, No) [Yes]: #回车，选择 Yes
Configure WebSocket Proxy on this host (Yes, No) [Yes]: #回车，选择 Yes&lt;/p>
&lt;p>&amp;ndash;== PACKAGES ==&amp;ndash;&lt;/p>
&lt;p>[ INFO ] Checking for product updates&amp;hellip;
[ INFO ] No product updates found&lt;/p>
&lt;p>&amp;ndash;== ALL IN ONE CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>&amp;ndash;== NETWORK CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>Setup can automatically configure the firewall on this system.
Note: automatic configuration of the firewall may overwrite current settings.
Do you want Setup to configure the firewall? (Yes, No) [Yes]: No #选择 no，由于本机的服务没有安装防火墙
Host fully qualified DNS name of this server [unknown.prolexic.com]: ovirt.xenlab.com #回车继续&lt;/p>
&lt;p>&amp;ndash;== DATABASE CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>Where is the Engine database located? (Local, Remote) [Local]: #回车，选择 Local 继续
Setup can configure the local postgresql server automatically for the engine to run. This may conflict with existing applications.
Would you like Setup to automatically configure postgresql and create Engine database, or prefer to perform that manually? (Automatic, Manual) [Automatic]: #回车，选择 继续&lt;/p>
&lt;p>&amp;ndash;== OVIRT ENGINE CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>Engine admin password:
Confirm engine admin password:
[WARNING] Password is weak: it is based on a dictionary word
Use weak password? (Yes, No) [No]: yes
Application mode (Virt, Gluster, Both) [Both]: #回车，选择 Both 继续&lt;/p>
&lt;p>&amp;ndash;== PKI CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>Organization name for certificate [xenlab.com]:&lt;/p>
&lt;p>&amp;ndash;== APACHE CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>Setup can configure the default page of the web server to present the application home page. This may conflict with existing applications.
Do you wish to set the application as the default page of the web server? (Yes, No) [Yes]:
Setup can configure apache to use SSL using a certificate issued from the internal CA.
Do you wish Setup to configure that, or prefer to perform that manually? (Automatic, Manual) [Automatic]:&lt;/p>
&lt;p>&amp;ndash;== SYSTEM CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>Configure an NFS share on this server to be used as an ISO Domain? (Yes, No) [Yes]: no # 选择 no，本测试手工配置 NFS，不需要安装程序配置。 继续&lt;/p>
&lt;p>&amp;ndash;== MISC CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>&amp;ndash;== END OF CONFIGURATION ==&amp;ndash;&lt;/p>
&lt;p>[ INFO ] Stage: Setup validation
[WARNING] Cannot validate host name settings, reason: resolved host does not match any of the local addresses
[WARNING] Less than 16384MB of memory is available&lt;/p>
&lt;p>&amp;ndash;== CONFIGURATION PREVIEW ==&amp;ndash;&lt;/p>
&lt;p>Application mode : both
Update Firewall : False
Host FQDN : ovirt.xenlab.com
Engine database name : engine
Engine database secured connection : False
Engine database host : localhost
Engine database user name : engine
Engine database host name validation : False
Engine database port : 5432
Engine installation : True
PKI organization : xenlab.com
Configure local Engine database : True
Set application as default page : True
Configure Apache SSL : True
Configure WebSocket Proxy : True
Engine Host FQDN : ovirt.xenlab.com&lt;/p>
&lt;p>Please confirm installation settings (OK, Cancel) [OK]: #回车，选择 OK 继续
[ INFO ] Stage: Transaction setup
[ INFO ] Stopping engine service
[ INFO ] Stopping ovirt-fence-kdump-listener service
[ INFO ] Stopping websocket-proxy service
[ INFO ] Stage: Misc configuration
[ INFO ] Stage: Package installation
[ INFO ] Stage: Misc configuration
[ INFO ] Initializing PostgreSQL
[ INFO ] Creating PostgreSQL &amp;rsquo;engine&amp;rsquo; database
[ INFO ] Configuring PostgreSQL
[ INFO ] Creating/refreshing Engine database schema
[ INFO ] Creating CA
[ INFO ] Configuring WebSocket Proxy
[ INFO ] Generating post install configuration file &amp;lsquo;/etc/ovirt-engine-setup.conf.d/20-setup-ovirt-post.conf&amp;rsquo;
[ INFO ] Stage: Transaction commit
[ INFO ] Stage: Closing up&lt;/p>
&lt;p>&amp;ndash;== SUMMARY ==&amp;ndash;&lt;/p>
&lt;p>[WARNING] Less than 16384MB of memory is available
SSH fingerprint: DF:FF:42:14:80:35:E2:7D:68:3A:1F:83:65:6E:89:EA
Internal CA 99:17:7A:42:D0:9D:D7:33:DE:C3:3E:07:EE:15:5D:01:28:63:4A:BF
Web access is enabled at:
&lt;a class="link" href="http://ovirt.xenlab.com:80/ovirt-engine" target="_blank" rel="noopener"
>http://ovirt.xenlab.com:80/ovirt-engine&lt;/a>
&lt;a class="link" href="https://ovirt.xenlab.com:443/ovirt-engine" target="_blank" rel="noopener"
>https://ovirt.xenlab.com:443/ovirt-engine&lt;/a>
Please use the user &amp;ldquo;admin&amp;rdquo; and password specified in order to login
In order to configure firewalld, copy the files from
/etc/ovirt-engine/firewalld to /etc/firewalld/services
and execute the following commands:
firewall-cmd -service ovirt-postgres
firewall-cmd -service ovirt-https
firewall-cmd -service ovirt-fence-kdump-listener
firewall-cmd -service ovirt-websocket-proxy
firewall-cmd -service ovirt-http
The following network ports should be opened:
tcp:443
tcp:5432
tcp:6100
tcp:80
udp:7410
An example of the required configuration for iptables can be found at:
/etc/ovirt-engine/iptables.example&lt;/p>
&lt;p>&amp;ndash;== END OF SUMMARY ==&amp;ndash;&lt;/p>
&lt;p>[ INFO ] Starting engine service
[ INFO ] Restarting httpd
[ INFO ] Stage: Clean up
Log file is located at /var/log/ovirt-engine/setup/ovirt-engine-setup-20150711225251-f9k7an.log
[ INFO ] Generating answer file &amp;lsquo;/var/lib/ovirt-engine/setup/answers/20150711225734-setup.conf&amp;rsquo;
[ INFO ] Stage: Pre-termination
[ INFO ] Stage: Termination
[ INFO ] Execution of setup completed successfully&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;p>安装成功，用浏览器，访问 ovirt 服务器 IP 地址使用 admin / 密码 登陆管理员控制台，第一次比较慢，验证安装是否完全成功。&lt;/p>
&lt;p>使用命令确认 nfs
[root@ovirt ~]# showmount -e
Export list for ovirt.xenlab.com:
/srv/ovirt/sata 192.168.10.0/24
/srv/ovirt/export 192.168.10.0/24
/srv/ovirt/iso 192.168.10.0/24&lt;/p>
&lt;p>在 ovirt 服务器中添加这三个存储，然后在命令和中确认 iso 存储已经可用。&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;p>[root@ovirt ~]# engine-iso-uploader list
Please provide the REST API password for the admin@internal oVirt Engine user (CTRL+D to abort):
ISO Storage Domain Name | Datacenter | ISO Domain Status
ovirt-iso | Default | active&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;p>把需要安装的光盘镜像文件，先复制到 ovirt 服务器上，然后传入 iso 存储。&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;p>[martin@martin-fedora iso]$ scp CentOS-7-x86_64-Minimal-1503-01.iso &lt;a class="link" href="mailto:root@192.168.10.25" >root@192.168.10.25&lt;/a>:/root/
The authenticity of host &amp;lsquo;192.168.10.25 (192.168.10.25)&amp;rsquo; can&amp;rsquo;t be established.
ECDSA key fingerprint is SHA256:KMGYLWZu14ZKaUwizIORgQ598Bpc0PKzNWF0qop2VAQ.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &amp;lsquo;192.168.10.25&amp;rsquo; (ECDSA) to the list of known hosts.
&lt;a class="link" href="mailto:root@192.168.10.25" >root@192.168.10.25&lt;/a>&amp;rsquo;s password:
CentOS-7-x86_64-Minimal-1503-01.iso 100% 636MB 90.9MB/s 00:07
[martin@martin-fedora iso]$&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;p>用这个命令上传光盘。
engine-iso-uploader upload -i ovirt-iso /root/CentOS-7-x86_64-Minimal-1503-01.iso&lt;/p>
&lt;p>之后就可以在控制台中创建虚拟机了。在 Web 界面上安装虚拟机，是需要安装客户的程序的，在 Fedora 22 笔记本中安装它们。
yum install spice-xpi virt-viewer&lt;/p>
&lt;p>点击新创建的虚拟机，启动之后，选择控制台，打开后，开始系统安装。&lt;/p>
&lt;h2 id="参考文档">参考文档
&lt;/h2>&lt;p>本文没有做截图，是由于以下参考文档都有相关截图和步骤说明；因此，在使用本文档的过程中，一定要同时打开这几篇文档。&lt;/p>
&lt;p>&lt;a class="link" href="http://www.ovirt.org/Quick_Start_Guide#Install_oVirt_Engine_.28Fedora.29%60" target="_blank" rel="noopener"
>http://www.ovirt.org/Quick&lt;em>Start_Guide#Install_oVirt_Engine&lt;/em>.28Fedora.29%60&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://jensd.be/?p=550" target="_blank" rel="noopener"
>http://jensd.be/?p=550&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://xrsa.net/2015/02/04/installing-ovirt-3-5-on-centos-7-hosted-engine/" target="_blank" rel="noopener"
>https://xrsa.net/2015/02/04/installing-ovirt-3-5-on-centos-7-hosted-engine/&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://www.server-world.info/en/note?os=Fedora_22&amp;amp;p=kvm&amp;amp;f=8" target="_blank" rel="noopener"
>http://www.server-world.info/en/note?os=Fedora_22&amp;amp;p=kvm&amp;amp;f=8&lt;/a>&lt;/p></description></item><item><title>用 powertop 给笔记本电脑省电</title><link>https://martinliu.cn/2015/06/13/e794a8-powertop-e7bb99e7ac94e8aeb0e69cace794b5e88491e79c81e794b5/</link><pubDate>Sat, 13 Jun 2015 14:27:17 +0000</pubDate><guid>https://martinliu.cn/2015/06/13/e794a8-powertop-e7bb99e7ac94e8aeb0e69cace794b5e88491e79c81e794b5/</guid><description>&lt;p>如何安装：&lt;/p>
&lt;p>[bash]&lt;/p>
&lt;p>sudo dnf install powertop&lt;/p>
&lt;p>sudo powertop&lt;/p>
&lt;p>sudo systemctl start powertop.service&lt;/p>
&lt;p>sudo systemctl enable powertop.service&lt;/p>
&lt;p>[/bash]&lt;/p>
&lt;p>[gallery link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;53761,53762,53763,53764,53765&amp;rdquo;]&lt;/p>
&lt;p>使用 Tab 和 shift + tab 键在以上屏幕直接切换。&lt;/p>
&lt;p>我发现我主要使用 Tunables 这个 tab 来找出可以安全关闭的设备服务。以上测试是在我目前的 Fedora 22 on Lenovo T440s 上作的。&lt;/p>
&lt;p>本文参考：&lt;a class="link" href="http://fedoramagazine.org/saving-laptop-power-with-powertop/" target="_blank" rel="noopener"
>http://fedoramagazine.org/saving-laptop-power-with-powertop/&lt;/a>&lt;/p></description></item><item><title>Achilles的脚后跟</title><link>https://martinliu.cn/2015/06/04/achillese79a84e8849ae5908ee8b79f/</link><pubDate>Thu, 04 Jun 2015 05:15:53 +0000</pubDate><guid>https://martinliu.cn/2015/06/04/achillese79a84e8849ae5908ee8b79f/</guid><description>&lt;p>今天是红帽服务团队深圳 Bootcamp 的最后一天，我是最后一个 session 的演讲者，讲的内容是补丁管理，这是个老生常谈的话题，看看我怎么构思和解读的。&lt;/p>
&lt;p>[su_button url=&amp;ldquo;http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/06/Patch-Management.pdf&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;stroked&amp;rdquo; size=&amp;ldquo;2&amp;rdquo; icon=&amp;ldquo;icon: cloud-download&amp;rdquo;]PPT 下载在这里[/su_button]&lt;/p>
&lt;p>主要思路还是把目前的相关知识梳理一边。特别是借鉴了公司安全大师 Shawn 的一些内容。&lt;/p>
&lt;h2 id="玩好防塔游戏">玩好防塔游戏
&lt;/h2>&lt;p>把操作系统的该打的补丁都打好，避免已知漏洞的暴露。&lt;/p>
&lt;h2 id="做好安全加固">做好安全加固
&lt;/h2>&lt;p>修补 Achilles 的脚后跟，是说把安全配置基线落实到系统中，并行成为长效保持机制。&lt;/p>
&lt;p>其实这些还是和配置管理有关和 CMDB 有关，真是老生常谈呵呵&lt;/p></description></item><item><title>Fedora 22 使用体验不错</title><link>https://martinliu.cn/2015/05/28/fedora-22-e4bdbfe794a8e4bd93e9aa8ce4b88de99499/</link><pubDate>Thu, 28 May 2015 16:02:23 +0000</pubDate><guid>https://martinliu.cn/2015/05/28/fedora-22-e4bdbfe794a8e4bd93e9aa8ce4b88de99499/</guid><description>&lt;p>下面是随手的几个截图。&lt;/p>
&lt;p>&lt;a class="link" href="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/05/ss01.jpg" target="_blank" rel="noopener"
>&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/05/ss01-1024x576.jpg"
loading="lazy"
alt="ss01"
>&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/05/ss02.jpg" target="_blank" rel="noopener"
>&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/05/ss02-1024x576.jpg"
loading="lazy"
alt="ss02"
>&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/05/2015-05-28-23-28-49-%e7%9a%84%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be1.png" target="_blank" rel="noopener"
>&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/05/2015-05-28-23-28-49-%e7%9a%84%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be1-1024x576.png"
loading="lazy"
alt="2015-05-28 23-28-49 的屏幕截图"
>&lt;/a>&lt;/p>
&lt;p>一部分 F22 新功能评测在这里&lt;a class="link" href="http://fedoramagazine.org/whats-new-fedora-22-workstation/" target="_blank" rel="noopener"
> http://fedoramagazine.org/whats-new-fedora-22-workstation/&lt;/a>&lt;/p></description></item><item><title>Fedora 22 将于5月26日发布</title><link>https://martinliu.cn/2015/05/24/fedora-22-e5b086e4ba8e5e69c8826e697a5e58f91e5b883/</link><pubDate>Sun, 24 May 2015 08:37:06 +0000</pubDate><guid>https://martinliu.cn/2015/05/24/fedora-22-e5b086e4ba8e5e69c8826e697a5e58f91e5b883/</guid><description>&lt;p>No Content Found&lt;/p></description></item><item><title>如何参与 Project Atomic</title><link>https://martinliu.cn/2015/03/19/e5a682e4bd95e58f82e4b88e-project-atomic/</link><pubDate>Thu, 19 Mar 2015 03:23:37 +0000</pubDate><guid>https://martinliu.cn/2015/03/19/e5a682e4bd95e58f82e4b88e-project-atomic/</guid><description>&lt;h2 id="关于-project-atomic-项目">关于 Project Atomic 项目
&lt;/h2>&lt;p>&lt;a class="link" href="http://www.projectatomic.io/" target="_blank" rel="noopener"
>&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/03/secure-containers.png"
loading="lazy"
alt="secure-containers"
>&lt;/a>&lt;/p>
&lt;p>Project Atomic 项目相关的开源技术组件如下：&lt;/p>
&lt;p>[wm_list bullet=&amp;ldquo;icon-linux&amp;rdquo; class=&amp;quot;&amp;quot;]&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="http://kernel.org/" target="_blank" rel="noopener"
>linux kernel&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://www.freedesktop.org/wiki/Software/systemd/" target="_blank" rel="noopener"
>systemd&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://wiki.gnome.org/Projects/OSTree" target="_blank" rel="noopener"
>OSTree&lt;/a> and &lt;a class="link" href="http://rpm-ostree.cloud.fedoraproject.org/" target="_blank" rel="noopener"
>rpm-ostree&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.docker.io/" target="_blank" rel="noopener"
>Docker&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/GoogleCloudPlatform/kubernetes" target="_blank" rel="noopener"
>kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://rpm-ostree.cloud.fedoraproject.org/" target="_blank" rel="noopener"
>Fedora&lt;/a> and &lt;a class="link" href="http://wiki.centos.org/Cloud" target="_blank" rel="noopener"
>CentOS&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>[/wm_list]&lt;/p>
&lt;p>该项目的网站在： &lt;a class="link" href="http://www.projectatomic.io/" target="_blank" rel="noopener"
>http://www.projectatomic.io/&lt;/a>&lt;/p>
&lt;h2 id="加入-project-atomic-邮件列表">加入 Project Atomic   邮件列表
&lt;/h2>&lt;p>项目一般性讨论： &lt;a class="link" href="https://lists.projectatomic.io/mailman/listinfo/atomic" target="_blank" rel="noopener"
>https://lists.projectatomic.io/mailman/listinfo/atomic&lt;/a>&lt;/p>
&lt;p>项目开发者：&lt;a class="link" href="https://lists.projectatomic.io/mailman/listinfo/atomic-devel" target="_blank" rel="noopener"
>https://lists.projectatomic.io/mailman/listinfo/atomic-devel&lt;/a>&lt;/p>
&lt;p>项目版本发布更新：https://lists.projectatomic.io/mailman/listinfo/atomic-announce&lt;/p>
&lt;p>填写自己的邮箱后，别忘了在邮箱里收信，并且确认。如下图所示：&lt;/p>
&lt;p>&lt;a class="link" href="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/03/atomic-dev-mail-list.jpg" target="_blank" rel="noopener"
>&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/03/atomic-dev-mail-list.jpg"
loading="lazy"
alt="atomic-dev-mail-list"
>&lt;/a>&lt;/p>
&lt;h2 id="问-project-atomic-问题和讨论">问   Project Atomic 问题和讨论
&lt;/h2>&lt;p>&lt;a class="link" href="http://ask.projectatomic.io/en/questions/" target="_blank" rel="noopener"
>http://ask.projectatomic.io/en/questions/  这里是&lt;/a>项目的论坛可以在这里提问和帮助其他人。&lt;/p>
&lt;h2 id="了解-project-atomic-代码">了解  Project Atomic 代码
&lt;/h2>&lt;p>&lt;a class="link" href="https://github.com/projectatomic/" target="_blank" rel="noopener"
>https://github.com/projectatomic/&lt;/a> 项目的代码在 Github 网站上可以看到，如果你 watch 这个项目的话，可以收到所有开发者对该项目的所有代码更新等活动。&lt;/p></description></item><item><title>Fedora 22 有何值得期待</title><link>https://martinliu.cn/2015/01/26/fedora-22-e69c89e4bd95e580bce5be97e69c9fe5be85/</link><pubDate>Mon, 26 Jan 2015 14:26:12 +0000</pubDate><guid>https://martinliu.cn/2015/01/26/fedora-22-e69c89e4bd95e580bce5be97e69c9fe5be85/</guid><description>&lt;p>我使用这新安装的 F21，连接着公司阿姆斯特丹的 VPN，流畅的使用 Firefox ， Chrome 上网，在没有墙的世界里顺利传行着。重返 Linux 世界，想起来很久没有用 windows 桌面了，渐渐适应和熟悉这感觉，且有些怀旧。&lt;/p>
&lt;p>之前 Fedora 是没有太多的体验，用的最多的是 opensuse + kde 桌面的组合。目前，看到 fedora magazine 上很多更新，感觉真的是发展的太快了。 http://fedoramagazine.org/see-whats-coming-in-fedora-22-workstation/ 看了下这个帖子，上面说 F22 的提升包括：更长的电池寿命、gnome Wayland 更多改进、开始应用 bundle 的开发、更好的第三方应用支持、提升 Terminal、改善开发工具等等。查看更多细节：&lt;a class="link" href="http://blogs.gnome.org/uraeus/2015/01/19/planning-for-fedora-workstation-22/" target="_blank" rel="noopener"
>Christian’s blog pos&lt;/a>t&lt;/p></description></item></channel></rss>
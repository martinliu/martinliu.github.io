<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>职业发展 on Martin Liu's Blog</title><link>https://martinliu.cn/tags/%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95/</link><description>Recent content in 职业发展 on Martin Liu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 28 Aug 2025 16:07:06 +0800</lastBuildDate><atom:link href="https://martinliu.cn/tags/%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95/index.xml" rel="self" type="application/rss+xml"/><item><title>技能不是问题，可见性才是关键 —— 我的 DevOps 职场经验分享</title><link>https://martinliu.cn/blog/devops-wasnt-my-problem-nobody-just-knew-i-existed/</link><pubDate>Tue, 26 Aug 2025 20:00:00 +0800</pubDate><guid>https://martinliu.cn/blog/devops-wasnt-my-problem-nobody-just-knew-i-existed/</guid><description>&lt;img src="https://martinliu.cn/blog/devops-wasnt-my-problem-nobody-just-knew-i-existed/1_3vFTMBRkvLlFBa3v3VukRA.webp" alt="Featured image of post 技能不是问题，可见性才是关键 —— 我的 DevOps 职场经验分享" />&lt;blockquote>
&lt;p>作者：Zudonu Osomudeya&lt;/p>&lt;/blockquote>
&lt;p>我确实具备一些实打实的技能。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Terraform&lt;/strong>：我能写模块，并且大多数时候看起来还算清晰有条理。&lt;/li>
&lt;li>&lt;strong>Kubernetes&lt;/strong>：我与集群的缠斗已经久到，连梦里都在敲 &lt;code>kubectl apply -f&lt;/code>。&lt;/li>
&lt;li>&lt;strong>CI/CD&lt;/strong>：GitHub Actions 对我来说就像心情晴雨表，有时流畅，有时又不明所以地失败。&lt;/li>
&lt;/ul>
&lt;p>然而，问题来了：为什么我依然一无所有、默默无闻，甚至感觉自己只是在对着虚空呐喊？&lt;/p>
&lt;h2 id="学习--出路">学习 ≠ 出路
&lt;/h2>&lt;p>我一度认为，答案可能是再多拿一张证书，或者去掌握一些没人真正用、但在简历上好看的小众工具。&lt;/p>
&lt;p>于是我陷入了无休止的循环：学习，再学习。&lt;/p>
&lt;p>可现实是：没有发生过任何改变。&lt;/p>
&lt;ul>
&lt;li>没有新工作机会&lt;/li>
&lt;li>没有兼职&lt;/li>
&lt;li>没有私信&lt;/li>
&lt;li>猎头也视我为空气&lt;/li>
&lt;/ul>
&lt;p>只剩下我和终端，以及那句越来越刺耳的问题：&lt;strong>“我到底做错了什么？”&lt;/strong>&lt;/p>
&lt;h2 id="问题的真正根源">问题的真正根源
&lt;/h2>&lt;p>后来我才意识到，问题根本不在于技能，而在于：&lt;strong>没人知道我存在&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>如果没人看到你，你就无法被雇佣。&lt;/li>
&lt;li>如果没人记住你的名字，你就不会获得推荐。&lt;/li>
&lt;li>DevOps 的职业发展，不可能在真空里发生。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>然而，我却一直在“隐身”。&lt;/p>
&lt;p>我常常安慰自己：&lt;strong>等我什么都懂了&lt;/strong>，再出来分享。
可事实是，在 DevOps 领域，&lt;strong>你永远不可能什么都懂&lt;/strong>。&lt;/p>
&lt;p>今天你是 YAML 大师，明天可能就被一个缩进打回原形。&lt;/p>
&lt;h2 id="打破沉默从一次小小的分享开始">打破沉默：从一次小小的分享开始
&lt;/h2>&lt;p>很长一段时间里，我都选择沉默：不发帖、不展示、不寻求帮助。&lt;/p>
&lt;p>原因只有一个——我觉得自己还没有资格。&lt;/p>
&lt;p>直到有一天，我鼓起勇气，发了一条看似微不足道的朋友圈：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>“还在学习，还在犯错，但这个集群在调试了四天之后终于能用了。DevOps 真是令人谦卑😅。”&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;p>差点我就没点下“发布”。我担心它太傻，太微小，不够“专业”。
但结果让我意外：很多人留言分享了他们的经历。&lt;/p>
&lt;p>那一刻，我明白了：&lt;strong>你永远不知道谁在关注你。&lt;/strong>&lt;/p>
&lt;h2 id="真实比完美更有价值">真实比完美更有价值
&lt;/h2>&lt;p>从那之后，我不再试图“证明”自己有多聪明。
我开始选择真实地展现自己：&lt;/p>
&lt;ul>
&lt;li>分享学到的知识&lt;/li>
&lt;li>偶尔发一张 YAML 崩溃的梗图&lt;/li>
&lt;li>写下一篇像这样的经验分享&lt;/li>
&lt;/ul>
&lt;p>渐渐地，人们开始注意到我。
我并没有变成专家，我只是变得&lt;strong>可见&lt;/strong>了。&lt;/p>
&lt;h2 id="devops-不只是技术更是个人品牌">DevOps 不只是技术，更是个人品牌
&lt;/h2>&lt;p>我们谈论 DevOps 时，总是聚焦在容器和集群，但其实它还有更重要的商业层面：&lt;strong>你需要像品牌一样去思考自己的职业发展&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>GitHub&lt;/strong>：是我的作品集&lt;/li>
&lt;li>&lt;strong>LinkedIn&lt;/strong>：是我的个人着陆页&lt;/li>
&lt;li>&lt;strong>博客/Medium&lt;/strong>：是我的产品展示&lt;/li>
&lt;/ul>
&lt;p>本质上，我不仅仅是一个 DevOps 工程师。
我同时也是一个“产品”，一种“服务”，一个可以被认同、被记住的“故事”。&lt;/p>
&lt;h2 id="参与比完美更重要">参与比完美更重要
&lt;/h2>&lt;p>是的，我依然在学习，也依然在犯错。
但我不再等待“完美”的时机。&lt;/p>
&lt;p>我理解了：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>自信不是无所不知&lt;/strong>&lt;/li>
&lt;li>&lt;strong>自信是坦然接受“不知道”，并依然选择分享和参与&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="给仍在犹豫的你">给仍在犹豫的你
&lt;/h2>&lt;p>如果你还在等待那个“合适的时机”，去发帖、去展示、去申请机会——
请把这段文字当作信号：&lt;/p>
&lt;ul>
&lt;li>发布那篇文章&lt;/li>
&lt;li>展示那个项目&lt;/li>
&lt;li>讲述你的故事&lt;/li>
&lt;/ul>
&lt;p>因为，你永远不知道：在某个角落，或许就有人在默默关注你，而那个人，可能就是改变你职业生涯的关键。&lt;/p>
&lt;h2 id="写在最后">写在最后
&lt;/h2>&lt;p>如果这篇文章让你有所共鸣，或者让你心里一笑，请点赞、评论、转发，或者关注我。
我写作的目的，是和那些同样在一次次集群崩溃与重建中成长的 DevOps 同行们建立连接。&lt;/p>
&lt;p>&lt;strong>记住：你不仅仅是在做 DevOps，你正在创造价值。&lt;/strong>
&lt;strong>别忘了，也要成就自己。&lt;/strong>&lt;/p></description></item><item><title>在 DevOps 实践中的两次思维转变，彻底改变了我</title><link>https://martinliu.cn/blog/two-mindset-shifts-that-changed-everything-for-me/</link><pubDate>Mon, 25 Aug 2025 10:00:00 +0800</pubDate><guid>https://martinliu.cn/blog/two-mindset-shifts-that-changed-everything-for-me/</guid><description>&lt;img src="https://martinliu.cn/blog/two-mindset-shifts-that-changed-everything-for-me/1_7OnOS2Hlt5vIKFVozBhN-g.webp" alt="Featured image of post 在 DevOps 实践中的两次思维转变，彻底改变了我" />&lt;blockquote>
&lt;p>作者：Andrey Byhalenko&lt;/p>&lt;/blockquote>
&lt;p>DevOps 不仅仅是工具，更是一种思维模式。了解团队如何卓越协作、重视持续改进、分担责任并乐于接受变化。深入探讨 DevOps (Development and Operations) 的核心理念，以简单易懂的方式呈现给每个人，无论其语言背景如何。&lt;/p>
&lt;p>当我开始学习 DevOps 时，我做了大多数初学者都会做的事。&lt;/p>
&lt;p>我追逐工具。&lt;/p>
&lt;p>Docker &amp;raquo; Kubernetes &amp;raquo; AWS &amp;raquo; Terraform。&lt;/p>
&lt;p>我跟着教程学习，搭建了一些宠物项目，甚至通过了几项认证。我从技术上讲会使用这些工具，但我并没有真正理解&lt;strong>为什么&lt;/strong>要使用它们。我不知道它们究竟解决了哪些实际问题。&lt;/p>
&lt;p>在某个时刻，我碰壁了。&lt;/p>
&lt;p>然后一切都变了。&lt;/p>
&lt;h2 id="转变-1从以工具为导向到以解决方案为导向">转变 1：从以工具为导向到以解决方案为导向
&lt;/h2>&lt;p>有一天，我不再问：
&lt;strong>“我接下来应该学什么？”&lt;/strong>
我开始问：
&lt;strong>“我正在解决什么问题？”&lt;/strong>&lt;/p>
&lt;p>我不再试图掌握所有热门的新工具，而是设想我正在为一家真正的公司构建基础设施。是我自己的初创公司。&lt;/p>
&lt;p>从那时起，事情就豁然开朗了。&lt;/p>
&lt;p>我不再一切从工具开始。而是从&lt;strong>需求&lt;/strong>开始，然后寻找正确的解决方案。&lt;/p>
&lt;p>例如：&lt;/p>
&lt;ul>
&lt;li>我有供给虚拟服务器的需要 → &lt;strong>使用 EC2 或 VMware。&lt;/strong>&lt;/li>
&lt;li>我有版本控制的需要 → &lt;strong>使用 Git。&lt;/strong>&lt;/li>
&lt;li>我有将微服务 (Microservices) 容器化的需要 → &lt;strong>使用 Docker 和 Docker Compose。&lt;/strong>&lt;/li>
&lt;li>我有编排 (Orchestrate) 它们的需要 → &lt;strong>使用 Kubernetes。&lt;/strong>&lt;/li>
&lt;li>我有集中式日志的需要 → &lt;strong>使用 ELK stack。&lt;/strong>&lt;/li>
&lt;li>我有监控我的服务器的需要 → &lt;strong>使用 Grafana。&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>我使用的每个工具都成为了&lt;strong>思考&lt;/strong>后的结果，而不是起点。&lt;/p>
&lt;p>这种思维模式让我的学习速度提升了 10 倍，也更有意义。
我不再只是练习命令。我正在解决实际的基础设施挑战。&lt;/p>
&lt;h2 id="转变-2从技术思维到业务思维">转变 2：从技术思维到业务思维
&lt;/h2>&lt;p>这个转变让我花了更长的时间才意识到。&lt;/p>
&lt;p>即使在我对工具和架构充满信心之后，我仍然缺少一些关键的东西：&lt;strong>业务背景&lt;/strong>。&lt;/p>
&lt;p>我过去常常想，&lt;/p>
&lt;p>“这些都是最佳实践。他们为什么接受呢？”&lt;/p>
&lt;p>但现在我明白，&lt;strong>最佳&lt;/strong>技术解决方案，并不总是对业务来说&lt;strong>正确&lt;/strong>的解决方案。&lt;/p>
&lt;ul>
&lt;li>也许它太昂贵了。&lt;/li>
&lt;li>也许它对团队来说太复杂了。&lt;/li>
&lt;li>也许它解决了一个根本不存在的问题。&lt;/li>
&lt;li>也许它正在制造另一个问题。&lt;/li>
&lt;/ul>
&lt;p>作为 DevOps 工程师，我们不仅仅是构建系统。&lt;/p>
&lt;p>我们的最终目标是用技术解决业务问题。&lt;/p>
&lt;p>第二次思维模式的转变改变了我工作的方式、思考的方式以及与团队沟通的方式。&lt;/p>
&lt;h2 id="如果你是-devops-新手请记住这一点">如果你是 DevOps 新手，请记住这一点
&lt;/h2>&lt;p>✅ 工具很重要。
✅ 教程有帮助。
✅ 项目涨经验。&lt;/p>
&lt;p>但是，拥有&lt;strong>正确的心态&lt;/strong>会让你比获得任何证书或 Udemy 课程走得更远。&lt;/p>
&lt;p>要着眼于&lt;strong>解决方案&lt;/strong>，而不是工具。
要着眼于&lt;strong>业务价值&lt;/strong>，而不仅仅是技术上的优雅。&lt;/p>
&lt;p>这才是让你成为一名真正的 DevOps 工程师 (DevOps engineer) 的关键。&lt;/p></description></item></channel></rss>
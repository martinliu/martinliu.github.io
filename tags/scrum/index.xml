<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scrum on Martin Liu's Blog</title><link>https://martinliu.cn/tags/scrum/</link><description>Recent content in Scrum on Martin Liu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 18 Sep 2025 17:38:24 +0800</lastBuildDate><atom:link href="https://martinliu.cn/tags/scrum/index.xml" rel="self" type="application/rss+xml"/><item><title>Scrum 正在演变，许多团队正在尝试替代方案</title><link>https://martinliu.cn/blog/scrum-is-evolving-and-many-teams-are-experimenting/</link><pubDate>Thu, 28 Aug 2025 10:00:00 +0800</pubDate><guid>https://martinliu.cn/blog/scrum-is-evolving-and-many-teams-are-experimenting/</guid><description>&lt;img src="https://martinliu.cn/blog/scrum-is-evolving-and-many-teams-are-experimenting/0_RoRZP60AWsV890oG.jpg" alt="Featured image of post Scrum 正在演变，许多团队正在尝试替代方案" />&lt;p>Scrum 对许多团队而言仍然很有价值，但近年来，从初创公司到大型科技公司（Big Tech）的软件企业一直在尝试新的实践，以适应更快的周期和更高的自主性。本文将重点介绍 10 种现代方法，它们可以补充甚至超越传统的 Scrum。本文揭示了 10 种正在取代 Scrum 的现代方法，并解释了如何在你的 Java 开发团队中实施它们。&lt;/p>
&lt;p>Scrum 使用率从 2020 年至 2024 年的下降，以及 Kanban、Shape Up 和持续交付（Continuous Delivery）等替代方法在软件开发团队中的兴起。&lt;/p>
&lt;h2 id="1-团队自主性优于流程仪式">1. 团队自主性优于流程仪式
&lt;/h2>&lt;p>一些大型科技公司（Big Tech）正在尝试更自主的模型——即使是小型团队也可以尝试其中的一些元素，赋能的工程师比流程驱动的团队能交付更好的结果。虽然 Scrum 强调明确的角色，但一些团队正在尝试更高的自主性，赋予工程师对其代码、部署和决策的端到端所有权。这种转变通常会提高生产力，并减少代码、部署和决策制定中的流程开销。&lt;/p>
&lt;p>核心原则很简单：聘用聪明人，然后让他们自由发挥。当工程师可以选择自己的工具、设定自己的时间表并在准备就绪时进行部署时，生产力会飙升高达 30%。这种方法消除了冲刺规划会议（sprint planning meetings）和故事点估算（story point estimation）的开销。&lt;/p>
&lt;p>Java 实施示例（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Autonomous team deployment pipeline&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">AutonomousDeployment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Autowired&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GitRepository&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Autowired&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CIService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">continuousIntegration&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Engineers trigger deployments directly&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">deployWhenReady&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">featureBranch&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">continuousIntegration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">allTestsPass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">featureBranch&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">mergeToMain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">featureBranch&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">deployToProduction&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">deployToProduction&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Automated deployment without ceremony&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Deploying autonomously - no approval needed&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2-持续交付而非冲刺发布">2. 持续交付而非冲刺发布
&lt;/h2>&lt;p>许多 Scrum 团队以 2-4 周的周期进行交付。持续交付（Continuous Delivery）扩展了这一理念，实现了每天多次发布，提供了更快的反馈和更小、更安全的变更。持续交付消除了冲刺（sprint）边界的人为限制，并实现了用户的实时反馈。&lt;/p>
&lt;p>Amazon 平均每 11.7 秒部署一次代码。这种方法降低了风险，因为每次更改都更小，更容易调试（debug）。如果出现问题，你只需回滚（roll back）一个小的更改，而不是解开一个复杂冲刺所累积的功能。&lt;/p>
&lt;p>Java 持续交付（CD）流水线示例（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@RestController&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">FeatureFlagController&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Autowired&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FeatureToggleService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">toggleService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Deploy features behind flags - no sprint waiting&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/api/new-feature&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ResponseEntity&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNewFeature&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">toggleService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEnabled&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;new-checkout-flow&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ResponseEntity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EnhancedCheckout&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ResponseEntity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">StandardCheckout&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对比展示了大型科技公司（Big Tech）如何与传统 Scrum 驱动的组织不同地进行项目管理，强调自主性、持续交付（Continuous Delivery）和工程师主导的举措。&lt;/p>
&lt;h2 id="3-shape-upbasecamp-的-6-周专注周期">3. Shape Up：Basecamp 的 6 周专注周期
&lt;/h2>&lt;p>Basecamp 创建了 Shape Up，旨在解决无休止的积压工作 (backlogs) 和范围蔓延 (scope creep) 等挑战。团队不再管理数百张工单（bug修复或者线上支持），而是专注于一个重要问题整整 6 周，然后进行为期 2 周的冷却期 (cooldown)。&lt;/p>
&lt;p>其中一个出色的洞察是“投入预设 (appetite setting)”——即预先决定一个问题值得投入多少时间。如果你无法在 6 周内解决它，那么要么缩减范围，要么放弃它。这消除了困扰 Scrum 团队的无休止的范围谈判。&lt;/p>
&lt;p>Shape Up 的 Java 项目结构（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Six-week focused development approach&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ShapeUpProject&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CYCLE_WEEKS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalDate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">startDate&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">appetite&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// &amp;#34;6 weeks max&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Problem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">problemToSolve&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">ShapeUpProject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Problem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">problem&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timeAppetite&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">problemToSolve&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">problem&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">appetite&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timeAppetite&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">startDate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalDate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Circuit breaker - kill if scope grows too large&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">shouldContinue&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ChronoUnit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">WEEKS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">between&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">startDate&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalDate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CYCLE_WEEKS&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-看板-kanban可视流优于冲刺规划">4. 看板 (Kanban)：可视流优于冲刺规划
&lt;/h2>&lt;p>Netflix、Microsoft 和许多其他公司都采用了看板 (Kanban) 流系统。与基于冲刺 (sprint) 的规划不同，看板强调限制在制品 (Work In Progress, WIP) 并优化流系统。团队不再承诺冲刺目标，而是专注于限制在制品并优化其价值交付流。&lt;/p>
&lt;p>看板的强大之处在于其简洁性。你有三列：待办 (To Do)、进行中 (Doing)、已完成 (Done)。你对“进行中”状态的项目数量设定限制。这可以防止上下文切换 (context switching)，并帮助团队更快地完成工作，而不是启动更多工作。&lt;/p>
&lt;p>看板板实现：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Traditional&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Scrum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Board&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">┌──────────────┐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">┌──────────────┐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">┌──────────────┐&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BACKLOG&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SPRINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DONE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">COMMITTED&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">200&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">15&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Endless&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Fixed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Groomed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Estimated&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">└──────────────┘&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">└──────────────┘&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">└──────────────┘&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Modern&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Kanban&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Flow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">┌──────────────┐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">┌──────────────┐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">┌──────────────┐&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TODO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DOING&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DONE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WIP&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Just&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Feature&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Priority&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Bug&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Fix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Y&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Ready&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">•&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">│&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">└──────────────┘&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">└──────────────┘&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">└──────────────┘&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="5-无估算-no-estimates-运动关注流而非预测">5. 无估算 (No Estimates) 运动：关注流，而非预测
&lt;/h2>&lt;p>一些团队正在尝试 NoEstimates (无估算) 运动，从故事点 (story points) 转向。他们将工作分解成大小相似的块并跟踪流，这可以减少估算开销。团队不再争论一个任务是 5 个点还是 8 个点，而是专注于将工作分解成大小相似的块并衡量实际流速 (flow rates)。&lt;/p>
&lt;p>NoEstimates 方法会问：“我们能在 2-3 天内完成这个任务吗？”如果能，就去做。如果不能，就进一步分解。这完全消除了估算会议，并比传统的故事点提供了更可预测的交付。&lt;/p>
&lt;p>NoEstimates 的 Java 实现（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Entity&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">WorkItem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalDateTime&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">startTime&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalDateTime&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">completeTime&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isSmallEnough&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Can complete in 2-3 days?&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Track cycle time instead of story points&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Duration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getCycleTime&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">completeTime&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Duration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">between&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">startTime&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">completeTime&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Duration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">between&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">startTime&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalDateTime&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Predictability through consistent sizing&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isRightSize&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getCycleTime&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">toDays&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="6-okrs-加工程领导力">6. OKRs 加工程领导力
&lt;/h2>&lt;p>Intel、Google 和 LinkedIn 等公司将目标与关键结果 (Objectives and Key Results, OKRs) 与工程师主导的执行相结合。工程师不再由产品负责人 (product owners) 编写详细需求，而是理解业务目标并找出最佳技术方案。&lt;/p>
&lt;p>该模型将开发者视为问题解决者，而非功能生产机器。工程师与客户沟通，理解各项指标，并提出解决方案。这带来了更具创新性的产品和更高的工作满意度。&lt;/p>
&lt;p>Java OKR 集成示例（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">TeamOKRTracker&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Objective: Reduce customer checkout abandonment by 20%&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ObjectiveMetric&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">checkoutAbandonment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ObjectiveMetric&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;checkout_abandonment&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">20&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Engineers decide HOW to achieve the objective&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">implementSolution&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">checkoutAbandonment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isOnTrack&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Current approach working - continue&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Engineers pivot based on data, not requirements&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">tryNewApproach&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="7-spotify-的小队模型大规模自主团队">7. Spotify 的小队模型：大规模自主团队
&lt;/h2>&lt;p>Spotify 彻底改变了大型组织保持敏捷性的方式。他们的模型将人员组织成小队 (squads)（团队）、部落 (tribes)（小队的集合）、章节 (chapters)（基于技能的群体）和兴趣组 (guilds)（共同兴趣社区）。&lt;/p>
&lt;p>关键洞察在于，文化和自主性比流程更重要。每个小队选择自己的方法论——有些使用 Scrum，有些使用 Kanban，许多采用混合方法。重要的是在使命和价值观上保持一致。&lt;/p>
&lt;p>Java 中的小队结构（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Spotify-style autonomous squad organization&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">AutonomousSquad&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mission&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Make checkout delightful&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Developer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">squadMembers&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WorkingMethod&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">chosenMethod&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Squad decides!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Squads have end-to-end responsibility&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">deliverFeature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Feature&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">feature&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">design&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feature&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">develop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feature&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feature&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">deploy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feature&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">monitor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feature&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Cross-pollination with other squads&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">shareLearningSessions&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Guilds facilitate knowledge sharing&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="8-devops-集成开发与运维合二为一">8. DevOps 集成：开发与运维合二为一
&lt;/h2>&lt;p>最成功的公司已经消除了开发和运维团队之间的移交。开发者不再将代码“一扔了之”，而是端到端 (end-to-end) 地拥有他们的应用程序，包括部署、监控和维护。&lt;/p>
&lt;p>这种方法消除了“在我机器上可以运行”的问题，因为开发者要对生产环境性能负责。它还能够实现更快的反馈周期，并减少团队之间的推诿扯皮。&lt;/p>
&lt;p>DevOps 流水线集成：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Traditional&lt;/span> &lt;span class="n">Handoff&lt;/span> &lt;span class="nl">Model&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">┌───────────┐&lt;/span> &lt;span class="err">┌───────────┐&lt;/span> &lt;span class="err">┌───────────┐&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="n">DEV&lt;/span> &lt;span class="err">│───►│&lt;/span> &lt;span class="n">QA&lt;/span> &lt;span class="err">│───►│&lt;/span> &lt;span class="n">OPS&lt;/span> &lt;span class="err">│&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="s">&amp;#34;Done&amp;#34;&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="s">&amp;#34;Test&amp;#34;&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="s">&amp;#34;Deploy&amp;#34;&lt;/span> &lt;span class="err">│&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">└───────────┘&lt;/span> &lt;span class="err">└───────────┘&lt;/span> &lt;span class="err">└───────────┘&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">▼&lt;/span> &lt;span class="err">▼&lt;/span> &lt;span class="err">▼&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Blame&lt;/span> &lt;span class="n">Dev&lt;/span> &lt;span class="n">Blame&lt;/span> &lt;span class="n">QA&lt;/span> &lt;span class="n">Blame&lt;/span> &lt;span class="n">Ops&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Modern&lt;/span> &lt;span class="n">DevOps&lt;/span> &lt;span class="nl">Integration&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">┌─────────────────────────────────────────────────────┐&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="n">FULL&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">STACK&lt;/span> &lt;span class="n">OWNERSHIP&lt;/span> &lt;span class="err">│&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">┌─────────┐&lt;/span> &lt;span class="err">┌─────────┐&lt;/span> &lt;span class="err">┌─────────┐&lt;/span> &lt;span class="err">┌─────────┐│&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="n">Code&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="n">Test&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="n">Deploy&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="n">Monitor&lt;/span> &lt;span class="err">││&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">│&lt;/span> &lt;span class="err">││&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="err">└─────────┘&lt;/span> &lt;span class="err">└─────────┘&lt;/span> &lt;span class="err">└─────────┘&lt;/span> &lt;span class="err">└─────────┘│&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">│&lt;/span> &lt;span class="n">Same&lt;/span> &lt;span class="n">Team&lt;/span> &lt;span class="err">│&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">└─────────────────────────────────────────────────────┘&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="9-精益开发消除浪费最大化价值">9. 精益开发：消除浪费，最大化价值
&lt;/h2>&lt;p>源自丰田制造的精益原则在软件开发中焕发了新的活力。其核心思想是消除任何不能直接为客户创造价值的活动。&lt;/p>
&lt;p>在实践中，这意味着更少的会议、更少的文档、更短的反馈周期和更快的决策。采用精益方法的团队将更多时间用于编码，更少时间用于仪式性活动。&lt;/p>
&lt;p>精益 Java 开发原则（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">LeanDevelopmentService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Principle 1: Eliminate waste (unnecessary meetings, docs)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">eliminateWaste&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// No daily standups if async communication works&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// No estimation meetings if flow is predictable&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// No detailed specs if quick prototypes suffice&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Principle 2: Build quality in (automated testing)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testDrivenDevelopment&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Write tests first, eliminate manual testing waste&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Quality built into process&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Principle 3: Deliver fast (continuous deployment)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">deliverFast&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Small batches, frequent releases&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Value delivered in hours, not sprints&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="10-混合方法多种方法论的精华">10. 混合方法：多种方法论的精华
&lt;/h2>&lt;p>最明智的公司不会只选择一种方法论并永远墨守成规。他们根据特定背景下的有效性，持续试验和调整，结合不同方法的要素。&lt;/p>
&lt;p>例如，一个团队可能使用 Shape Up 的六周周期进行功能开发，使用 Kanban 进行 Bug 修复，并采用持续交付 (continuous delivery) 进行部署。关键在于衡量结果并调整流程，以优化成果，而不是墨守方法论。&lt;/p>
&lt;p>混合实现示例（任何人都能懂的伪代码）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">HybridMethodology&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Use different approaches for different work types&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handleWork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WorkType&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FEATURE_DEVELOPMENT&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">useShapeUpCycle&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 6-week focused cycles&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BUG_FIXES&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">useKanbanFlow&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Continuous flow&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EXPERIMENTS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">useNoEstimates&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Quick validation&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INFRASTRUCTURE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">useDevOpsPipeline&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Automated deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="未来已来">未来已来
&lt;/h2>&lt;p>数据表明 Scrum 不再是唯一的（或绝对主导的）框架——团队正在将其与更新的实践相结合。那些拥抱自主性、持续交付 (Continuous Delivery) 和以结果为导向的方法的团队，始终优于那些过度依赖流程的团队。适应这些新方法的公司将蓬勃发展，而那些根据自身需求调整流程的团队往往能更快地行动并交付更多价值。&lt;/p>
&lt;p>不要等待你的组织强制推行变革。今天就开始在你的团队中试验这些方法吧。尝试一个月不进行估算，为你的下一个功能实现持续部署 (Continuous Deployment)，或者让你的开发人员完全拥有其部署流水线 (Deployment Pipeline)。&lt;/p>
&lt;p>你会首先尝试什么？在下面的评论中分享你的实验和结果。&lt;/p>
&lt;p>将复杂的技术拆解为简单的文字。如果你正在学习，那么我正是为你而写。&lt;/p></description></item><item><title>对不起Scrum，你的游戏可能已经结束了!</title><link>https://martinliu.cn/blog/sorry-scrum-the-game-might-be-over-for-you-cn/</link><pubDate>Sat, 10 Apr 2021 22:21:29 +0800</pubDate><guid>https://martinliu.cn/blog/sorry-scrum-the-game-might-be-over-for-you-cn/</guid><description>&lt;img src="https://martinliu.cn/img/cos/2021-04-10-0_IFV2UEaD1Vj4S_to.jpg" alt="Featured image of post 对不起Scrum，你的游戏可能已经结束了!" />&lt;p>我们不可能忽视 Scrum 的知名度。多年来，Scrum 是全球大多数公司在敏捷框架中的首选；只有少数公司会挑战它。但最近，发生了一些变化，组织正在失去对Scrum的信任。在未能获得有意义的结果之后，在许多地方，人们正在用 SAFe、Kanban 或其他框架取代 Scrum。&lt;/p>
&lt;p>除了这些不满 Scrum 的组织，有些经验丰富的专业人士也不愿意与Scrum共舞。很多人甚至觉得被称为产品经理（Product Owner）或 Scrum Master 都很尴尬。市场正在向新的方向转变，Scrum还会有空间吗？&lt;/p>
&lt;blockquote>
&lt;p>公司想做敏捷，但他们难以放弃旧的指令和管控风格。&lt;/p>&lt;/blockquote>
&lt;p>让我来阐述一下，为什么我认为 Scrum 的游戏可能已经结束了。
&lt;em>请注意 这篇文章的内容是基于我过去十年的经验和观察。这也是为什么我邀请你也分享你的观点。&lt;/em>&lt;/p>
&lt;h2 id="作者">作者
&lt;/h2>&lt;p>本文出处：&lt;a class="link" href="https://medium.com/serious-scrum/sorry-scrum-the-game-might-be-over-for-you-915227f3a0d" target="_blank" rel="noopener"
>https://medium.com/serious-scrum/sorry-scrum-the-game-might-be-over-for-you-915227f3a0d&lt;/a>&lt;/p>
&lt;p>作者：&lt;a class="link" href="https://medium.com/@davidavpereira?source=post_sidebar--------------------------post_sidebar-----------" target="_blank" rel="noopener"
>David Pereira&lt;/a> Head of Product Management @virtualidentity Course: How to be a strong Product Owner: &lt;a class="link" href="http://bit.ly/30ylNEH" target="_blank" rel="noopener"
>http://bit.ly/30ylNEH&lt;/a>&lt;/p>
&lt;h2 id="scrum不是一个流程">Scrum不是一个流程
&lt;/h2>&lt;p>第一个软件是在1948年才出现的，那时候软件开发还是个新鲜事物。我猜汤姆-基尔本无法想象软件开发会给世界带来多么快的进步。&lt;/p>
&lt;blockquote>
&lt;p>计算机科学家汤姆-基尔本负责编写了世界上第一个软件，该软件于1948年6月21日上午11时在英国曼彻斯特大学运行。&lt;em>—&lt;/em>&lt;/p>
&lt;p>&lt;a class="link" href="https://medium.com/u/ec2848c0389?source=post_page-----915227f3a0d--------------------------------" target="_blank" rel="noopener"
>Micah Yost&lt;/a>&lt;em>,&lt;/em> &lt;a class="link" href="https://medium.com/@micahyost/a-brief-history-of-software-development-f67a6e6ddae0" target="_blank" rel="noopener"
>A Brief History of Software Development&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>在新千禧年之前，公司缺乏符合客户期望的技术。大多数公司专注于围绕软件开发改进流程。尽管所有的努力都是为了实施像 &lt;a class="link" href="https://en.wikipedia.org/wiki/Rational_Unified_Process" target="_blank" rel="noopener"
>Rational Unified Process&lt;/a>统一流程这样的重磅流程，但质量还是有问题，客户也还是不满意。构建无用的软件让许多人感到沮丧；软件行业需要一场革命。&lt;/p>
&lt;p>虽然像 &lt;a class="link" href="https://warren2lynch.medium.com/the-brief-of-history-of-scrum-15efb73b4701" target="_blank" rel="noopener"
>Scrum&lt;/a> 和 &lt;a class="link" href="https://en.wikipedia.org/wiki/Extreme_programming" target="_blank" rel="noopener"
>e&lt;strong>X&lt;/strong>treme &lt;strong>P&lt;/strong>rogramming&lt;/a> 这样的敏捷框架已经存在许久，但在2001年《敏捷宣言》-（&lt;a class="link" href="https://agilemanifesto.org/" target="_blank" rel="noopener"
>Agile Manifesto&lt;/a>）出台后，才大大改变了全球软件的开发方式。在那之后，Scrum框架成为最受欢迎的替代品。&lt;/p>
&lt;p>从千禧年的初期情况来看，Scrum 能解决软件开发的所有问题吗？我们必须去了解问题的根本原因，但很多公司忽略了这一步，反而求助于寻找新的流程。仅仅依靠替换人们工作方式的流程是不够的。这就是大多数组织未能从Scrum 中获益的原因。&lt;/p>
&lt;blockquote>
&lt;p>根本原因不是流程，而是缺乏敏捷的思维方式。&lt;/p>&lt;/blockquote>
&lt;p>我们以足球为例，在瓜迪奥拉(Pep Guardiola)的领导下，巴塞罗那在4年内赢得了14个冠军。从2008年到2012年，巴塞罗那绝对是世界上最强的足球队。很多人将成功归功于瓜迪奥拉执教球队的方式。其中一个显著的方面是主导比赛；巴塞罗那经常拥有70%以上的控球率。这是否意味着将 &lt;a class="link" href="https://en.wikipedia.org/wiki/Tiki-taka" target="_blank" rel="noopener"
>&amp;ldquo;Tiki Taka &amp;ldquo;&lt;/a> 运用到另外一支球队后，他们就能达到类似的效果呢？&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/img/cos/2021-04-10-1_0UHTWnUk-eJ16jd7vGqPXw.png"
loading="lazy"
>&lt;/p>
&lt;p>瓜迪奥拉从2013年到2016年执教拜仁慕尼黑，他应用了和巴塞罗那一样的风格。然而，所取得的成功与巴萨不相上下；在拜仁慕尼黑，他获得了5个国家冠军，却没有获得欧冠冠军。要想实现伟大的成就，仅仅靠一个‘流程’是不够的，还需要其它更多的东西。&lt;/p>
&lt;p>把Scrum当做流程的公司都失败了。如果还没有更重大的改变，任何敏捷框架都无法带领团队走向成功。除非公司解决了他们的组织型障碍（dysfunctions），否则环境不会让团队发挥的更出色。&lt;/p>
&lt;p>我观察过很多虚弱无力的 Scrum 团队，因为环境的组织型障碍。最常见的组织障碍是。&lt;/p>
&lt;ul>
&lt;li>缺乏信任&lt;/li>
&lt;li>缺少方向&lt;/li>
&lt;li>根据职位确定优先次序&lt;/li>
&lt;li>微观管理（micromanagement）&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>对于这些有组织型障碍的公司来说，Scrum应用失效是不可避免的。最后，Scrum还要背这个锅。&lt;/p>&lt;/blockquote>
&lt;p>Scrum 框架并不适合畏惧改变的组织。不改变其文化，就不可能用 Scrum 取得成功。许多人对 Scrum 的角色、事件和工件了如指掌，但很少有人知道背后的价值观。如果不活用 Scrum 背后的价值观，就不可能实现 Scrum 的承诺。&lt;/p>
&lt;h2 id="为什么scrum即将崩塌">为什么Scrum即将崩塌？
&lt;/h2>&lt;p>Scrum 自称简单易行，其实很难掌握。几乎我认识的每个人都同意这句话，然而，我要质疑 Scrum 有多简单。框架的一个关键部分经常被忽略，试着问一些团队的价值观是什么？你会惊讶的发现，几乎没有人知道。不过，价值观仍然是 Scrum 的一个关键部分。&lt;/p>
&lt;blockquote>
&lt;p>Scrum 的成功使用取决于人们是否能更熟练地运用这五种价值观。
&lt;strong>承诺、专注、开放、尊重和勇气。&lt;/strong>&lt;/p>
&lt;p>&lt;em>—&lt;/em> &lt;a class="link" href="https://www.scrumguides.org/scrum-guide.html" target="_blank" rel="noopener"
>The Scrum Guide&lt;/a>&lt;em>, November 2020&lt;/em>&lt;/p>&lt;/blockquote>
&lt;p>当组织把 Scrum 当作一个流程来实施时，挫折是不可避免的。从设计上看，Scrum 是不完整的，没有一个团队能够在不适应其场景的情况下取得成功。例如，产品管理并不是 Scrum 的一部分，然而，它却是交付有意义产品的关键学科。&lt;/p>
&lt;p>要想利用 Scrum 获得成功，组织必须经历一场大规模的转型。不幸的是，大多数高管都不愿意去准备一个能让团队茁壮成长的环境。我在企业中遇到过以下几种范式。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>赋权 vs. 微观管理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>成果 vs. 产出&lt;/p>
&lt;/li>
&lt;li>
&lt;p>协调/对齐 vs. 共识&lt;/p>
&lt;/li>
&lt;li>
&lt;p>承担风险 vs. 遵循计划&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&amp;ldquo;高层管理者们认为，拥有真正自我管理的团队风险太大。这就是为什么 Scrum 会遇到玻璃天花板的原因。&amp;rdquo;
&lt;em>—&lt;/em> &lt;a class="link" href="https://medium.com/u/a55fee07a2c4?source=post_page-----915227f3a0d--------------------------------" target="_blank" rel="noopener"
>&lt;em>Willem-Jan Ageling&lt;/em>&lt;/a>&lt;em>,&lt;/em> &lt;a class="link" href="https://medium.com/serious-scrum/scrum-has-hit-the-glass-ceiling-3610bb978b1d" target="_blank" rel="noopener"
>&lt;em>Scrum Has Hit the Glass Ceiling&lt;/em>&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>高层管理人员们往往无法充分给个人授权，因为他们想继续自己的控制。所以他们才会走捷径。首先，改变执行力。然后，如果 Scrum 证明了它的价值，那再来改变文化。好吧，这样做是行不通的，结果是大家都很沮丧。当Scrum 变成了一个过场（译者注：此处突出一下形同虚设的空架子流程的含义，请酌情理解），角色就会变异成毫无意义的东西。让我来分享一下我的一些心得。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/img/cos/2021-04-10-0-vZwKs-yTiUrjsf1F.jpeg"
loading="lazy"
>&lt;/p>
&lt;p>Photo by &lt;a class="link" href="https://unsplash.com/@miteneva?utm_source=medium&amp;amp;utm_medium=referral" target="_blank" rel="noopener"
>Maria Teneva&lt;/a> on &lt;a class="link" href="https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral" target="_blank" rel="noopener"
>Unsplash&lt;/a>&lt;/p>
&lt;h2 id="产品负责人经理product-owner">产品负责人/经理（Product owner）
&lt;/h2>&lt;p>如果不能对优先级负责，产品负责人就会像服务员一样。他们接受订单，建议配菜，然后把订单交给厨房。做一个接单员是令人沮丧的，你唯一的义务是管理利益相关者的期望，并用做和开发人员沟通的桥梁。&lt;/p>
&lt;p>不幸的是，与产品负责人角色的变异更多的是规则而不是例外。这就是为什么我在想，是否有人可以成为 Scrum产品负责人。当我回顾我的职业生涯时，也许我曾经就差点变成这样的人，但从来没有像 Scrum 指南所推荐的那样，被完全的授权过。我的问题是：Scrum产品负责人在现实的企业中存在吗？&lt;/p>
&lt;blockquote>
&lt;p>你能举出多少家公司的产品负责人真正的完全拥有产品决策的最终决定权？如果他们没有最终决定权，这些人还是产品负责人吗？然而，有成千上万的人声称自己是产品所有者，却不拥有任何产品。&lt;em>—&lt;/em>&lt;/p>
&lt;p>&lt;a class="link" href="https://medium.com/u/b40569a4ce51?source=post_page-----915227f3a0d--------------------------------" target="_blank" rel="noopener"
>Maarten Dalmijn&lt;/a> &lt;em>,&lt;/em> &lt;a class="link" href="https://medium.com/serious-scrum/will-the-real-product-owner-please-stand-up-951917cf7b18" target="_blank" rel="noopener"
>Will the real Product Owner please stand up?&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>在反模式之上，我注意到很多有产品思维的人对产品负责人这个角色失去了兴趣。他们觉得很难把它和产品经理联系起来。虽然公司经常雇佣产品负责人，但由于 Marty Cagan 所推崇的看法，很多专业人士都不好意思这样称呼，他声称产品负责人不是一份工作，而是一个角色，而且这份工作比 Scrum 所建议的要多得多。&lt;/p>
&lt;h2 id="开发人员">开发人员
&lt;/h2>&lt;p>开发者是决定实际如何开展工作的人，他们负责实现，使用哪种技术栈，等等。这是一个美丽的幻觉（理论）。但在实践中，我从未见过这种情况。常见的是有一个首席技术官（CTO），一个技术负责人，或者其他头衔的什么人，他们不仅要来做决策，还要管理开发者。&lt;/p>
&lt;p>Scrum 所宣称的开发者有自主权，但他们得到了吗？我认为自主的情况很少见。说起来也很悲哀，但大多数开发者所收到的命令都是要遵守的；只是很少有开发者被授权在没有截止日期的情况下解决问题。&lt;/p>
&lt;blockquote>
&lt;p>Scrum 开发者在幻想世界中可能会和 Scrum产品所有者工作在一起，但在现实中却不是。我们最常见的是开发者被封印在了特性工厂里。&lt;/p>&lt;/blockquote>
&lt;h2 id="scrum-master">Scrum Master
&lt;/h2>&lt;p>Scrum Master 是 Scrum 中最遭受鄙视的角色。没有 Scrum Master 的 Scrum 团队是很常见的，因为公司不愿意雇佣专人来做这个工作。不过，即便有些公司雇佣了 Scrum Master ，但还是会经常让他们虚弱无力。&lt;/p>
&lt;blockquote>
&lt;p>Scrum Master 的失效无法避免，因为他们也不能催生出任何必需的改变，能让 Scrum 蓬勃发展起来。&lt;/p>&lt;/blockquote>
&lt;p>Scrum Master 和其他角色也没有什么不同。要找到一个人，他能够完全像Scrum指南中所建议的那样，成为真正的 Scrum Master 是不太可能的。Scrum Master 通常无力促进组织中所需要的变化。&lt;/p>
&lt;h2 id="scrum-还会活下去吗">Scrum 还会活下去吗？
&lt;/h2>&lt;p>许多有经验的专业人士已经厌倦了 Scrum，他们对它失去了信心。他们想要一些其他的东西，这些专业人士正在寻找机会尝试其它的框架。&lt;/p>
&lt;p>高管们对变革的恐惧阻碍了 Scrum 团队的发展。一连串错误的决定和错误的观念可能会导致 Scrum 走向灭亡。高层管理者不能将其先天不足的指令和管控风格留在过去。&lt;/p>
&lt;blockquote>
&lt;p>一个可悲的结果可能就会发生，SAFe，这个瀑布模型的卧槽马，它已经准备好要上位了。&lt;/p>&lt;/blockquote>
&lt;p>我很害怕 SAFe，因为它是一个沉重的流程，它看起来一点也不像是一个敏捷的方法。这台沉重的机器怎么能让人背得滚瓜烂熟呢？我真不知道他们凭什么敢说这也是敏捷。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/img/cos/2021-04-10-0_Zm_LEQK00gf_arR-.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.scaledagileframework.com/" target="_blank" rel="noopener"
>SAFe 5.0&lt;/a>&lt;/p>
&lt;h2 id="scrum可能需要重启才能活下来">Scrum可能需要重启才能活下来
&lt;/h2>&lt;p>Scrum 角色的魅力已经大不如前。很多公司对 Scrum 的错误认知，导致专业人士抵触与之合作。在 Scrum 成为一个流程的场景下，人们也不想成为 Scrum Master 或产品所有者。&lt;/p>
&lt;p>&lt;strong>我相信 Scrum 需要重新开始才能保持存在的意义。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>我们所处的时代与20年前不同。在2001年，Scrum 是一个新生的孩子。世界已经改变了。现在 Scrum 是一种商品。为了让 Scrum 还维持在前线，创造者们需要有勇气去接受框架的核心，并解决那些阻碍。其中一些（可能的）阻碍可能是人家的血牛。想想（Scrum Master 和 Product Owner）认证产业。&lt;/p>
&lt;p>&lt;em>—&lt;/em> &lt;a class="link" href="https://medium.com/u/a55fee07a2c4?source=post_page-----915227f3a0d--------------------------------" target="_blank" rel="noopener"
>Willem-Jan Ageling&lt;/a>&lt;em>,&lt;/em> &lt;a class="link" href="https://medium.com/serious-scrum/will-scrum-fall-victim-to-its-own-success-7cc488dea09b" target="_blank" rel="noopener"
>Will Scrum Fall Victim to Its Own Success?&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>不管发生了什么，那些勇于改变自己内核的公司还是能在 Scrum 中脱颖而出。这从来都不是为了定义一个流程，而是为了拥有一种专注于更快地交付价值的文化。希望尚在，一些大胆的公司能拥抱变化，他们所表现出的迹象是。&lt;/p>
&lt;ul>
&lt;li>首席产品官（Chief Product Officer）成了高管团队的成员。&lt;/li>
&lt;li>高层管理人员专注于给出方向而不是指令。&lt;/li>
&lt;li>Scrum团队被授权去试验各种用来达成关键成果的方案。&lt;/li>
&lt;li>产品探索（Product Discovery）的建立。高管们知道，投入适当的时间去发现那些值得解决的问题是必不可少的工作。&lt;/li>
&lt;/ul></description></item></channel></rss>
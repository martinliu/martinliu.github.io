<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DORA on Martin Liu's Blog</title><link>https://martinliu.cn/tags/dora/</link><description>Recent content in DORA on Martin Liu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 28 Oct 2024 17:22:20 +0800</lastBuildDate><atom:link href="https://martinliu.cn/tags/dora/index.xml" rel="self" type="application/rss+xml"/><item><title>《DORA 2024年 加速：DevOps 现状报告》概述</title><link>https://martinliu.cn/blog/state-of-devops-2024-summary/</link><pubDate>Sun, 27 Oct 2024 15:43:33 +0800</pubDate><guid>https://martinliu.cn/blog/state-of-devops-2024-summary/</guid><description>&lt;img src="https://martinliu.cn/blog/state-of-devops-2024-summary/state_of_dora_2024.max-2500x2500.jpg" alt="Featured image of post 《DORA 2024年 加速：DevOps 现状报告》概述" />&lt;blockquote>
&lt;p>作者 Nathen Harvey （DORA Lead），Derek DeBellis （DORA 研究项目负责人）&lt;/p>&lt;/blockquote>
&lt;p>&lt;strong>&lt;a class="link" href="https://martinliu.cn/blog/state-of-devops-2024-zh-cn/" >下载中文版报告 PDF 文件&lt;/a>&lt;/strong>&lt;/p>
&lt;p>DORA 研究项目已经对高绩效技术团队和组织的能力、实践和度量标准进行了长达十多年的研究。该项目基于每年对技术人员（包括软件开发人员、管理者和高管）的调查数据发布报告。&lt;/p>
&lt;p>今天，我们正式发布《2024 年 加速：DevOps 现状报告》，标志着 DORA 已经在高绩效技术团队和组织的研究领域持续了十年。DORA 在 2013 年提出的四项关键指标已成为衡量软件交付绩效的行业标准。&lt;/p>
&lt;p>每年，我们都深入研究 DORA 标准绩效指标，并探索它们如何与个人、工作流、团队和产品绩效相互作用。今年，我们还新增了 AI 采用在各个层面上对软件开发影响的分析。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/blog/state-of-devops-2024-summary/1_CY0uOJ4.max-800x800.png"
width="770"
height="389"
srcset="https://martinliu.cn/blog/state-of-devops-2024-summary/1_CY0uOJ4.max-800x800_hu_6cc75b3f58b0df93.png 480w, https://martinliu.cn/blog/state-of-devops-2024-summary/1_CY0uOJ4.max-800x800_hu_6fce1ced4e459b24.png 1024w"
loading="lazy"
alt="度量软件交付效能"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="475px"
>&lt;/p>
&lt;p>我们每年设立基准，帮助团队了解他们相对于同行的表现，并激励他们认识到每个行业都可以实现卓越的表现。DORA 过去十年的研究旨在帮助团队不断提升自身的能力，力求每年改进都能取得更大进展。&lt;/p>
&lt;p>如果想快速了解今年的报告内容，可以阅读我们的 DORA 报告摘要，聚焦于技术采用趋势、AI 的影响、平台工程的兴起，以及开发者体验的重要性。&lt;/p>
&lt;p>各行业的组织都在优先考虑将 AI 集成到应用和服务中。开发人员越来越依赖 AI 提高工作效率，并更好地履行其核心职责。今年的研究揭示了 AI 采用带来的复杂利弊和权衡。&lt;/p>
&lt;p>报告强调平台工程需要慎重实施，并指出开发者体验在实现高绩效中的关键作用。&lt;/p>
&lt;h3 id="ai-的优势挑战与信任建设">AI 的优势、挑战与信任建设
&lt;/h3>&lt;p>AI 的广泛应用正在改变软件开发方式。超过 75% 的受访者表示，他们在日常工作中至少有一个职责依赖于 AI。最常见的使用场景包括代码编写、信息总结和代码解释。&lt;/p>
&lt;p>报告显示，AI 有效地提升了开发人员的生产力。超过三分之一的受访者表示，AI 为他们带来了“中等”到“极大”的生产力提升。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/blog/state-of-devops-2024-summary/2_wccUD78.max-1300x1300.png"
width="1275"
height="768"
srcset="https://martinliu.cn/blog/state-of-devops-2024-summary/2_wccUD78.max-1300x1300_hu_cf40b1a521a77928.png 480w, https://martinliu.cn/blog/state-of-devops-2024-summary/2_wccUD78.max-1300x1300_hu_4b02e8d5cfda3b19.png 1024w"
loading="lazy"
alt="AI 任务渗透率"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="398px"
>&lt;/p>
&lt;p>AI 采用率提升 25% 带来了几个关键领域的改进：&lt;/p>
&lt;ul>
&lt;li>文档质量提升 7.5%&lt;/li>
&lt;li>代码质量提升 3.4%&lt;/li>
&lt;li>代码审查速度提升 3.1%&lt;/li>
&lt;/ul>
&lt;p>然而，尽管 AI 有其优势，我们的研究也发现了一个重要问题：AI 采用可能对软件交付绩效产生负面影响。随着 AI 应用的增加，软件交付吞吐量估计下降了 1.5%，交付稳定性下降了 7.2%。我们的数据显示，仅改进开发流程并不足以自动提升交付绩效，尤其是在没有遵循如小批量处理和完善测试机制等基本原则的情况下。虽然 AI 对个人和组织的多个方面有积极影响，为高软件交付绩效创造了条件，但它并非万能的解决方案。&lt;/p>
&lt;p>此外，尽管生产力有所提升，39% 的受访者对 AI 生成的代码仍缺乏信任。这一低信任度表明，AI 的集成需要更加谨慎的管理。团队必须仔细评估 AI 在开发流程中的作用，以减轻潜在的负面影响。&lt;/p>
&lt;p>基于以上发现，我们提出三项核心建议：&lt;/p>
&lt;ol>
&lt;li>通过调整 AI 采用策略，使其更好地赋能员工，减少繁琐任务，从而提升员工的工作效率。&lt;/li>
&lt;li>制定明确的 AI 使用规范，解决相关程序问题，并鼓励就其影响进行公开讨论。&lt;/li>
&lt;li>鼓励团队持续探索 AI 工具，并提供实验时间，以通过实际操作建立信任感。&lt;/li>
&lt;/ol>
&lt;h3 id="平台工程新的转变">平台工程：新的转变
&lt;/h3>&lt;p>我们今年研究的另一个新兴领域是平台工程，专注于搭建和运营内部开发平台，以优化流程并提升效率。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/blog/state-of-devops-2024-summary/3_ou7kqZc.max-2000x2000.jpg"
width="1999"
height="1204"
srcset="https://martinliu.cn/blog/state-of-devops-2024-summary/3_ou7kqZc.max-2000x2000_hu_4360daba4f65ba21.jpg 480w, https://martinliu.cn/blog/state-of-devops-2024-summary/3_ou7kqZc.max-2000x2000_hu_ec5c96c725a73788.jpg 1024w"
loading="lazy"
alt="平台寿命"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="398px"
>&lt;/p>
&lt;p>我们的研究总结了平台工程的 4 个关键发现：&lt;/p>
&lt;ul>
&lt;li>提升开发人员效率：内部开发平台能够有效提升开发人员的生产力。&lt;/li>
&lt;li>更常见于大型企业：这些平台通常在大型组织中使用，表明它们更适合应对复杂的开发环境。&lt;/li>
&lt;li>可能出现的性能下滑：在平台工程计划实施初期，性能可能会有所下降，直至平台逐渐成熟后才能显现出改进效果。&lt;/li>
&lt;li>强调用户导向和开发人员自主性：为了达到最佳效果，平台工程应优先考虑用户导向的设计、开发人员的独立性，以及产品导向的方法。&lt;/li>
&lt;/ul>
&lt;p>一个重视用户需求、赋能开发人员、并能预见潜在挑战的周全策略，是最大化平台工程计划收益的关键。&lt;/p>
&lt;h3 id="开发者体验成功的关键">开发者体验：成功的关键
&lt;/h3>&lt;p>去年报告中指出，健康的工作文化有助于减少倦怠、提升生产力和提高工作满意度。今年的研究结果依然如此。那些营造稳定、支持性环境并激励开发者发挥潜力的团队，往往能够取得显著的积极成果。&lt;/p>
&lt;p>“快速行动、频繁调整”的心态会对开发者的身心健康产生负面影响，进而影响整体绩效。即便拥有强有力的领导、完善的文档以及用户导向的开发方式，若优先级不稳定，仍然可能显著阻碍团队的进展。&lt;/p>
&lt;p>创造一个支持、重视团队，并让开发者有机会展现自身价值的工作环境，是实现卓越绩效的基础。&lt;/p>
&lt;h3 id="如何利用这些发现来帮助你的-devops-团队">如何利用这些发现来帮助你的 DevOps 团队
&lt;/h3>&lt;p>十年的研究表明，软件开发的成功不仅依赖于技术实力，更取决于建立支持性的文化、重视用户需求和提升开发者体验。我们鼓励各团队在实际环境中验证和应用我们的研究成果。&lt;/p>
&lt;p>这些发现可以成为你团队实验和持续改进项目的依据。我们也欢迎你将这些实践分享给我们和 DORA 社区，让你的经验成为我们共同学习和进步的一部分。&lt;/p>
&lt;p>我们开展这项研究是为了为那些希望改进实践、推动创新和合作，并实现业务成功的团队和组织提供一条清晰的路径。未来十年，我们将继续开展平台无关的研究，专注于技术中的人性化因素。&lt;/p>
&lt;p>了解更多：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://martinliu.cn/blog/state-of-devops-2024-zh-cn/" >下载完整报告&lt;/a>&lt;/li>
&lt;li>分享你的经验，&lt;a class="link" href="https://dora.community/" target="_blank" rel="noopener"
>加入 DORA 社区&lt;/a>，学习他人的做法并获取灵感&lt;/li>
&lt;li>使用 &lt;a class="link" href="https://dora.dev/quickcheck/" target="_blank" rel="noopener"
>DORA 快速检查&lt;/a>，在不到一分钟内评估你的团队的软件交付绩效&lt;/li>
&lt;/ul></description></item><item><title>DevOps 从业者需要理解的 DORA Core 模型</title><link>https://martinliu.cn/blog/dora-core/</link><pubDate>Thu, 04 Jan 2024 09:12:31 +0800</pubDate><guid>https://martinliu.cn/blog/dora-core/</guid><description>&lt;img src="https://martinliu.cn/blog/dora-core/1_j4QaVlm5rlBlSsyluXH2Dg.webp" alt="Featured image of post DevOps 从业者需要理解的 DORA Core 模型" />&lt;h2 id="dora-core-模型">DORA Core 模型
&lt;/h2>&lt;p>&lt;img src="https://martinliu.cn/blog/dora-core/dora-core-model-v1.2.2.png"
width="8448"
height="4752"
srcset="https://martinliu.cn/blog/dora-core/dora-core-model-v1.2.2_hu_41633e04e8de88ad.png 480w, https://martinliu.cn/blog/dora-core/dora-core-model-v1.2.2_hu_c071a3d0a4553a07.png 1024w"
loading="lazy"
alt="DORA Core 英文版"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>
&lt;a class="link" href="dora-core-model-v1.2.2.pdf" >下载 PDF 版&lt;/a>&lt;/p>
&lt;p>关于这个模型：DORA Core是DORA研究计划的成果，它是从历史和广度上发现到的，一系列最坚实存在的能力、指标和成果的集合。核心是从DORA的持续研究中得出的，包括我们年度《加速DevOps状态报告》中提出的分析。核心旨在在从业者的背景中作为指南使用：它有意追随研究，更保守地发展。核心模型中显示的概念和关系已经在我们的研究中反复证明，并已成功被软件工程团队用于优先考虑持续改进。常见问题解答见下文。&lt;/p>
&lt;h2 id="dora-core-是什么">DORA Core 是什么？
&lt;/h2>&lt;p>DORA的研究项目是持续而不断的；每年都带来新的调查方向，每次分析都带来新的见解。在前沿领域，新概念经常被引入，而文献（尤其是DevOps状态加速报告）的不断发布，揭示新的见解和动态。随着每项研究，一些先前的发现得到强化，而其他一些可能受到质疑。这是良好科学的标志：任何新发现都应该被视为可疑的——引人入胜，但可疑——直到通过复制和应用得到验证。与此同时，鼓励从业者将研究应用于自己的专业背景中。在这种背景下，跟上DORA的最新发展可能是具有挑战性的：在大型组织中进行文化转型需要稳健的手段，要在跨越多年的时间段内持续进行。试图更新实践以匹配研究的速度可能导致逆生产的变动。在这些情境中，更实际的做法是依赖于“常青”文献。DORA Core代表了DORA最基础的发现的精髓：研究一再展现的指标、能力和结果。它使团队能够更精确地将改进努力集中在可能为其组织目标和生活质量产生有形利益的方面。&lt;/p>
&lt;h2 id="核心包含哪些概念">核心包含哪些概念？
&lt;/h2>&lt;p>DORA Core涵盖了DORA长期研究并得到良好支持的概念集。这些概念包括连续交付和生成性组织文化等能力，以及“四个关键”指标等指标，以及组织绩效等结果。这些已建立的思想与研究中表现出有希望但（尚未）得到DORA预测模型支持的领域或不同的预测路径形成对比。如果一个概念符合以下条件之一，则可以考虑纳入核心：&lt;/p>
&lt;ul>
&lt;li>a)已研究至少两次；&lt;/li>
&lt;li>b)从业者发现它有价值；&lt;/li>
&lt;li>c)继续探索是有必要的。&lt;/li>
&lt;/ul>
&lt;p>这个标准是有意主观的：它在很大程度上依赖于数据和分析，但最终是由直觉引导的。因此，请贡献出你的观点！您的直觉是宝贵的；如果您觉得某事没有准确反映研究，请告诉我们。&lt;/p>
&lt;h2 id="核心会变吗">核心会变吗？
&lt;/h2>&lt;p>会！研究的应用比研究本身更稳定。但它并非静止不动。核心会随着时间的推移而发展，我们目前正在调查的事物将来一旦确立，就会“毕业”进入核心。纳入核心需要一定的支持阈值；同样，如果收集到足够的证据来支持核心中的某个部分的移除或修改，它将被弃用。核心是由研究启发并随研究演变的——但速度较慢。&lt;/p>
&lt;h2 id="什么是核心模型">什么是核心模型？
&lt;/h2>&lt;p>DORA核心模型是DORA自成立以来一直在开发的预测框架的视觉总结。它借鉴了多年来开发的所有结构方程模型（SEMs），以突出最受支持的实体和预测路径。鼓励从业者研究模型并将其用于指导他们的持续改进之旅。&lt;/p>
&lt;h2 id="所有研究年份都被平等对待吗">所有研究年份都被平等对待吗？
&lt;/h2>&lt;p>不是。一些发现被证明非常耐久，年复一年地复制。但是，当研究动态背景时，其他发现已经发生了变化。此外，每年我们都会增加或减少研究领域。我们的目标是在多年内创造出一些持久的东西，同时在我们继续学习的过程中发展。为此，比起较旧的研究，最近的研究权重更大。这就是为什么，例如，“安全向左移”与技术能力分开的原因，它反映了从2021年和2022年的研究中显示出安全实践对软件交付性能的独特影响的发现。&lt;/p>
&lt;p>扩展阅读：感兴趣下载中文版本的研究报告，可以在这里下载&lt;a class="link" href="https://www.devopschina.org/sdm_downloads/" target="_blank" rel="noopener"
>https://www.devopschina.org/sdm_downloads/&lt;/a>&lt;/p></description></item><item><title>怎样使用两个DevOps研究模型？</title><link>https://martinliu.cn/blog/2019-state-devops-report-insight-2/</link><pubDate>Sun, 01 Sep 2019 17:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-report-insight-2/</guid><description>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/1-jafadjf.jpg" alt="Featured image of post 怎样使用两个DevOps研究模型？" />&lt;p>本文要覆盖的章节是《 How to use the research models》 这一章。双模型在今年的报告中首次出现了，它们是效能模型和生产力模型。为什么会存在两个模型？有什么区别？有什么相似之处？最重要的问题是，你怎么用它们来指导你的DevOps工作？&lt;/p>
&lt;p>本文的阅读建议：&lt;/p>
&lt;ul>
&lt;li>下载我整理的最新版的《DevOps能力成长模型》，含双模型分解图。&lt;/li>
&lt;li>阅读和参考前5年的DevOps状态调查报告，了解今年这份报告的历史和发展历程。以前的文章中有下载链接/二维码。&lt;/li>
&lt;li>阅读2019年的调查问卷的中文版，感谢中国DevOps社区翻译团队对英文原版问卷的翻译工作，如果你都不知道这些调查结果是通过什么问卷调查得出的，那真的是很可惜。如果你想用这套问卷工具在企业内部做调研，请使用前文中的免费调查服务申请流程。样例问卷的访问地址：&lt;a class="link" href="https://www.wjx.cn/jq/43837840.aspx" target="_blank" rel="noopener"
>https://www.wjx.cn/jq/43837840.aspx&lt;/a>&lt;/li>
&lt;li>在Google的网站上做极简版DevOps行业基础测试，它是6年行业调查结果数据库的首次对外开放。&lt;/li>
&lt;/ul>
&lt;h2 id="模型是怎么诞生的">模型是怎么诞生的？
&lt;/h2>&lt;p>首先，我们需要了解一下这份持续了6年的报告是谁主导并开发的？这是一个怎样的团队？从DORA公司网站的这个页面上，可以看到团队人员介绍。&lt;a class="link" href="https://devops-research.com/about.html" target="_blank" rel="noopener"
>https://devops-research.com/about.html&lt;/a> 如下所示。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567336555/1sajldfkj.png"
loading="lazy"
>&lt;/p>
&lt;p>不做其它任何解读和评论，只想请大家关注一下分析报告的主持者的title : Dr Nicole Forsgren, CEO and Chief Scientist ; 翻译一下 Nicole Forsgren 博士，CEO和首席科学家。她是一个长期的IT行业从业人员，最早专注于DevOps的行业调研员。她持有管理信息系统的博士学位和会计硕士学位。从社交媒体上可以看出她和行业大咖Jez Humber和Gene Kim都是好朋友。&lt;/p>
&lt;p>其次，如果你也回顾了所有往届的DevOps状态调查报告，我们应该能体会到这场历时6年行业调研的基本逻辑和脉络。在第一年就已经提出了四大黄金度量指标，并且以此为主线；每年反复验证状态，以及其他相关影响因素。使用了&lt;strong>穷举&lt;/strong>的逻辑，每年根据行业的发展动态，根据和其它业内大咖的讨论，适当的加入新的调查点。当然每个调查的能力点也是需要每年反复确认和验证，调查点之间的逻辑关系也越来越明显，经过二次研究之后就形成了DevOps能力成长模型。&lt;/p>
&lt;p>最后，DevOps能力成长模型诞生于《Accelerate:The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations 》这本书。
&lt;a class="link" href="https://www.amazon.com/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339" target="_blank" rel="noopener"
>https://www.amazon.com/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1530036828/Accelerate.jpg"
loading="lazy"
>&lt;/p>
&lt;p>在这本书里分模块（局部）的介绍了DevOps能力模型的影响逻辑关系，从转型型领导力一直推导出模型的最右侧：组织效能和非商业效能。这个模型应该就是历届DevOps状态调查研究背后的理论基础，当然它也应该是慢慢发展和完善出来的，起码数字转型这个话题是2018年才出现的热点。模型的数值计算算法，见近两年报告的附录部分。这个模型在本书中是从各个不同的局部关系逐渐介绍的。如下图所示：&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567337105/3-jsfjaksjf333.png"
loading="lazy"
>&lt;/p>
&lt;p>Accelerate全书的逻辑不仅在于介绍各种DevOp实践、技术、文化、领导力等等相关因素有哪些，更重要的是揭示出这些影响因素（能力点）之间的关联关系。在书的最后展示了DevOps能力成长模型的全图，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567337168/4-ruwiur848.png"
loading="lazy"
>&lt;/p>
&lt;p>Accelerate这本书也提供了这幅图的电子版下载链接：&lt;a class="link" href="https://devops-research.com/assets/transformation_practices.pdf" target="_blank" rel="noopener"
>https://devops-research.com/assets/transformation_practices.pdf&lt;/a>&lt;/p>
&lt;p>这是一份非常棒的学习资料，如果你还没有买本书的话，也可以下载学习这份精华资料。这份文档的总标题是：”调研总体策划“，除了模型之外该文档还提供了一张全面复杂的表格，表格的名字：”高效能团队，管理、领导力行为和实践调查表，由Steve Bell，Karen Whitley Bell“；如果你想对自己的组织进行全面的调研的话，这也是一份优秀的调研方案。调研的矩阵如下：&lt;/p>
&lt;ul>
&lt;li>纵向：文化、组织结构、直接学习和对齐价值、部署策略、通过分析提高流动性和训练有素的问题解决、工作方式节奏化&amp;amp;日常化&lt;/li>
&lt;li>横向：团队实践、管理实践、领导力实践。&lt;/li>
&lt;/ul>
&lt;p>我很有幸2017年在北京DevOpsDays大会上参加Jez先生的培训，并获赠了Jez先生的签名版《Accelerate》纸版书，其实在这以前我已经购买了Kindle的电子版和Audible的有声书版。我反复研读了这本书的各种版本，再次强烈推荐所有DevOps相关的管理者一定要学习这本书。&lt;/p>
&lt;p>以书中的模型为基础，2018年的DevOps状态报告里以又进一步做了各种扩展，如果你读过去年的报告，你可以看到如下的各种局部的扩展。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567337168/7asdfweruui238.png"
loading="lazy"
>&lt;/p>
&lt;p>大家注意看2018年的这个局部模型图的标题”精益和敏捷实践“，这里也包含敏捷开发实践。我在反复琢磨这个模型之后，用Twitter私信问过Nicole博士。我问他为何没有专项调查过敏捷开发实践？模型上为何不给敏捷开发一个位置？她的回复是，我们之前已经调研过了，而且模型上也提到了。可能在全球的软件开发工程水平看，有可能Nicole博士团队认为敏捷开发应该是比较基础的软件开发实践，据我个人了解国外高水平公司要么都已经规范照做了，要么也有像Google这样的高水平公司确实也不显性的宣传自己是敏捷开发，甚至吐槽敏捷的。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567337168/8jfasjflsdf.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567337168/9ruwueriowur.png"
loading="lazy"
>&lt;/p>
&lt;p>2018年对模型的扩展力度还是很大的，提出了很多新的调查项；为了能看到方便的看到一个DevOps能力模型的全景视图，我使用OmniGraffle软件基于《Accelerate》书中的模型，扩充绘制了如下的模型图：&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567338260/12-23ru83.png"
loading="lazy"
>&lt;/p>
&lt;p>这幅图向我们完整的揭示了到2018年以来的所有DevOps调研点，有些点是经过多年反复验证的，有些是2018年新引入的。这幅图花了我几天时间，在这个过程中也反复的推敲了其中的逻辑关系。这幅图仅代表我个人的观点，不代表DORA和《Accelerate》书籍的任何观点；需要声明的是：我绘制的DevOps能力成长模型并非我的个人著作，引用了DORA和《Accelerate》的著作，但我力求精确无误的表达整个模型。再次声明，这个模型图非官方出品，是我的个人研究。&lt;/p>
&lt;p>研究模型的研究逻辑是穷举法，是从左到右的推导和影响关系。最新发布的2019年DevOps状态调查报告显示了新的变化，这触发了对以上模型的更新。本文将提供最新版高清大图的下载。&lt;/p>
&lt;h2 id="为何两个模型">为何两个模型？
&lt;/h2>&lt;p>为何2019年会分化出两个模型，简单的讲：穷举的范围越来越大了，生产力作为一个新的全局共享目标进入了调查问卷的范围。我们之前社区的小伙伴已经将2019年的近100道调查题问题翻译成中文了，敬请参阅参考DevOps状态调研问卷。在翻译完那些题目后，我并没有意识到今年可能会新增出这样一个全局共享目标的调研对象，真的以为：这个效能模型（组织效能和非商业效能）会一条道走到最后。&lt;/p>
&lt;h3 id="效能模型">效能模型
&lt;/h3>&lt;p>对效能模型的更新变化如下图所示：&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567339754/2019-dora-perf.jpg"
loading="lazy"
>&lt;/p>
&lt;h3 id="生产力模型">生产力模型
&lt;/h3>&lt;p>新增的生产力模型令我感到相当意外，它的结构如下所示：&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567339754/2019-dora-prod.jpg"
loading="lazy"
>&lt;/p>
&lt;p>总之，还无法预测明年的调研范围会有怎样的更新。可以确认的是行业DevOps的能力模型是在动态变化的，想跟上世界级的水平还必须不断刷新自己的能力组合。否则你的同行的对手可能早就一骑绝尘而去了。DevOps能力发展不是一个有限游戏（例如刷黄金5级），是每年都和整个行业一起发展的无限游戏。&lt;/p>
&lt;h2 id="如何使用模型">如何使用模型？
&lt;/h2>&lt;p>2019年的报告中给出了模型的使用和阅读方法的官方解释，见2019年报告英文原版的27页。本文对其的解读如下。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567379589/11-3kgsfdgjds.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="使用模型指导转型">使用模型指导转型
&lt;/h3>&lt;p>识别你将要改善的能力点。模型中的每个被箭头所指向的方块被称之为构造，构造有单级构造，也有二级构造（如精益产品开发、软件开发实践），历年来的报告中已经为你展示和所有DevOps能力点，你现在需要做的是从中选择出你需要改进的候选能力点。&lt;/p>
&lt;p>开展加速度的组织转型需要一个前提条件，一个扎实的基础作为起点。报告中并没有解释这个条件，你需要自己理解。聚焦在转型所急需的那些候选能力点上，在多个候选能力点里选择出亟需改进的”约束点“「此处参考TOC限制理论，相关书籍《目标》」。想想：那些能力的不足造成了最大的延期？「记住这里说的是最大值，这需要一个量化的跨组织的分析调研」什么最让你头痛？什么是最大的问题？经过以上的引导问题的提示，从清单中选出3~5个候选优化发展的能力项，安排出专项人力和财力资源，先重拳出击改善第一波能力点。不要担心你还有其他的很多问题；现阶段不妨聚焦在那个最大的问题上；这样你才能将瓶颈（约束点）各个击破，发掘这个其他的协同功效，避免不必要的工作。这个部分基本上是经典TOC理论的应用，关于这个理论在DevOps实施中的详细使用方法描述，请参考《DevOps实践指南》的第二章 2.5 持续识别和改善约束点。&lt;/p>
&lt;p>以上DevOps转型工作还有其他的产出。那些追求SDO组织效能的组织还会得到这些收益，降低职业透支（996icu）和部署的痛，提高安全水平。附加的好处还包括，它能提高生产力，提高了生产力就可以获得工作生活平衡且降低职业透支。&lt;/p>
&lt;h3 id="怎样阅读模型">怎样阅读模型？
&lt;/h3>&lt;p>报告使用了结构方程模型 （Structural equation modeling &lt;a class="link" href="https://en.wikipedia.org/wiki/Structural_equation_modeling%ef%bc%89" target="_blank" rel="noopener"
>https://en.wikipedia.org/wiki/Structural_equation_modeling）&lt;/a> ，来作为一种预测模型，用它测试各个构造之间的关系。模型中的每个方块就是一个调研度量的点，就是一个构造。剪头表示了构造之间的关系。一个大的包含多个构造的方框称之为二级构造。淡蓝色的构造表示一个控制变量，它用点线连接。&lt;/p>
&lt;p>在报告原文中，将第31页和57页的模型称之为全模型，见报告的27页的原文：”See pages 31 and 57 for full models.“；而在我的系列文章中，则将下图称之为全模型。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567339751/2019-dora-DevOps-all.jpg"
loading="lazy"
>&lt;/p>
&lt;p>以上阅读方法同样的适用于上图。总之请仔细理解了左下角的图例，正确的阅读和理解模型。不管你是将DevOps实践的实施视为组织转型也好，把它当做项目做也罢；当你识别你的目标的时候，都可以参考这个模型。&lt;/p>
&lt;h3 id="两个研究模型的重叠">两个研究模型的重叠
&lt;/h3>&lt;p>由于SDO效能和生产力在很多方面本来就是相关的。它们的产出都是使用各种优秀的方法创造和交付各种技术，从而为组织和个人交付价值。那些优化软件交付的支持工作也将使生产力受益，这也是理所当然的。虽然他们的某些诱因是相同的，它们看起来很相似，但是他们度量的产出确实不同的，报告团队也是组织了独立的分析调研。总之，SDO效能和生产力是两个不同的调研模型。&lt;/p>
&lt;h3 id="重叠模型的妙用">重叠模型的妙用
&lt;/h3>&lt;p>当你在应用SDO效能模型的时候，可以在消减职业透支方面做出聪明点的投资，更高的生产力也同样能降低职业透支。因此这个应该是向各种组织和技术团队大力提倡的做法，由于工作需求是持续增长的。工作是没完没了的，这个项目完了，还有下一个项目。而我们需要注意，我们也要关注生活和工作的平衡，而降低职业透支。&lt;/p>
&lt;p>心理安全性文化也能对SDO效能、组织效能和生产力作出贡献。研究结果表明了创造和发展健康的文化对组织和个人都有好处。&lt;/p>
&lt;p>投资在代码可维护性、松耦合架构和监控方面，也能同时帮助SDO效能、生产力（它们是通过消减技术债间接的影响到生产力的）。好的工具和系统也非常值得关注。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>通过本文我相信你已经可以正确的理解2019年状态报告中的模型了，模型包括SDO效能模型和生产力模型。包括我绘制的全模型。希望DORA官方能后续推出官方版模型全图。&lt;/p>
&lt;blockquote>
&lt;p>模型的意义在于：DevOps能力点是整个软件开发和交付行业都应该关注的，在投资DevOps实践的时候，需要能聚焦到组织各自不同的急需改进的能力约束点组合上。通过模型最右侧的组织级统一共享目标来度量和验证DevOps的实践是否实际有效。&lt;/p>&lt;/blockquote>
&lt;p>TOC是一个值得关注的问题解决套路，参考其它的相关文章和其它各种书籍。&lt;/p>
&lt;p>请关注DevOps教练的公众号，在后台输入2019，下载本文中各种模型的高清大图。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566516259/DevOps-Coach-qrcode_for_gh_bce38ef330e5_430.jpg"
loading="lazy"
>&lt;/p>
&lt;hr></description></item><item><title>如何做横向行业的DevOps表现基准测试？</title><link>https://martinliu.cn/blog/2019-state-devops-report-insight-1/</link><pubDate>Wed, 28 Aug 2019 07:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-report-insight-1/</guid><description>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/1-jafadjf.jpg" alt="Featured image of post 如何做横向行业的DevOps表现基准测试？" />&lt;p>长期关注我的blog和微信公众号（DevOps教练）的朋友可以发现，我今年从这个调查问卷开始，陆续发布了一些列文章。如果给这些文章一个文集标题的话，那么应该是：死磕2019年加速度全球DevOps状态调查报告系列。 为了帮助大家充分利用这份优秀的行业报告，我会用一些列文章，分章节的解读这份长达80多页的报告。上一篇文章如果你已经解读了该报告的核心重要发现和看点。本文要覆盖的章节是 How do we compare 这一章。&lt;/p>
&lt;p>本文的阅读建议：&lt;/p>
&lt;ul>
&lt;li>先阅读和参考前5年的DevOps状态调查报告，了解今年这份报告的历史和发展历程。以前的文章中有下载链接/二维码。&lt;/li>
&lt;li>阅读2019年的调查问卷的中文版，感谢中国DevOps社区翻译团队对英文原版问卷的翻译工作，如果你都不知道这些调查结果是通过什么问卷调查得出的，那真的是很可惜。如果你想用这套问卷工具在企业内部做调研，请使用前文中的免费调查服务申请流程。样例问卷的访问地址：&lt;a class="link" href="https://www.wjx.cn/jq/43837840.aspx" target="_blank" rel="noopener"
>https://www.wjx.cn/jq/43837840.aspx&lt;/a>&lt;/li>
&lt;li>在Google的网站上做极简版DevOps行业基础测试，它是6年行业调查结果数据库的首次对外开放。&lt;/li>
&lt;/ul>
&lt;h2 id="why-devops">WHY DEVOPS？
&lt;/h2>&lt;p>这是一个可以持续反复问自己的问题，首先让我们澄清一件事情：为什么要做DevOps？&lt;/p>
&lt;p>是否是为了提高研发效能？是否是为了提高生产力？是否是为了提高效率？这些答案可能都对，也可都不对。对于一个组织而言：如果IT对它的使命和目标至关重要的情况下，组织对IT会产生强依赖关系，DevOps才对该组织才有意义。历年来的DevOps状态调查告诉我们：DevOps对于那些以IT为命脉的组织而言直观重要，对所有从事软件交付的组织广泛有效。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/12-23ru83.png"
loading="lazy"
>&lt;/p>
&lt;p>从DevOps能力成长模型中可以看出，图中的诸多能力项都正向贡献/预测到最右侧的两个组织级别目标，他们是：组织效能和非商业效能（商业和非商业目标），它们是：&lt;/p>
&lt;ul>
&lt;li>盈利能力 （商业）&lt;/li>
&lt;li>生产力&lt;/li>
&lt;li>市场份额 （商业）&lt;/li>
&lt;li>客户数量 （商业）&lt;/li>
&lt;li>产品或服务的数量 （商业）&lt;/li>
&lt;li>运营效率&lt;/li>
&lt;li>客户满意度 （商业）&lt;/li>
&lt;li>提供的产品或服务的质量 （商业）&lt;/li>
&lt;li>实现组织或使命目标&lt;/li>
&lt;/ul>
&lt;p>如果你的某项/某几项DevOps实践能够直接贡献到以上的商业目标，或者说能持续的创造客户价值，即商业价值；那么你的DevOps就是成功的。反之，如果你仅仅期望研发效能、生产力、效率能够就等同于创造出了很多的客户价值，那是一种幻觉；这就像是：你经过了很多预赛和体能的准备，而在冠军争夺赛中，你依然名落孙山，当你的组织的绩效远远低于预期的商业目标的时候，你的各种XXX效率都是无用的。&lt;/p>
&lt;h2 id="四大黄金度量指标">四大黄金度量指标
&lt;/h2>&lt;p>6年来的DevOps状态调查报告（我只关注DORA主导和执行的这个）已经在用量化的方式，帮助我们作出了精英表现者的画像，当然还有其它的落后者。可以明确的一点是：强者从四个维度上同时都表现强劲。（去年已经打破了常见的一个误区：过度的保守主义导致在组织四个指标之中做折中选择，常见的是牺牲吞吐量指标，确保稳定性，可是后果往往是相反的。）&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/10-2373.png"
loading="lazy"
>&lt;/p>
&lt;p>先来回顾和梳理所谓的四大黄金度量指标的分类：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>吞吐量&amp;ndash;部署频率&lt;/strong>：对于您工作的主要应用程序或服务，您的组织在生产环境进行代码部署或向最终用户做发布的频率。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第二题。&lt;/li>
&lt;li>&lt;strong>吞吐量&amp;ndash;前置时间&lt;/strong>：对于您工作的主要应用程序或服务，从代码提交到在生产中成功运行的过程需要的时间。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第一题。&lt;/li>
&lt;li>&lt;strong>稳定性&amp;ndash;服务恢复时间&lt;/strong>：对于您工作的主要应用程序或服务，当服务中断或出现影响用户Bug时（如：计划外中断、服务受损），恢复服务通常需要的时间。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第四题。&lt;/li>
&lt;li>&lt;strong>稳定性&amp;ndash;变更失败率&lt;/strong>：对于您所工作的主要应用程序或服务，对于生产变更，或向最终用户发版的变更，百分之多少会导致服务质量下降（如：服务受损或服务中断），并需要进行后续的修复工作（需要热补丁、回滚，前向修复，打补丁修复）。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第五题。&lt;/li>
&lt;/ul>
&lt;p>上面的四个指标是DevOps状态调查报告使用cluster算法做受众分类的主要依据，这个类聚分析的结果就是那张四大DevOps等级的泡泡图。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567001372/11-w97459438isuuf.png"
loading="lazy"
>&lt;/p>
&lt;p>在这个泡泡图中，我们可以看到有多少比例的受访者处于精英、高效、中等和低效的阵营。复述一下今年的一个重大发现：精英表现者已经从去年的高效能表现者集团中脱颖而出，他们在指标的绝对值和总体数量上都增长迅敏，增长率高达将近3倍。&lt;em>【DevOps教练点评：回顾一下这份报告的标题中加入的加速度的关键字，一旦某个组织的实施方法得当，一个持续优化的组织的整体效能就可能做上火箭，加速度的飞离地球。而加速度不足的企业则处于持续跌回地面的窘境。】&lt;/em>&lt;/p>
&lt;p>这四大黄金度量指标的采集方法就是调查问卷中那些四个问题。对所有实践DevOps的组织而言，我们需要的是持续实施和优化追踪这些度量指标的方法和系统，确保能实时查看这四个指标的状态是最完美的。可是目前几乎还没有什么企业能够做到，手工分别统计上报，定期公布到全体IT部门也是非常可取的做法。总之，没有度量就不存在管理，就无从系统性的改进。&lt;/p>
&lt;h2 id="我在行业里的表现如何">我在行业里的表现如何？
&lt;/h2>&lt;p>这是我写作本文想要回答的核心问题。如果你能够度量自己的四个黄金指标了，也能够随时拿出一组确切的数据，我们就能做行业基准测试比较了。&lt;/p>
&lt;p>这可能是Google收编DORA团队所买到的最有价值的一部分资产，历年来的DevOps调查问卷参与者的问卷答案数据库。Google今年将这个数据库向公众开放了，网址在 &lt;a class="link" href="https://beta.devops-research.com/performance.html" target="_blank" rel="noopener"
>https://beta.devops-research.com/performance.html&lt;/a> (这个网址应该不用科学上网，会出现证书错误提示，请忽略继续访问该页面)。在你回答了下面的五个问题后，就可以获得一份自己的行业基准测试报告。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/2-faldjfald.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/3-adfjafdasldf.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/4-9578921374.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/5-faljdfl2e44.png"
loading="lazy"
>&lt;/p>
&lt;p>最后一个问题是，从13个行业中选择出一个最合适的所在行业。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/6-ajflasjfd22.png"
loading="lazy"
>&lt;/p>
&lt;p>下图是你在整个所有行业里的横向对比。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/7-fjlasf.png"
loading="lazy"
>&lt;/p>
&lt;p>下图是你在所在行业里的横向对比。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/8-ajflasjf2.png"
loading="lazy"
>&lt;/p>
&lt;p>下图是四个黄金指标在四个表现级别/集团上的度量；表明你每个指标处于哪个等级。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/9-asjfl23uu.png"
loading="lazy"
>&lt;/p>
&lt;p>经过以上的最简版DevOps表现状态基准测试以后，你就看到了你在所有行业中和所在行业中的横向比较。当然，我们也能预测一下自己处于那个阵营和等级。然而，这并不是你的DevOps旅程的剧终情节。&lt;/p>
&lt;p>所有DevOps的实践者一旦上路以后，都是一条不归路的感觉，我们可以定期的关注我们的基准测试结果，并观察自己在动态变化的行业基线中的位置，而更重要的是：找到每个现阶段的改进空间，并且持续突破自己DevOps的能力瓶颈和极限。持续的无限制的加速度发展所有DevOps能力点才是这个DevOps旅程的终极意义。&lt;/p>
&lt;h2 id="关于服务运维效能">关于服务运维效能
&lt;/h2>&lt;p>服务效能指标是在去年的效能报告中新引进的，而在去年和今年的调查问卷和结果报告中并没有直接的关于这项指标的采集数据和结果。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1567000726/10-2373.png"
loading="lazy"
>&lt;/p>
&lt;p>从上图中我们可以直接的理解一下，左侧的四大黄金指标都关乎于软件开发部门，而这个指标关乎于服务运维部门。去年并没有给出关于可用性指标的度量方法，今年也没有在调查问卷中做直接/显性的问题设置。只是在今年2019年的报告中做了进一步的解释，说这个可用性指标的实施方法论是SRE套路。我正在翻译SRE Workbook，这本书比起之前翻译的DevOps Handbook，更具有实操性。我们拭目以待，明年的状态调查问卷是如何对可用性设问和调查分析的。关于SRE的基础概念和实施方法，心急的朋友不妨参加中国DevOps社区今年10月在杭州举办的年度大会，我有一个关于SRE的主题分享，让我们一起讨论SRE的落地套路，让用SRE套路使我们的DevOps故事闭环。&lt;/p>
&lt;p>总之我们实践DevOps的时候要全局的关注“软件交付和运维效能”，简称SDO效能（software delivery and operational performance）；有O了才完整的闭环了。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>本文写道这里，我认为你可以无障碍的阅读2019年加速度全球DevOps状态调查报告到第25页了。我们总结一下，你应该能理解吞吐量和稳定性的四大黄金度量指标的定义；持续度量和关注这些指标的正确方法；使用Google所提供的极简版度量工具，找到自己在行业中的定位和所处的效能级别。关注SDO效能的完整性，尝试了解和实践SRE实践，让你的DevOps体验闭环和完整起来。下一期死磕2019年加速度全球DevOps状态调查报告系列将为你呈现更新版本的DevOps能力成长模型，进一步讲解如何应用今年分化出来的两个研究模型：SDO和组织效能模型与生产力模型。&lt;/p>
&lt;hr></description></item><item><title>2019年加速度DevOps状态调查报告-导读</title><link>https://martinliu.cn/blog/2019-state-devops-survey-report/</link><pubDate>Thu, 22 Aug 2019 07:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-survey-report/</guid><description>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/abstract-4.jpg" alt="Featured image of post 2019年加速度DevOps状态调查报告-导读" />&lt;p>凭借六年多的来自全球31,000多名专业人士的数据的研究，2019年加速发展状态报告是同类研究中规模最大、持续时间最长的研究。2019年加速度DevOps状态调查首发，首发的位置在Google Cloud网站上的Blog栏目，发布于产品新闻分类下。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>文章使用的主标签 DevOps 、SRE。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;ul>
&lt;li>文章地址：&lt;a class="link" href="https://cloud.google.com/blog/products/devops-sre/the-2019-accelerate-state-of-devops-elite-performance-productivity-and-scaling" target="_blank" rel="noopener"
>https://cloud.google.com/blog/products/devops-sre/the-2019-accelerate-state-of-devops-elite-performance-productivity-and-scaling&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>下文为对Google文章原文的翻译和整理。并且加入了我本人的各种判断和见解。&lt;/p>
&lt;p>关于今年的DevOps状态调查报告有什么更新和变化？报告文章中给我们了一句话的概要介绍：今年会对部署工具链、云计算、灾难恢复和工作方式等主题进行深度调查。更详细的情况，详细的参过问卷调查的您自有评判。&lt;/p>
&lt;p>‘DevOps之研究和评估’（DORA）是通过数据驱动的洞察力，帮助组织实现DevOps和高效能组织的先驱，而Google Cloud很高兴地宣布推出2019年加速DevOps报告 。（前期文章介绍过DORA加入Google Cloud的细节） 该报告提供了DevOps行业的全景视图，为各种规模和所有行业的组织提供可操作的指导，从而提高他们的软件交付效能，最终使之成为精英DevOps实践者。&lt;/p>
&lt;h2 id="2019年的新洞见">2019年的新洞见
&lt;/h2>&lt;p>我们看到：有持续的证据表明了软件的速度、稳定性和可用性有助于提高组织绩效，今年我们能够发现一些关于推动DevOps高绩效表现，以及实践和功能的新洞见。 部分如下所示：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>DevOps已经‘跨越了鸿沟’&lt;/strong>：各个行业的组织继续地提高着他们的DevOps专业知识，特别是在表现最高那部分人群中。 精英表现者的比例几乎提高了两倍，目前他们占所有组织的&lt;em>20％。 这也得到了其他行业分析师报告的证实。&lt;/em>【教练解读：精英表现者实现了从7%到20%的增长。】&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566509912/DevOps_insights.0986061310991192.max-2000x2000.png"
loading="lazy"
alt="DevOps insights"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>精英表现者更有可能使用云计算 ：快速自动扩缩容、成本可见性和可靠性是云计算提供的一些关键优势。更具国家标准与技术研究院（NIST）定义的云计算所具有的五项特征功能，效能最高的DevOps团队比低效能团队在这些方面执行的可能性高24倍，5大特性包括按需的自助服务、广泛的网络访问、资源池，快速弹性和可度量的服务。 &lt;em>【教练解读：你们家使用的云计算是假的。】&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>大多数云计算用户并未充分发挥其潜力 ：只有29％的使用云计算的受访者符合NIST上述的五项标准特征。 这证明了这样一个事实，即声称使用云计算的组织，未必采用了所有必要的云计算特征模式来实现精英水平的业绩，这也有可能会阻碍他们通过云计算获益。 &lt;em>【教练解读：你号称的优势正在阻碍你。】&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>首次呈现出了行业差异性 ：在今年的报告中，零售行业在速度和稳定性方面都展示出了更好的表现。然而，与前几年保持一致的是，根据持续的证据表明，DevOps更好或更差的表现，并没有其行业的差异性。这依然表明：各种类型和规模的组织，包括金融服务、政府和零售等高度监管的行业，也都是可以通过应用DevOps实践来实现高水平的绩效。【教练解读：今年零售业做的很突出，还是你们进来刷榜了？】&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DevOps走进企业 - 第1部分 ：我们首次发现，根据证据显示大型企业组织（员工人数超过5,000人）的效能低于小型企业（员工人数少少于5,000人）。重量级的流程和控制措施，以及紧耦合的体系架构是导致较低速度，以及相关不稳定性的部分原因。&lt;em>【教练解读：大型组织的坑也更大。】&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DevOps走进企业 - 第2部分 ：我们的分析显示最高能的DevOps表现者（即高级和精英表现者），专注于通过结构化的解决方案来构建DevOps社区，这些解决方案包括以下四种模式之一：社区建设者、大学、涌现和实验者（Community Builders, University, Emergent, and Experimenters）。&lt;em>【教练解读：需要给它山之石提供存在的土壤。】&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>没有“一刀切”的方法，成功有赖于一致的努力付出 ：在投资于DevOps的各项能力时，特别是在大型组织中，需要同时关注团队级别和组织级别的工作成果。在团队层面上，持续集成、自动化测试和监控等实践的一些工作投入运作良好。组织级能力包括：在多个部门和团队之间，设置系统体系结构或变更审批策略的能力。 该报告分解了这些能力并概述了应该采取的策略，因此您也可以执行相关的DevOps策略，并从中获得最大的效果。&lt;em>【教练解读：单纯的刷某个团队或者项目也是然并卵。】&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>表现较差的组织比高级和精英表现者使用的软件更多 ：维护和支持私有商业软件的成本可能过高，这促使高级和精英表现者使用开源解决方案。 这和以前报告中的结果一致。 事实上， 2018年的加速度 DevOps报告就表明，精英表现者大量使用开源组件、库和平台的可能性是其它组织的 1.75倍。&lt;em>【教练解读：开源软件正在吞噬着整个世界。】&lt;/em>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="你如何改进devops">你如何改进DevOps？
&lt;/h2>&lt;p>今年的报告提供了有助于推动DevOps改进性能和生产力的两种研究模型。&lt;/p>
&lt;p>&lt;strong>效能研究模型&lt;/strong> 着眼于哪些能让你提升组织绩效的结构和抓手，提供相关的云计算、持续交付、灾难恢复测试，明确变更管理和心理安全文化是如何对软件交付绩效产生积极作用的见解。 本次研究还发现重量级的变革流程是不起作用的。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566512814/performance_research_model.max-2000x2000.png"
loading="lazy"
alt="效能研究模型"
>&lt;/p>
&lt;p>图片翻译参考：&lt;/p>
&lt;ul>
&lt;li>左侧的一列，从上至下：清晰的变更流程、重量级变更流程、灾难恢复测试、代码的可维护性、松耦合的架构、监控、主干开发、自动化部署。&lt;/li>
&lt;li>中间的一列，从上至下：心理安全感文化、持续交付、云计算、持续集成、自动化测试。&lt;/li>
&lt;li>右侧的一列，从上至下：行业（控制）企业（控制）、工作恢复、透支&lt;/li>
&lt;li>图例，从上至下：结构、二级结构、团队或者组织的统一目标、控制变量、正向预测关系、双向影响、负面影响关系、粗体字-今年新的调查结果（左侧1～4，中间1）&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>生产力研究模型&lt;/strong> 表明：组织可以通过投资易于易用的工具和信息搜索引擎、心理安全文化，以及消除技术债务的方式来提高工程师的生产力。 提高生产力还有助于提高员工的工作-生活平衡，并降低职业透支（教练注释-996icu）。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566513555/productivity_research_model.max-1600x1600.png"
loading="lazy"
alt="生产力研究模型"
>&lt;/p>
&lt;p>图片翻译参考：&lt;/p>
&lt;ul>
&lt;li>左侧的一列，从上至下：实用且易用的工具、内部搜索引擎、外部搜索引擎、代码可维护性。&lt;/li>
&lt;li>中间的一列，从上至下：心理安全感文化、生产力、技术债、松耦合的架构、监控。&lt;/li>
&lt;li>右侧的一列，从上至下：多年的经验（控制）、SDO效能、软件交付效能、可用性、组织级效能、透支&lt;/li>
&lt;li>图例，从上至下：结构、正向预测关系、负面影响关系、团队或者组织的统一目标、控制变量、弱关联性、粗体字-今年新的调查结果（左侧1～4，中间1～2，右侧2）&lt;/li>
&lt;/ul>
&lt;p>今年的报告再次确认了连续第六年各种重要发现：首先，可以在不牺牲速度的情况下优化稳定性。 其次，DevOps通过影响商业和非商业目标为​​客户和最终用户提供价值。&lt;/p>
&lt;p>感谢为调查做出贡献的所有人。 我们希望此报告能够帮助各种规模，行业和地区的组织改进。 我们期待听到您对报告的想法和反馈。 您可以通过以下方式了解有关2019年加速状态报告的更多信息。&lt;/p>
&lt;h2 id="相关材料和扩展">相关材料和扩展
&lt;/h2>&lt;h3 id="报告尝鲜试读">报告尝鲜试读
&lt;/h3>&lt;h4 id="报告封面">报告封面
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518180/state-of-devops-2019.jpg"
loading="lazy"
>&lt;/p>
&lt;p>关注点：DORA + Google， 新的赞助商的支持。&lt;/p>
&lt;h4 id="报告目录">报告目录
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518068/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7_2019-08-23_%E4%B8%8A%E5%8D%887.51.36.png"
loading="lazy"
>&lt;/p>
&lt;p>目录结构很类似，内容大不同。&lt;/p>
&lt;h4 id="devops四大核心度量指标">DevOps四大核心度量指标
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518068/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7_2019-08-23_%E4%B8%8A%E5%8D%887.51.58.png"
loading="lazy"
>&lt;/p>
&lt;p>四个级别的表现者在四大度量维度上的比较，以及今年的数据更新。&lt;/p>
&lt;h4 id="精英表现者">精英表现者
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518069/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7_2019-08-23_%E4%B8%8A%E5%8D%887.52.10.png"
loading="lazy"
>&lt;/p>
&lt;p>他们始终遥遥领先。重点是所有的指标同时都好。&lt;/p>
&lt;h4 id="两大研究模型的分化">两大研究模型的分化
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518069/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7_2019-08-23_%E4%B8%8A%E5%8D%887.52.23.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>效能模型&lt;/li>
&lt;li>生产力模型&lt;/li>
&lt;/ul>
&lt;h4 id="灾难恢复测试">灾难恢复测试
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518069/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7_2019-08-23_%E4%B8%8A%E5%8D%887.52.49.png"
loading="lazy"
>&lt;/p>
&lt;p>灾难恢复测试和DevOps强相关。&lt;/p>
&lt;h4 id="心理安全性">心理安全性
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518068/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7_2019-08-23_%E4%B8%8A%E5%8D%887.53.04.png"
loading="lazy"
>&lt;/p>
&lt;p>文化建设的一个关键组成。&lt;/p>
&lt;h4 id="devops转型的策略一览表">DevOps转型的策略一览表
&lt;/h4>&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566518068/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7_2019-08-23_%E4%B8%8A%E5%8D%887.53.41.png"
loading="lazy"
>&lt;/p>
&lt;p>你们都用了哪些推广DevOps的策略呢？抱歉并没有刷成熟度这一项。&lt;/p>
&lt;h3 id="下载报告">下载报告
&lt;/h3>&lt;p>目前Google的官网上提供了所有DORA的DevOps状态调查报告的下载包括2019年度最新的状态调查报告。为了方便国内DevOp实践者的学习，我将它下载到了百度网盘。请大家需要的按照一下方法下载阅读。&lt;/p>
&lt;p>报告下载方法：&lt;/p>
&lt;ol>
&lt;li>扫码下面的二维码，关注DevOps教练的微信公众号&lt;/li>
&lt;li>进入DevOps教练的微信公众号的文字输入状态&lt;/li>
&lt;li>输入数字 ： 2019&lt;/li>
&lt;li>识别自动回复的二维码&lt;/li>
&lt;li>下载pdf版本的2019加速度DevOps状态调查报告&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1566516259/DevOps-Coach-qrcode_for_gh_bce38ef330e5_430.jpg"
loading="lazy"
alt="DevOps教练"
>&lt;/p>
&lt;h3 id="使用2019调查问卷服务">使用2019调查问卷服务
&lt;/h3>&lt;p>前面的文章发布了2019DevOps问卷调查的中文翻译版本，&lt;a class="link" href="https://martinliu.cn/posts/2019-state-devops-survey-chinese-version/" target="_blank" rel="noopener"
>https://martinliu.cn/posts/2019-state-devops-survey-chinese-version/&lt;/a> 这是对原版英文调查问卷的翻译，由中国DevOps社区翻译组完成，现在我们已经将它通过问卷星平台转化成了可以使用的调查服务。&lt;/p>
&lt;p>如果你的企业正在实施DevOps，如果你想了解一下这种称之为DevOps的科学的调查问卷，不妨可以通过下面的流程申请使用这个问卷服务：&lt;/p>
&lt;ol>
&lt;li>发邮件到 &lt;a class="link" href="mailto:info@DevOpsChina.org" >info@DevOpsChina.org&lt;/a> ；邮件标题为 dora 2019&lt;/li>
&lt;li>邮件内容请包含：公司名称、使用范围（全公司、团队）、使用其实时间、联系人姓名、联系人手机/微信、调查问卷的套数（题套问卷对应一个网站，可下载一份数据采集结果）&lt;/li>
&lt;li>本服务为免费社区服务，在收到邮件后就会尽快为您提供所需要数量的网址，并在约定的结束时间发送调查结果到你的邮箱。&lt;/li>
&lt;/ol>
&lt;h2 id="后续">后续
&lt;/h2>&lt;p>经过了多年对这项行业顶级调查问卷和报告的追逐。今年的报告内容量大，新发现多，而且引入了新的研究模型。我会从内容和模型层面做更多的总结和研究。后续用一系列的文章进行报道。请关注“DevOps教练”微信号的更新文章和本网址的更新。&lt;/p>
&lt;hr></description></item><item><title>中文版：2019年DevOps状态调查问卷</title><link>https://martinliu.cn/blog/2019-state-devops-survey-chinese-version/</link><pubDate>Mon, 06 May 2019 12:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-survey-chinese-version/</guid><description>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/2019-dora.png" alt="Featured image of post 中文版：2019年DevOps状态调查问卷" />&lt;p>本文是中文版《2019年加速度DevOps状态调查》问卷。如果你还没有填写该问卷的话，可以在线上填写英文版，点击这个链接 &lt;a class="link" href="https://bit.ly/2UzLMH2" target="_blank" rel="noopener"
>https://bit.ly/2UzLMH2&lt;/a> ，进入问卷调查网站。本文可以作为你的帮助文档。&lt;/p>
&lt;blockquote>
&lt;p>译者团队：刘征、张晔、刘頲、朱婷、王英伟、王虹、李建芳、沈越飞、井建宇、申屠欣欣&lt;/p>&lt;/blockquote>
&lt;p>本文由以上翻译团队经过两周的时间，在业余时间翻译完成，如果对本文有任何改进建议请发邮件到 martin AT DevOpsCoach.org&lt;/p>
&lt;p>发布本文的另外一个原因：作为历时6年，被称之为DevOps界之科学的调查研究，我们可以透过这套问卷，洞察如何用问卷的方式定量的度量DevOps的现状。对于已经实施了多年DevOps企业，本问卷可谓是一道营养丰富的大餐。&lt;/p>
&lt;h2 id="历年来的devops状态报告">历年来的DevOps状态报告
&lt;/h2>&lt;p>如果你需要下载学习的话，请点击下面的链接（扫码二维码），这里还有历年来英文版报告全集和部分中文版本。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1555778529/reports-download.png.png"
loading="lazy"
alt="下载"
>&lt;/p>
&lt;hr>
&lt;p>下面是2019年DevOps状态调查问卷的简体中文版译文。&lt;/p>
&lt;h2 id="第一部分">第一部分
&lt;/h2>&lt;p>欢迎参加2019年全球DevOps全球行业调查。&lt;/p>
&lt;ul>
&lt;li>我们有兴趣了解您的工作方式以及工作环境。&lt;/li>
&lt;li>答案并没有对错。&lt;/li>
&lt;li>如果您不知道答案，可以选择“我不知道或不适用”，您的作答将被忽略。&lt;/li>
&lt;/ul>
&lt;p>非常感谢您花时间帮助我们去探索那些能使技术进步的秘密！&lt;/p>
&lt;h3 id="1-您的组织主要属于哪个行业">1. 您的组织主要属于哪个行业？
&lt;/h3>&lt;ul>
&lt;li>教育&lt;/li>
&lt;li>能源&lt;/li>
&lt;li>金融服务&lt;/li>
&lt;li>政府&lt;/li>
&lt;li>医疗保健和制药&lt;/li>
&lt;li>工业与制造业&lt;/li>
&lt;li>保险&lt;/li>
&lt;li>媒体/娱乐&lt;/li>
&lt;li>非盈利&lt;/li>
&lt;li>零售/消费品/电子商务&lt;/li>
&lt;li>技术&lt;/li>
&lt;li>电信&lt;/li>
&lt;li>其他。请明确说明： [____]&lt;/li>
&lt;/ul>
&lt;h3 id="2-有多少员工在您的组织里工作">2. 有多少员工在您的组织里工作？
&lt;/h3>&lt;ul>
&lt;li>1-4&lt;/li>
&lt;li>5-9&lt;/li>
&lt;li>10-19&lt;/li>
&lt;li>20-99&lt;/li>
&lt;li>100-499&lt;/li>
&lt;li>500-1,999&lt;/li>
&lt;li>2,000-4,999&lt;/li>
&lt;li>5,000-9,999&lt;/li>
&lt;li>10,000+&lt;/li>
&lt;li>我不知道&lt;/li>
&lt;/ul>
&lt;h3 id="3-你们的服务器上都部署了哪些操作系统">3. 你们的服务器上都部署了哪些操作系统？
&lt;/h3>&lt;ul>
&lt;li>Windows 2003 / 2003R2&lt;/li>
&lt;li>Windows 2008 / 2008R2&lt;/li>
&lt;li>Windows 2012 / 2012R2&lt;/li>
&lt;li>Windows 其他&lt;/li>
&lt;li>Linux Debian / Ubuntu变种&lt;/li>
&lt;li>Linux Enterprise Linux变体（RHEL，Oracle，CentOS）&lt;/li>
&lt;li>Linux Fedora&lt;/li>
&lt;li>Linux SUSE Linux Enterprise Server&lt;/li>
&lt;li>Linux OpenSUSE&lt;/li>
&lt;li>Linux Arch&lt;/li>
&lt;li>Linux其他&lt;/li>
&lt;li>其他的UNIX&lt;/li>
&lt;li>FreeBSD / NetBSD / OpenBSD系统&lt;/li>
&lt;li>AIX&lt;/li>
&lt;li>Solaris&lt;/li>
&lt;li>其他&lt;/li>
&lt;/ul>
&lt;h3 id="4-在过去一年中关于下列绩效指标您的组织实现的程度如何">4. 在过去一年中，关于下列绩效指标，您的组织实现的程度如何？
&lt;/h3>&lt;ul>
&lt;li>您组织的整体表现&lt;/li>
&lt;li>您组织的整体盈利能力&lt;/li>
&lt;li>主要产品的相对市场份额&lt;/li>
&lt;li>客户数量增加&lt;/li>
&lt;/ul>
&lt;p>（表现远低于目标 表现低于目标 略低于目标 达到了目标 略高于目标 表现高于目标 表现远高于目标 不适用或我不知道）&lt;/p>
&lt;h3 id="5-我们也有兴趣了解其他一些目标选择指示您的组织在过去一年中如何针对以下目标执行的选项">5. 我们也有兴趣了解其他一些目标。 选择指示您的组织在过去一年中如何针对以下目标执行的选项
&lt;/h3>&lt;ul>
&lt;li>产品或服务的数量&lt;/li>
&lt;li>运营效率&lt;/li>
&lt;li>消费者满意度&lt;/li>
&lt;li>所提供的产品或服务的质量&lt;/li>
&lt;li>实现组织的/使命的目标&lt;/li>
&lt;li>通过其它的方面向外部各方证明了贵组织实现预期成果&lt;/li>
&lt;/ul>
&lt;p>（表现远低于目标 表现低于目标 略低于目标 达到了目标 略高于目标 表现高于目标 表现远高于目标 不适用或我不知道）&lt;/p>
&lt;h3 id="6-我们有兴趣了解devops或敏捷方法是怎样在您组织的各个团队中传播的">6. 我们有兴趣了解DevOps或敏捷方法是怎样在您组织的各个团队中传播的。
&lt;/h3>&lt;p>在这里，我们将描述我们看到过的那些常见的模式，并要求您从中选择出&lt;strong>哪些在自己的组织中最常见&lt;/strong>方式（请选择所有适用的选项）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>培训中心（有时也称为&lt;strong>&lt;strong>DOJO&lt;/strong>&lt;/strong>）&lt;/strong> - 让人们暂时脱离正常的工作惯例，以便在一段时间内学习新的工具或技术、实践甚至文化，然后再回到正常的工作环境中，目标（希望？）是：他们会坚持使用新的工作方式，甚至可能推广给其他的人。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>卓越中心&lt;/strong> - 一个所有专业知识都具足，然后为内部各方提供咨询的地方。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>止步于概念证明&lt;/strong> - 进行概念证明（PoC）项目，通常执行团队可以突破组织规范（通常是官方的规则）的羁绊，从而自由的按照所认为的最好的方式构建。然而，在PoC之后，那些付出就停滞不前了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>用概念证明当模板&lt;/strong> - 也是从小规模的概念证明（PoC）项目（如上所述）开始，然后开始使用这个最初的模式在组织中的其它团队进行复制。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>用概念证明做种子&lt;/strong> - 也是从小规模的概念证明（PoC）开始，然后将PoC知识传播给其他团队。这是通过打散PoC（可以是第一个PoC团队，或是后续/并行的PoC团队）执行团队，并将他们派发到其他团队，去分享他们所学到的知识和实践的方式来完成的。也可以称此为轮岗，那些前PoC团队成员沉浸在其他团队中，发挥着传播新的实践和文化，并兼做导师的职责。他们可能会无限期地留在这个新的群体中，或者只是用足够长的时间来确保，他带来的新的做法是可持续的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>实践社区&lt;/strong> - 在组织内培养对工具、语言或方法有共同兴趣的团体，以便在他们的彼此之间、团队之间，以及在组织内部分享他们的知识和专业技能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>大爆炸式&lt;/strong> - 组织进行整体一次性的DevOps方法（当然他们要选择对其下的定义）转型，通常采用自上而下的指令。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自下而上或草根方式&lt;/strong> - 那些在一线工作的小团队将资源整合在一起，然后在整个组织中，通过非官方的形式分享所取得的成功，并进行推广，而无需任何组织官方的支持或资源。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>混搭型&lt;/strong> - 组织实施过了上述的若干种方法，通常由于无法得到成功所需的资源和重视，只能是半途而废了。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="第二部分">第二部分
&lt;/h2>&lt;p>这部分涉及您的工作及其成果，以及它对您自身的影响。&lt;/p>
&lt;h3 id="1-在你工作的过程中你的感受是怎样的">1. 在你工作的过程中，你的感受是怎样的？
&lt;/h3>&lt;p>请评价您对以下陈述的同意或不同意程度。&lt;/p>
&lt;ul>
&lt;li>我经常处于高水平的生产力&lt;/li>
&lt;li>我经常能够进入一个良好的“流程”，在那里我可以完成复杂、耗时的任务，同时最大限度地减少干扰和中断。&lt;/li>
&lt;li>我对我的工作很满意。&lt;/li>
&lt;li>我有足够的工具和资源来完成我的工作。&lt;/li>
&lt;li>我的工作很好地利用了我的技能和能力。&lt;/li>
&lt;/ul>
&lt;p>（强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用）&lt;/p>
&lt;h3 id="2-对于您工作的主要应用程序或服务变更前置时间即从代码提交到在生产中成功运行的过程需要的时间是多长">2. 对于您工作的主要应用程序或服务，变更前置时间（即：从代码提交到在生产中成功运行的过程需要的时间）是多长？
&lt;/h3>&lt;ul>
&lt;li>超过六个月&lt;/li>
&lt;li>一个月到六个月之间&lt;/li>
&lt;li>一周到一个月之间&lt;/li>
&lt;li>一天到一周之间&lt;/li>
&lt;li>不到一天&lt;/li>
&lt;li>不到一个小时&lt;/li>
&lt;li>我不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="3-对于您工作的主要应用程序或服务您的组织在生产环境进行代码部署或向最终用户做发布的频率是什么">3. 对于您工作的主要应用程序或服务，您的组织在生产环境进行代码部署或向最终用户做发布的频率是什么？
&lt;/h3>&lt;ul>
&lt;li>每六个月少于一次&lt;/li>
&lt;li>每一到六个月一次&lt;/li>
&lt;li>每周到每月一次&lt;/li>
&lt;li>每天到每周一次&lt;/li>
&lt;li>每小时到每天一次&lt;/li>
&lt;li>按需（每天都要进行多次部署）&lt;/li>
&lt;li>我不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="4-对于您工作的主要应用程序或服务当服务中断或出现影响用户bug时如计划外中断服务受损恢复服务通常需要多长时间">4. 对于您工作的主要应用程序或服务，当服务中断或出现影响用户Bug时（如：计划外中断、服务受损），恢复服务通常需要多长时间？
&lt;/h3>&lt;ul>
&lt;li>超过六个月&lt;/li>
&lt;li>一个月到六个月之间&lt;/li>
&lt;li>一周到一个月之间&lt;/li>
&lt;li>一天到一周之间&lt;/li>
&lt;li>一天之内&lt;/li>
&lt;li>一小时之内&lt;/li>
&lt;li>我不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="5-对于您所工作的主要应用程序或服务对于生产变更或向最终用户发版的变更百分之多少会导致服务质量下降如服务受损或服务中断并需要进行后续的修复工作需要热补丁回滚前向修复打补丁修复">5. 对于您所工作的主要应用程序或服务，对于生产变更，或向最终用户发版的变更，百分之多少会导致服务质量下降（如：服务受损或服务中断），并需要进行后续的修复工作（需要热补丁、回滚，前向修复，打补丁修复）
&lt;/h3>&lt;ul>
&lt;li>0％-15％&lt;/li>
&lt;li>16％-30％&lt;/li>
&lt;li>31％-45％&lt;/li>
&lt;li>46％-60％&lt;/li>
&lt;li>61％-75％&lt;/li>
&lt;li>76％-100％&lt;/li>
&lt;li>我不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="6-接下来的问题会询问可靠性以及您和您的团队如何看待它">6. 接下来的问题会询问可靠性，以及您和您的团队如何看待它。
&lt;/h3>&lt;p>请评价您对以下陈述的同意或不同意程度。
对于您所工作的主要应用程序或服务：&lt;/p>
&lt;ul>
&lt;li>定义了明确的可用性目标（如服务级别协议/服务级别目标），这些目标在团队和客户之间达成了清晰的共识。&lt;/li>
&lt;li>我知道最近一段时间实际的可用性。&lt;/li>
&lt;li>在最近一段时间内，我的团队达到或超过了可用性目标。&lt;/li>
&lt;li>当我们未达成可用性目标时，就会进行改进工作，也或将对调整工作的优先级。&lt;/li>
&lt;li>如果使用云服务，我的团队就会借助云计算的高可用性（如：使用多个可用区）来提高可靠性。&lt;/li>
&lt;/ul>
&lt;p>（强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用）&lt;/p>
&lt;h3 id="7-工作的可持续性很重要而职场透支是一个相关的重要度量指标您能否回答几个问题让我们知道您的工作对您有何影响">7. 工作的可持续性很重要，而职场透支是一个相关的重要度量指标。您能否回答几个问题，让我们知道您的工作对您有何影响？
&lt;/h3>&lt;p>请评价您对以下声明的同意或不同意程度：&lt;/p>
&lt;ul>
&lt;li>我感觉透支很严重。&lt;/li>
&lt;li>我感到筋疲力尽。&lt;/li>
&lt;li>我对所从事的工作无语或愤世嫉俗。&lt;/li>
&lt;li>我觉得工作效率低下。&lt;/li>
&lt;li>我觉得工作应对业余的正常生活产生负面影响。&lt;/li>
&lt;li>我能够完成工作并保持良好的整体状态。&lt;/li>
&lt;li>我能够有效应对与工作有关的压力。&lt;/li>
&lt;li>我可以在业余时间中（即，当我选择不工作时）脱离工作。&lt;/li>
&lt;/ul>
&lt;p>（强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用）&lt;/p>
&lt;h2 id="第三部分">第三部分
&lt;/h2>&lt;p>当你回答以下问题的时候，请回想一下你在团队中的经历&lt;/p>
&lt;h3 id="1-请评价您对以下声明的同意或不同意程度">1. 请评价您对以下声明的同意或不同意程度
&lt;/h3>&lt;ul>
&lt;li>如果我对我们的团队犯了错误，也不会有不良影响。&lt;/li>
&lt;li>我们团队的成员能够发现问题和提出棘手的问题。&lt;/li>
&lt;li>我们团队的成员不会因为差异性而互相拒绝。&lt;/li>
&lt;li>对我们的团队而言冒风险是安全的。&lt;/li>
&lt;li>想让我们团队的其人提供帮助并不困难。&lt;/li>
&lt;li>我们团队中没有人会以任何形式故意破坏我的工作成果。&lt;/li>
&lt;li>团队非常重视我独特的技术和才能。&lt;/li>
&lt;li>我们的团队能够在出现冲突时解决冲突。&lt;/li>
&lt;li>我们团队内部有很高的信任度。&lt;/li>
&lt;/ul>
&lt;p>（强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用）&lt;/p>
&lt;h3 id="2-当你回答以下问题时回想你是如何和你的团队合作的">2. 当你回答以下问题时，回想你是如何和你的团队合作的
&lt;/h3>&lt;p>请评价您对以下声明的同意或不同意程度：&lt;/p>
&lt;ul>
&lt;li>当我的团队成员之间存在相反的意见时，我们会互相尊重。&lt;/li>
&lt;li>我可以依靠我的团队来产出高质量的成果。&lt;/li>
&lt;li>我的团队提供了一个可以创新的环境。&lt;/li>
&lt;li>我的团队有明确的角色和责任。&lt;/li>
&lt;li>我的团队所承担的项目对我来说具有个人和专业意义。&lt;/li>
&lt;li>我能够获得有效完成工作所需的必要的信息（例如，战略、新产品、组织变革，我们的优先事项和价值观）。&lt;/li>
&lt;/ul>
&lt;p>（强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用）&lt;/p>
&lt;h3 id="3-回想一下你的团队是如何工作和组织的">3. 回想一下你的团队是如何工作和组织的
&lt;/h3>&lt;p>请评价您对以下陈述的同意或不同意程度。&lt;/p>
&lt;p>对于您使用的主要应用程序或服务：&lt;/p>
&lt;ul>
&lt;li>为了完成我自己的工作，我不需要与团队外的人沟通和协调。&lt;/li>
&lt;li>在我的团队中，我们可以对系统的设计进行大规模更改，而无需为其他团队创建重要的工作。&lt;/li>
&lt;li>在我的团队中，我们可以对系统的设计进行大规模更改，而不用依赖于其他团队的大量工作。&lt;/li>
&lt;li>我的团队可以根据需要独立部署和发布我们的产品或服务，而不依赖于其依赖的其他服务。&lt;/li>
&lt;li>我们可以按需的进行大部分的测试，而无需等待一个集成测试环境。&lt;/li>
&lt;li>在我的团队中，我们在正常工作指端中执行部署，停机时间可忽略不计。&lt;/li>
&lt;/ul>
&lt;p>（强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用）&lt;/p>
&lt;h3 id="4-最后我们想了解一下您的组织文化">4. 最后，我们想了解一下您的组织文化
&lt;/h3>&lt;p>请评价您对以下声明的同意或不同意程度：&lt;/p>
&lt;ul>
&lt;li>我的组织氛围宜人，重视各种不同的观点。&lt;/li>
&lt;li>我的组织是一个所有类型的员工（例如，所有性别，种族，文化背景）都能够完全发挥其能力的地方。&lt;/li>
&lt;li>当我在组织中发言时，我的意见很受重视。&lt;/li>
&lt;/ul>
&lt;p>（强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用）&lt;/p>
&lt;h2 id="第四部分">第四部分
&lt;/h2>&lt;p>这部分关于你所处环境中知识是如何供给和获取的。
让我们换个角度，告诉我们您的日常工作。&lt;/p>
&lt;h3 id="1-当您工作时您会在哪里寻找信息">1. 当您工作时，您会在哪里寻找信息？
&lt;/h3>&lt;ul>
&lt;li>当我需要相关知识用于解决问题时，我会频繁访问外部信息（如Stack Overflow、百度等）。&lt;/li>
&lt;li>当我遇到具有挑战性的问题，需要寻找类似问题的解决方案时，我经常访问外部信息 (如Stack Overflow、百度等)。&lt;/li>
&lt;li>当我处理困难的任务时，我经常和可能遇到类似问题的人沟通。&lt;/li>
&lt;li>当我需要工作相关主题或问题的知识时，我经常与其他人讨论。&lt;/li>
&lt;li>在处理任务时，我经常会参考内部知识库或工具来帮助找到解决方案。&lt;/li>
&lt;li>当我处理具有挑战性的问题时，我经常搜索内部工具或代码库以便找到类似问题或示例的解决方案。&lt;/li>
&lt;li>当我有疑问或寻找代码示例时，我经常搜索组织的源代码库&lt;/li>
&lt;li>当我有疑问或遇到有挑战的问题时，我会搜索内部文档&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="2-当您遇到问题时您会定期检查哪些信息来源请选择所有适用项">2. 当您遇到问题时，您会定期检查哪些信息来源？请选择所有适用项
&lt;/h3>&lt;ul>
&lt;li>内部(组织)知识库、论坛或文档&lt;/li>
&lt;li>内部(组织)代码库&lt;/li>
&lt;li>Stack Overflow 网站&lt;/li>
&lt;li>在线教程和视频&lt;/li>
&lt;li>百度、Bing或其它类似的公开搜索引擎&lt;/li>
&lt;li>外部(公共)参考文档&lt;/li>
&lt;li>当面请教同事&lt;/li>
&lt;li>通过电子邮件、文本或聊天工具请教同事&lt;/li>
&lt;li>朋友或同行(如微信、网络兴趣组、微博等)&lt;/li>
&lt;li>您自己的个人笔记&lt;/li>
&lt;li>其它。请填写&lt;/li>
&lt;li>以上都不是&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h2 id="第五部分">第五部分
&lt;/h2>&lt;p>这部分关于你的角色，以及你们团队做变更的特征和模式等。&lt;/p>
&lt;h3 id="1-现在让我们谈谈您工作时的感受">1. 现在让我们谈谈您工作时的感受
&lt;/h3>&lt;p>无论您的正式职位是什么，让我们谈谈您所做的工作。在您的日常工作中，您负责多少个不同的角色（或工作类型）？请选择所有适用项&lt;/p>
&lt;ul>
&lt;li>软件开发&lt;/li>
&lt;li>测试&lt;/li>
&lt;li>基础设施/运营&lt;/li>
&lt;li>数据库管理&lt;/li>
&lt;li>信息/应用安全&lt;/li>
&lt;li>人员管理&lt;/li>
&lt;li>项目或产品管理&lt;/li>
&lt;li>文档&lt;/li>
&lt;li>需求分析&lt;/li>
&lt;li>用户体验&lt;/li>
&lt;li>随时待命/事件响应&lt;/li>
&lt;li>其它。请列出您执行的其他角色&lt;/li>
&lt;/ul>
&lt;h3 id="2-您每天在这些角色之间切换多少次">2. 您每天在这些角色之间切换多少次？
&lt;/h3>&lt;ul>
&lt;li>不想回应&lt;/li>
&lt;li>0&lt;/li>
&lt;li>1&lt;/li>
&lt;li>2&lt;/li>
&lt;li>3&lt;/li>
&lt;li>4&lt;/li>
&lt;li>5&lt;/li>
&lt;li>6&lt;/li>
&lt;li>7&lt;/li>
&lt;li>8&lt;/li>
&lt;li>9&lt;/li>
&lt;li>10&lt;/li>
&lt;li>11&lt;/li>
&lt;li>12&lt;/li>
&lt;li>13&lt;/li>
&lt;li>14&lt;/li>
&lt;li>15&lt;/li>
&lt;li>16&lt;/li>
&lt;li>17&lt;/li>
&lt;li>18&lt;/li>
&lt;li>19&lt;/li>
&lt;li>20或以上&lt;/li>
&lt;/ul>
&lt;h3 id="3-您现在正工作在多少个项目或产品上">3. 您现在正工作在多少个项目或产品上？
&lt;/h3>&lt;ul>
&lt;li>不想回应&lt;/li>
&lt;li>0&lt;/li>
&lt;li>1&lt;/li>
&lt;li>2&lt;/li>
&lt;li>3&lt;/li>
&lt;li>4&lt;/li>
&lt;li>5&lt;/li>
&lt;li>6&lt;/li>
&lt;li>7&lt;/li>
&lt;li>8&lt;/li>
&lt;li>9&lt;/li>
&lt;li>10&lt;/li>
&lt;li>11&lt;/li>
&lt;li>12&lt;/li>
&lt;li>13&lt;/li>
&lt;li>14&lt;/li>
&lt;li>15&lt;/li>
&lt;li>16&lt;/li>
&lt;li>17&lt;/li>
&lt;li>18&lt;/li>
&lt;li>19&lt;/li>
&lt;li>20或以上&lt;/li>
&lt;/ul>
&lt;h3 id="4-您通常在一周中工作在多少个项目上">4. 您通常在一周中工作在多少个项目上？
&lt;/h3>&lt;ul>
&lt;li>不想回应&lt;/li>
&lt;li>0&lt;/li>
&lt;li>1&lt;/li>
&lt;li>2&lt;/li>
&lt;li>3&lt;/li>
&lt;li>4&lt;/li>
&lt;li>5&lt;/li>
&lt;li>6&lt;/li>
&lt;li>7&lt;/li>
&lt;li>8&lt;/li>
&lt;li>9&lt;/li>
&lt;li>10&lt;/li>
&lt;li>11&lt;/li>
&lt;li>12&lt;/li>
&lt;li>13&lt;/li>
&lt;li>14&lt;/li>
&lt;li>15&lt;/li>
&lt;li>16&lt;/li>
&lt;li>17&lt;/li>
&lt;li>18&lt;/li>
&lt;li>19&lt;/li>
&lt;li>20或以上&lt;/li>
&lt;/ul>
&lt;h3 id="5-思考下你过去3个月的工作-请以这些记忆里的工作对以下陈述进行回应">5. 思考下你过去3个月的工作。 请以这些记忆里的工作对以下陈述进行回应
&lt;/h3>&lt;p>我遇到过的代码，脚本，配置或系统&amp;hellip;&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>包含已知的错误，这些错误不支持新功能开发&lt;/li>
&lt;li>没有足够的测试或测试覆盖率&lt;/li>
&lt;li>与低下的代码质量或设计有关&lt;/li>
&lt;li>取消或放弃项目后尚未进行清理&lt;/li>
&lt;li>在我所在的团队中没有人有专业知识能够理解&lt;/li>
&lt;li>有不完全或不正确的迁移&lt;/li>
&lt;li>使用了过时的技术&lt;/li>
&lt;li>文档和/或注释存在缺失、不完整或过时的情况&lt;/li>
&lt;/ul>
&lt;h3 id="6-现在思考在你的组织中的进行变更及相应流程是什么样的">6. 现在思考在你的组织中的进行变更及相应流程是什么样的
&lt;/h3>&lt;p>在我的组织中&amp;hellip;&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>在实施或部署之前，必须由外部机构（例如，变更审批委员会，经理等）批准生产变更&lt;/li>
&lt;li>我的组织有一个正式的流程来批准在实施或发布之前对应用程序或生产系统进行变更。&lt;/li>
&lt;li>我清楚地了解批准实施​​变更的流程&lt;/li>
&lt;li>我相信我能够及时通过审批流程来实施变更&lt;/li>
&lt;li>对于我通常所做的各类变更，我知道每次从“提交”到“已接受”所需的步骤。&lt;/li>
&lt;li>我们依靠同事的同行评审（例如代码审查或结对编程）来管理或批准变更。&lt;/li>
&lt;li>我的团队遵循基于风险的政策来批准变更，通过自动化方法推进低风险变更，只有高风险变更才需要人工批准。&lt;/li>
&lt;li>所有重大变更必须在实施前由高级经理批准&lt;/li>
&lt;/ul>
&lt;h2 id="第6部分">第6部分
&lt;/h2>&lt;p>对于此页面上的问题，请思考你为测试生产系统的弹性所做的工作。&lt;/p>
&lt;h3 id="1以下哪些活动用于测试我们的it系统服务的弹性">1.以下哪些活动用于测试我们的IT系统/服务的弹性？
&lt;/h3>&lt;ul>
&lt;li>未在真实系统上进行沙盘推演&lt;/li>
&lt;li>基础设施（包括数据中心）故障转移&lt;/li>
&lt;li>应用程序故障转移&lt;/li>
&lt;li>模拟破坏类生产的测试系统（包括故障注入、如降级网络链路、关闭路由器等）&lt;/li>
&lt;li>模拟破坏生产系统（包括故障注入，如降级网络链路，关闭路由器等）&lt;/li>
&lt;li>创建自动化和系统，定期，持续地破坏生产系统&lt;/li>
&lt;li>其他。 请明确说明：&lt;/li>
&lt;li>以上都不是&lt;/li>
&lt;/ul>
&lt;h3 id="2-你所在的组织多久执行一次中断生产系统的模拟包括故障注入例如降级网络链路关闭路由器等">2. 你所在的组织多久执行一次中断生产系统的模拟（包括故障注入，例如降级网络链路、关闭路由器等）
&lt;/h3>&lt;ul>
&lt;li>从不&lt;/li>
&lt;li>仅在初次部署&lt;/li>
&lt;li>按周&lt;/li>
&lt;li>按月&lt;/li>
&lt;li>按年&lt;/li>
&lt;li>少于一年一次&lt;/li>
&lt;li>不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="3-你所在的组织多久执行一次基础设施包括数据中心故障转移以测试弹性">3. 你所在的组织多久执行一次基础设施（包括数据中心）故障转移以测试弹性？
&lt;/h3>&lt;ul>
&lt;li>从不&lt;/li>
&lt;li>仅在初次部署&lt;/li>
&lt;li>按周&lt;/li>
&lt;li>按月&lt;/li>
&lt;li>按年&lt;/li>
&lt;li>少于一年一次&lt;/li>
&lt;li>不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="4-你所在的组织多久执行一次应用程序故障转移以测试弹性">4. 你所在的组织多久执行一次应用程序故障转移以测试弹性？
&lt;/h3>&lt;ul>
&lt;li>从不&lt;/li>
&lt;li>仅在初次部署&lt;/li>
&lt;li>按周&lt;/li>
&lt;li>按月&lt;/li>
&lt;li>按年&lt;/li>
&lt;li>少于一年一次&lt;/li>
&lt;li>不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="5-如果我的组织在灾备演习时发现了任何改进的机会我们会创建行动任务并在下一次演习前修复这些改进项">5. 如果我的组织在灾备演习时发现了任何改进的机会，我们会创建行动任务并在下一次演习前修复这些改进项
&lt;/h3>&lt;ul>
&lt;li>非常同意&lt;/li>
&lt;li>同意&lt;/li>
&lt;li>有点同意&lt;/li>
&lt;li>既不赞成也不反对&lt;/li>
&lt;li>不太同意&lt;/li>
&lt;li>不同意&lt;/li>
&lt;li>强烈反对&lt;/li>
&lt;li>不适用或我不知道&lt;/li>
&lt;/ul>
&lt;h2 id="第七部分">第七部分
&lt;/h2>&lt;p>此页将会询问您或您的组织关于云应用的一些问题&lt;/p>
&lt;h3 id="1-我主要负责的产品或服务在哪运行请选择所有适用的选项">1. 我主要负责的产品或服务在哪运行？（请选择所有适用的选项）
&lt;/h3>&lt;ul>
&lt;li>公有云（包含多个公有云）&lt;/li>
&lt;li>私有云&lt;/li>
&lt;li>混合云（将公有云和私有云/数据中心/本地设施结合在一起）&lt;/li>
&lt;li>在数据中心或本地（不是云）&lt;/li>
&lt;li>我桌面下的一个小服务器&lt;/li>
&lt;li>其他&lt;/li>
&lt;/ul>
&lt;h3 id="2采用多个云提供商的驱动因素是什么请最多选择3个">2.采用多个云提供商的驱动因素是什么？（请最多选择3个）
&lt;/h3>&lt;ul>
&lt;li>我们只有一个云提供商, 或者我们没有使用公有云&lt;/li>
&lt;li>法律合规性&lt;/li>
&lt;li>灾备可用性&lt;/li>
&lt;li>对一个供应商缺乏信任&lt;/li>
&lt;li>利用每个提供商的独特优势&lt;/li>
&lt;li>谈判策略或采购要求&lt;/li>
&lt;li>其他&lt;/li>
&lt;/ul>
&lt;h3 id="3请评价您对以下陈述同意或不同意的程度">3.请评价您对以下陈述同意或不同意的程度
&lt;/h3>&lt;ul>
&lt;li>我主要负责的产品或服务最初是设计在云中运行或基于云设计架构的。&lt;/li>
&lt;li>对于我主要负责的产品或服务, 环境配置和部署仅使用存储在版本控制库中的脚本和信息, 无需手动步骤 (审批除外)。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="4请评价您使用云服务时对以下陈述的同意或不同意程度">4.请评价您使用云服务时对以下陈述的同意或不同意程度
&lt;/h3>&lt;ul>
&lt;li>一旦我有了访问权限, 我就可以根据需要独立地配置和配置产品或服务所需的云资源和功能, 而无需提高票证或需要人工交互。&lt;/li>
&lt;li>我主要负责的服务或产品设计为通过网络从各种设备 (如智能手机、平板电脑、笔记本电脑) 访问, 而不需要专有插件或协议。&lt;/li>
&lt;li>我的产品或服务所运行的云，服务于多个团队和应用程序, 并根据需要动态分配和重新分配计算和基础架构资源。&lt;/li>
&lt;li>我可以根据需求动态地增加或减少可用于主要支持的服务或产品的云资源。&lt;/li>
&lt;li>我可以监视或控制我主要支持的服务或产品所使用的云资源的数量和成本。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="5换个主题在您工作的时候您是怎样看待成本的">5.换个主题，在您工作的时候，您是怎样看待成本的？
&lt;/h3>&lt;ul>
&lt;li>我的团队可以准确地估计操作我们软件的成本。&lt;/li>
&lt;li>我的团队可以轻松识别我们运营成本最高的应用程序。&lt;/li>
&lt;li>我的团队很少超出我们的成本费用或支出预算。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h2 id="第八部分">第八部分
&lt;/h2>&lt;p>关于版本控制系统、分支模型、自动化测试、持续集成、持续交付等一直到生产环境的反馈等等实践。
现在让我们谈谈您和您的团队所做的技术工作。&lt;/p>
&lt;h3 id="1请介绍一下您和您的团队如何开发软件我的团队">1.请介绍一下您和您的团队如何开发软件。我的团队
&lt;/h3>&lt;ul>
&lt;li>我们的组织将所有代码存储在一个单一庞大的版本控制存储库中&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>组织中所有工程师都可以查看和搜索组织中所有代码&lt;/li>
&lt;li>我可以在自己之外的项目中编辑代码，并适时提交&lt;/li>
&lt;li>我们将应用程序的所有依赖项源代码（例如软件库）都存储到版本控制存储库中&lt;/li>
&lt;li>我们为发行版本创建的所有包，包括依赖项，都是在单个版本控制中创建的，而不是从多个版本或分支中创建的&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="2我们关注您工作中使用什么代码请评价您对以下陈述同意或不同意程度">2.我们关注您工作中使用什么代码，请评价您对以下陈述同意或不同意程度
&lt;/h3>&lt;ul>
&lt;li>如果需要，我们很容易更改其他团队维护的代码&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>我很容易在代码库中找到示例&lt;/li>
&lt;li>我经常从团队之外的工程师那里收到项目的更新。&lt;/li>
&lt;li>我很容易重新使用别人的代码&lt;/li>
&lt;li>我很容易对我的项目增加新的依赖项&lt;/li>
&lt;li>我很容易移动新的依赖项版本&lt;/li>
&lt;li>我的依赖项是稳定的很少破坏我的代码&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="3我们关注您在工作中遵循的开发实践和模式">3.我们关注您在工作中遵循的开发实践和模式
&lt;/h3>&lt;ul>
&lt;li>我团队中的所有开发人员至少每天都会将代码推送到trunk / master&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>应用程序的代码库中不到三个活动分支&lt;/li>
&lt;li>我们的应用程序团队从来没有代码锁定期，任何时候没有人可以签入代码或由于合并配置而执行请求。&lt;/li>
&lt;li>在合并到master之前，分支和分叉的生命周期非常短（不到一天）。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="4下一组问题是关于在工作中提交代码搭建和部署软件">4.下一组问题是关于在工作中提交代码、搭建和部署软件
&lt;/h3>&lt;p>对于您使用的主要应用程序或服务：&lt;/p>
&lt;ul>
&lt;li>代码提交会自动生成软件&lt;/li>
&lt;li>代码提交会运行一系列自动化测试&lt;/li>
&lt;li>每天成功地执行自动化的构建和测试&lt;/li>
&lt;li>当构建中断时，它通常在十分钟内修复&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="5许多团队使用自动化测试来优化他们的软件">5.许多团队使用自动化测试来优化他们的软件
&lt;/h3>&lt;p>请评价您对以下陈述的同意或不同意程度
回答这些问题时，请考虑您自己的测试过程：&lt;/p>
&lt;ul>
&lt;li>当自动化测试通过时，我确信软件是可发布的&lt;/li>
&lt;li>自动测试失败可能表明存在真正的缺陷&lt;/li>
&lt;li>开发人员很容易重现和修复验收失败的测试&lt;/li>
&lt;li>我们测试必要的数据，以便每一步都能轻松运行自动化测试&lt;/li>
&lt;li>我可以在十分钟内从自动测试中得到反馈&lt;/li>
&lt;li>我们经常使用之前的测试运行数据来提高自动化测试套件的质量&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="6请评价您对以下陈述的同意或不同意程度">6.请评价您对以下陈述的同意或不同意程度
&lt;/h3>&lt;p>对于您使用的主要应用程序或服务：&lt;/p>
&lt;ul>
&lt;li>我们的软件在整个生命周期中都处于可部署状态&lt;/li>
&lt;li>我的团队优先考虑保持软件可部署而不是处理新功能&lt;/li>
&lt;li>团队中的任何人都可以获得系统在质量和可部署性方面的快速反馈&lt;/li>
&lt;li>当人们得到系统不可部署的反馈时（例如构建或测试失败），他们将优先解决这些问题&lt;/li>
&lt;li>我们可以根据需要随时将我们的系统部署到生产或最终用户&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="7-请结合自己的测试过程回答以下问题">7. 请结合自己的测试过程回答以下问题
&lt;/h3>&lt;ul>
&lt;li>当通过自动化测试后，我相信软件是可发布的。&lt;/li>
&lt;li>自动化测试失败表明存在真正的缺陷。&lt;/li>
&lt;li>开发人员很容易重现并修复验收测试发现的缺陷。&lt;/li>
&lt;li>我们有必要的测试数据，用于每个步骤中轻松地运行自动化测试。&lt;/li>
&lt;li>我可以在10分钟内收到自动化测试反馈。&lt;/li>
&lt;li>我们经常使用以前测试运行的数据来提高自动化测试套件的质量。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="8-对于您工作的主要应用或服务">8. 对于您工作的主要应用或服务
&lt;/h3>&lt;ul>
&lt;li>我们的软件始终处于可部署的状态。&lt;/li>
&lt;li>在我的团队中，保持软件处于可部署状态的优先级高于实现新需求。&lt;/li>
&lt;li>任何团队成员都可以快速反馈系统的质量和可部署性。&lt;/li>
&lt;li>团队成员将修复导致系统无法部署的问题（如编译失败、测试失败等）置于最高优先级。&lt;/li>
&lt;li>我们可以随时根据需要将系统部署到生产环境或最终用户。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="9-对于您工作的主要应用或服务实现完全自动化部署到生产环境或最终用户的比例是">9. 对于您工作的主要应用或服务，实现完全自动化部署到生产环境或最终用户的比例是
&lt;/h3>&lt;ul>
&lt;li>0%-15%&lt;/li>
&lt;li>16%-30%&lt;/li>
&lt;li>31%-45%&lt;/li>
&lt;li>46%-60%&lt;/li>
&lt;li>61%-75%&lt;/li>
&lt;li>76%-100%&lt;/li>
&lt;li>我不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="10-对于您工作的主要应用或服务部署过程需要多长时间才能使软件新版本可供用户使用">10. 对于您工作的主要应用或服务，部署过程需要多长时间才能使软件新版本可供用户使用
&lt;/h3>&lt;ul>
&lt;li>小于1小时&lt;/li>
&lt;li>在1小时和1天之间&lt;/li>
&lt;li>在1天和3天之间&lt;/li>
&lt;li>在3天和1周之间&lt;/li>
&lt;li>在1周和1个月之间&lt;/li>
&lt;li>大于1个月&lt;/li>
&lt;li>我不知道或不适用&lt;/li>
&lt;/ul>
&lt;h3 id="11-您如何监控和了解正在运行的系统">11. 您如何监控和了解正在运行的系统
&lt;/h3>&lt;ul>
&lt;li>我的团队有一套技术解决方案用以报告系统的整体健康状况（如系统功能是否正常？系统是否有充足的可用资源等？）。&lt;/li>
&lt;li>我的团队有一套技术解决方案用以报告基于用户使用情况的系统状态（如用户是否知道系统已关闭，是否有不良的体验等？）。&lt;/li>
&lt;li>我的团队有一套技术解决方案用以监控主要业务和系统参数。&lt;/li>
&lt;li>我的团队有工具用于协助我们了解和调试生产环境上的系统。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h2 id="第九部分">第九部分
&lt;/h2>&lt;p>这页面询问了一些细节关于您的技术环境和工作&lt;/p>
&lt;p>请选择以下之一&lt;/p>
&lt;h3 id="1--为了部署我们的软件解决方案我的团队使用以下ci--cd-测试自动化工具链">1. 为了部署我们的软件解决方案，我的团队使用以下CI / CD /测试自动化工具链
&lt;/h3>&lt;ul>
&lt;li>主要是内部开发（自研）的，且所有权属于我的组织&lt;/li>
&lt;li>混合使用专有工具，开源和商业现成软件&lt;/li>
&lt;li>主要是开源和商用现货，高度定制&lt;/li>
&lt;li>主要是开源和商用现货，很少定制&lt;/li>
&lt;li>主要是商业现成的套装软件&lt;/li>
&lt;li>主要是开源的，高度定制&lt;/li>
&lt;li>主要是开源的，很少定制&lt;/li>
&lt;li>其他&lt;/li>
&lt;li>不适用或我不知道&lt;/li>
&lt;/ul>
&lt;h2 id="2-请评价您对以下说法的同意或不同意程度">2. 请评价您对以下说法的同意或不同意程度
&lt;/h2>&lt;ul>
&lt;li>在我的团队中，与组织中的其他团队相比，我们的CI/CD/自动化测试过程和工具是为我们的需求而定制的&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="3-请评价您对以下说法的同意或不同意程度-通过ci--cd工具链部署软件时">3. 请评价您对以下说法的同意或不同意程度。 通过CI / CD工具链部署软件时
&lt;/h3>&lt;ul>
&lt;li>使用CI / CD工具链可以提高我的效率在我的工作中&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>使用CI / CD工具链在我的工作中提高我的生产力&lt;/li>
&lt;li>使用Ci/CD工具链提高了我的工作效率&lt;/li>
&lt;li>我发现CI / CD工具链在我的工作中很有用。&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="4-请评价您对以下说法的同意或不同意程度-通过ci--cd-测试自动化工具链部署软件时">4. 请评价您对以下说法的同意或不同意程度。 通过CI / CD /测试自动化工具链部署软件时
&lt;/h3>&lt;ul>
&lt;li>我的交互在工具链是清晰易懂的&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>与工具链交互并不需要我的大量精力&lt;/li>
&lt;li>我发现工具链容易使用&lt;/li>
&lt;li>我发现容易让工具链做我想要做的事&lt;/li>
&lt;/ul>
&lt;p>(强烈反对 不同意 不太同意 既不赞成也不反对 有点同意 同意 非常同意 我不知道/不适用)&lt;/p>
&lt;h3 id="5-选择最能代表谁负责创建和维护ci--cd-测试自动化工具链及其配置的选项">5. 选择最能代表谁负责创建和维护CI / CD /测试自动化工具链及其配置的选项
&lt;/h3>&lt;ul>
&lt;li>我们的团队有完全自治选择和配置自己的CI / CD /自动化测试的工具链。&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>我们需要使用一个统一工具链，但是我们为构建/测试/部署过程维护自己的脚本，并且在配置方式上有很多自主权。&lt;/li>
&lt;li>我们需要使用一个统一工具链具有预配置脚本和构建步骤，测试和部署过程的步骤，我们可以根据需要重构或自定义。&lt;/li>
&lt;li>我们需要使用带有预配置脚本和步骤的统一工具链，而我们几乎没有能力重构它&lt;/li>
&lt;li>所有构建，测试和部署软件，都由我们建立的统一团队处理&lt;/li>
&lt;li>不适用或我不知道&lt;/li>
&lt;/ul>
&lt;h3 id="6-我的工具链包括以下内容请选择所有适用的选项">6. 我的工具链包括以下内容（请选择所有适用的选项）
&lt;/h3>&lt;ul>
&lt;li>自动化构建&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>自动化单元测试&lt;/li>
&lt;li>自动化验收测试&lt;/li>
&lt;li>自动化性能测试&lt;/li>
&lt;li>自动安全测试&lt;/li>
&lt;li>自动化配置和部署到测试环境&lt;/li>
&lt;li>自动化部署到生产&lt;/li>
&lt;li>与chatbots / Slack集成&lt;/li>
&lt;li>与生产监控和可视化工具集成&lt;/li>
&lt;li>以上都不是&lt;/li>
&lt;/ul>
&lt;h2 id="第十部分">第十部分
&lt;/h2>&lt;p>最后一页！请花几分钟时间告诉我们你自己。
请注意，此数据仅用于研究目的，此调查是匿名的，仅以匿名方式汇总报告。&lt;/p>
&lt;h3 id="1-你的性别">1. 你的性别？
&lt;/h3>&lt;ul>
&lt;li>男&lt;/li>
&lt;li>女&lt;/li>
&lt;li>非二元&lt;/li>
&lt;li>不想回应&lt;/li>
&lt;/ul>
&lt;h3 id="2-在您的团队中工作的女性比例是多少">2. 在您的团队中工作的女性比例是多少？
&lt;/h3>&lt;p>请输入0到100之间的数字。&lt;/p>
&lt;ul>
&lt;li>女性团队的百分比： [___]&lt;/li>
&lt;li>不想回应&lt;/li>
&lt;/ul>
&lt;h3 id="3-您是否认定为少数派群体的成员">3. 您是否认定为少数派群体的成员？
&lt;/h3>&lt;ul>
&lt;li>是&lt;/li>
&lt;li>没有&lt;/li>
&lt;li>不想回应&lt;/li>
&lt;/ul>
&lt;h3 id="4-你认定是残疾人吗">4. 你认定是残疾人吗？
&lt;/h3>&lt;p>包括与视觉，听觉，步行，记忆/集中，自我保健或沟通相关的残疾&lt;/p>
&lt;ul>
&lt;li>是&lt;/li>
&lt;li>没有&lt;/li>
&lt;li>不想回应&lt;/li>
&lt;/ul>
&lt;h3 id="5-哪个最贴切地描述了你的工作角色">5. 哪个最贴切地描述了你的工作角色？
&lt;/h3>&lt;ul>
&lt;li>开发或工程师&lt;/li>
&lt;li>DevOps或SRE&lt;/li>
&lt;li>信息安全&lt;/li>
&lt;li>IT运营或基础设施&lt;/li>
&lt;li>网络运营&lt;/li>
&lt;li>产品管理&lt;/li>
&lt;li>用户体验或软件分析&lt;/li>
&lt;li>经理&lt;/li>
&lt;li>专业服务&lt;/li>
&lt;li>质量工程师或QA&lt;/li>
&lt;li>发布工程师&lt;/li>
&lt;li>销售工程师&lt;/li>
&lt;li>销售或营销&lt;/li>
&lt;li>我是顾问、教练或培训师&lt;/li>
&lt;li>我是C级高管&lt;/li>
&lt;li>我是学生&lt;/li>
&lt;li>我不属于任何部门&lt;/li>
&lt;li>其他&lt;/li>
&lt;li>不想回答&lt;/li>
&lt;/ul>
&lt;h3 id="6-你有多少年的经验">6. 你有多少年的经验？
&lt;/h3>&lt;ul>
&lt;li>0-2&lt;/li>
&lt;li>3-5&lt;/li>
&lt;li>6-10&lt;/li>
&lt;li>11-15&lt;/li>
&lt;li>超过16&lt;/li>
&lt;li>不想回应&lt;/li>
&lt;/ul>
&lt;h3 id="7-请选择您所在的地理区域">7. ­­­­­请选择您所在的地理区域
&lt;/h3>&lt;ul>
&lt;li>非洲&lt;/li>
&lt;li>亚洲&lt;/li>
&lt;li>中美洲&lt;/li>
&lt;li>东欧洲&lt;/li>
&lt;li>欧洲联盟&lt;/li>
&lt;li>中东&lt;/li>
&lt;li>北美&lt;/li>
&lt;li>大洋洲&lt;/li>
&lt;li>南美洲&lt;/li>
&lt;li>加勒比&lt;/li>
&lt;/ul>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>本文是否帮你解答了这样一个疑问：每年的DevOps状态报告中的参考数据是从哪里来的？是通过什么方式采集的？到目前为止，我们还不清楚这些数据是通过什么打分规则和算法处理的。如果你是这方面的专家，请和我们分享以下你的观点。&lt;/p></description></item><item><title>2019年DevOps状态调查问卷开放中</title><link>https://martinliu.cn/blog/2019-state-devops-survey-open/</link><pubDate>Sat, 20 Apr 2019 22:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-survey-open/</guid><description>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/abstract-4.jpg" alt="Featured image of post 2019年DevOps状态调查问卷开放中" />&lt;p>2019年加速度DevOps状态调查首发，首发的位置在Google Cloud网站上的Blog栏目，发布于产品新闻分类下。&lt;/p>
&lt;ul>
&lt;li>文章使用的主标签 DevOps 、SRE。&lt;/li>
&lt;li>文章地址：https://cloud.google.com/blog/products/devops-sre/make-your-voice-heard-take-the-2019-accelerate-state-of-devops-survey&lt;/li>
&lt;/ul>
&lt;p>关于今年的状态调查有什么更新和变化，文章中只给出了一句话的概况：今年会对部署工具链、云计算、灾难恢复和工作方式等主题进行深度调查。更详细的情况，详细你参与完问卷调查只有自由评判。&lt;/p>
&lt;h2 id="如何参与2019年devops状态调查">如何参与2019年DevOps状态调查
&lt;/h2>&lt;p>点击这个链接 &lt;a class="link" href="https://bit.ly/2UzLMH2" target="_blank" rel="noopener"
>https://bit.ly/2UzLMH2&lt;/a> ，进入问卷调查网站。&lt;/p>
&lt;p>从围观到参与是一种积极的态度。与其观望这份行业报告的产生过程，倒不如参与其中。由于今年这个问卷调查是Google发起的，可能会有更多的人会参与。&lt;/p>
&lt;p>精通英文的人应该能在半个小时内完成这个调查。如果英文不好的话，最多也用不了2个小时，以上推测，基于我去年的填写经历。&lt;/p>
&lt;p>我还想发起一个基于这个调查的兴趣小组，请符合以下条件之一的人进微信群交流：&lt;/p>
&lt;ol>
&lt;li>正在认证填写这份问卷，想从群里获得必要的帮助，从而可以能正确的作答。&lt;/li>
&lt;li>想研究这份文件的题库，大家共同分析DORA设问的目标和结构。&lt;/li>
&lt;li>跟进一步的，交流关于DevOps度量方面的话题&lt;/li>
&lt;/ol>
&lt;h2 id="关于2018年的devops状态报告">关于2018年的DevOps状态报告
&lt;/h2>&lt;p>有幸去年策划和参与了这份报告的翻译工作。也算是相对其他人更深入的学习和研究了去年的结果。并对它的总结和推论都有非常深刻的印象，也受益匪浅。&lt;/p>
&lt;p>2018年DevOps状态调查报告的中文版本，在2018年DevOpsDays 深圳大会上做了发布，我也在台上和张乐一起向与会者做了简短的分享。如果你需要下载学习的话，请点击下面的链接（扫码二维码），这里还有历年来英文版报告全集和部分中文版本。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/martinliu/image/upload/v1555778529/reports-download.png.png"
loading="lazy"
alt="下载"
>&lt;/p>
&lt;p>在2018年里Nicole Forsgren博士发布了《Accelerate》这本书，书里算是对这场从2014年开始的，持续对年的行业专项调查研究的一个总结。书中对度量DevOps这个主题做了详解科学的解读，它是那些需要度量DevOps成果的组织的一本很好的参考书。中文版本据说在翻译的过程中，期待它的出版。等不及的话可以去国外买英文电子版，这本书我是读了不下三遍，也做了相关的分享演讲，确实有很多收获。&lt;/p>
&lt;p>分享几个我观察到的小细节：&lt;/p>
&lt;ul>
&lt;li>DORA在2018年结束了与Puppet公司的合作调查，因此2018年的报告标题中增加了一个单词“加速度”，即：2018 Acclerate State of DevOps Report； 以前的都叫做 xxxx年 State of DevOps Report。&lt;/li>
&lt;li>Puppet公司也没有闲着，Puppet和Splunk公司携手也进行了状态调查和分析，也发布了名为《2018 State of DevOps Report》，问卷的问题肯定和以前无法延续和持续的，但是报告的命名保持下来了。我猜这也是为何DORA的报告需要加一个词的原因，&lt;/li>
&lt;/ul>
&lt;p>总结一下，由Nicole Forsgren博士主持进行的DevOps状态调查报告的下载站点都在 &lt;a class="link" href="https://puppet.com/resources/whitepaper" target="_blank" rel="noopener"
>https://puppet.com/resources/whitepaper&lt;/a> ， 在这里依然可以下载到名为 2018 State of DevOps Report 的报告，但是这一个和Nicole博士无关；所有她主持的报告下载地址在她的DORA网站上 &lt;a class="link" href="https://devops-research.com/research.html" target="_blank" rel="noopener"
>https://devops-research.com/research.html&lt;/a> 。 在DORA加入了Google Cloud以后，Nicole博士主持的调查问卷名为“ Accelerate State of DevOps Report” ； 相信我们所期待的最终的分析结果的标题应该是“ 2019 Accelerate State of DevOps Report” ； 而Puppet公司应该还是会持续发布名为“2019 State of DevOps Report”的报告。我相信肯定会有很多人在2018年去年就有点晕了，怎么出来两个名字相似，可是内容大相径庭的DevOps状态报告。&lt;/p>
&lt;h2 id="devops背后的科学访谈nicole-forsgren">DevOps背后的科学：访谈Nicole Forsgren
&lt;/h2>&lt;p>最近在Nicole Forsgren正式发布了2019年的DevOps状态调查报告之后，她接受了RealWorldDevOps电台的访问。Nicole Forsgren保持这一贯的爽朗、认真和理性的特点，与电台主播迈克进行了42分钟的畅谈。&lt;/p>
&lt;ul>
&lt;li>访谈英文原文：https://www.realworlddevops.com/episodes/the-science-behind-devops-with-dr-nicole-forsgren 在这个页面上还可以收听或者下载这期访谈节目。&lt;/li>
&lt;li>英文原文的翻译版本（Google机器翻译，为修订）见下文。&lt;/li>
&lt;li>访谈中的几个关键内容（并不是所有观点）：
&lt;ul>
&lt;li>2014年开始DevOps状态调查分析和报告工作&lt;/li>
&lt;li>这项工作前期与Puppet公司合作进行&lt;/li>
&lt;li>Nicole和Jez Humble建立了独立的DORA，即DevOps Research &amp;amp; Assessment公司 &lt;a class="link" href="https://devops-research.com/" target="_blank" rel="noopener"
>https://devops-research.com/&lt;/a>&lt;/li>
&lt;li>2018年12月DORA被Google收购，Nicole加入Google后，Google将作为DORA的特别调查样本和支持公司，保持DORA持续进行。&lt;/li>
&lt;li>Nicole叙述了最有意义的三件事：架构高于技术，云计算很重要，外包是不起作用的。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>在这次访谈中，我们也可以听出一点关于这个行业调查的宗旨和调性。紧跟时代发展步伐，每年做一定的突破和更新，保持厂商/工具无关性等等。具体内容详见下面的机器翻译文字。&lt;/p>
&lt;h3 id="访谈笔录">访谈笔录
&lt;/h3>&lt;p>以下为电台网站英文版本的直接机器翻译，未做修订，不保证能够被人正确理解；有疑问的地方请参考英文原文和访谈音频。&lt;/p>
&lt;hr>
&lt;p>迈克朱利安：这是真实的世界DevOps播客，我是你的主持人迈克朱利安。我正准备在DevOps世界中遇到最有趣的人。从您喜爱的工具的创作者到精彩会议的组织者，以及出色的公共演讲者的伟大着作的作者，我想向您介绍我能找到的最有趣的人。&lt;/p>
&lt;p>迈克朱利安：啊，崩溃报道。经常被遗忘的一块坚实的监控策略。您是否很难复制您从用户那里听到的错误或难以捉摸的性能问题？你应该看看Raygun。无论你是负责网络应用程序还是移动应用程序，Raygun都可以在几分钟内轻松找到并诊断出问题，而不是你通常做的事情，如果你像我一样，请问最近的人，“嘿，是app适合你？“得到一个空白的凝视，因为嘿，这是星巴克，谁是一个奇怪的人提出有关移动应用程序性能的问题？无论如何，Raygun，我个人感谢他们帮助使这个播客成为可能。您可以访问raygun.com查看今天的免费试用版。&lt;/p>
&lt;p>迈克朱利安：嗨伙计们。我是Mike Julian，你是Real World DevOps Podcast的主持人。本周我的客人是Nicole Forsgren博士。您可能知道她是“加速：精益软件和DevOps的科学”一书的作者，或者可能是年度DevOps状态报告背后的研究员。当然，这不是全部。她也是最近被谷歌收购的DevOps研究和评估的创始人，他是管理信息系统和会计教授，同时也是一名性能工程师和系统管理员。说我很高兴与你交谈，这可能是一种轻描淡写。所以，欢迎来到节目。&lt;/p>
&lt;p>Nicole Forsgren：谢谢。很高兴来到这里。我很高兴我们终于联系了。我们试图做多久了？&lt;/p>
&lt;p>迈克朱利安：几个月。我想我已经联系过你了，现在已经是三月了。我在11月份到达了，你说，“嗯，你知道，我还有其他的东西在继续，顺便说一句，我的公司被收购了。”&lt;/p>
&lt;p>Nicole Forsgren：那么，那时候，我必须狡猾，对吧？我不得不说，“我有一个真正的大项目。我很抱歉。我们以后可以见面吗？”而且，上帝保佑，你是非常仁慈和善良的，你说，“当然 - ”&lt;/p>
&lt;p>迈克朱利安：谢谢你。&lt;/p>
&lt;p>Nicole Forsgren：&amp;hellip;&amp;hellip;“我们以后可以聊聊。”然后我想你在说：“哦，恭喜你的&amp;rsquo;大项目&amp;rsquo;&amp;lsquo;之后给我发了一条消息。”我说，“谢谢。”&lt;/p>
&lt;p>迈克朱利安：听起来不错。&lt;/p>
&lt;p>Nicole Forsgren：我很感激。是啊。然后，你再次伸出手，我说，“哦，我正在做另一个大项目。但是，这一次&amp;hellip;&amp;hellip;”&lt;/p>
&lt;p>迈克朱利安：这不是收购。&lt;/p>
&lt;p>Nicole Forsgren：是的，这不是收购。这一次，这是一个正常的大项目，这是今年的DevOps状态报告。我们刚刚启动了调查，所以我非常兴奋，我们再次收集数据。&lt;/p>
&lt;p>迈克朱利安：所以我们可以解决这个问题，你在哪里可以找到DevOps状态报告？&lt;/p>
&lt;p>Nicole Forsgren：所有DevOps状态报告都在DORA网站上发布。我们仍然有网站。我们所参与的所有报道，我想说我们从2014年开始，我已经很老了，我已经忘记了。我们完成的所有报告都是托管的。我们会在演出笔记中发布它们。如果你可以拿自己的健怡可乐或咖啡或茶或水，或者你想要波本威士忌。舒服。坐下来，大约需要25分钟。我知道，对，每个人都喜欢，“女孩，25分钟？”&lt;/p>
&lt;p>迈克朱利安：这是一项重大调查。&lt;/p>
&lt;p>妮可福斯格伦：我知道。它是。但这是因为DevOps状态报告是科学的，对吧？我们研究预测，而不仅仅是相关性。但请坐下来，舒服一点，让我知道做你的工作是什么感觉。因为今年我们正在挖掘其他一些东西;生产力，工具链，关于职业倦怠和幸福的额外事情，以及我们如何进入流动，以及真正的样子。还有一些非常棒的事情是，在以非常深思熟虑的方式进行调查之后，已经有很多人已经准备好了。顺便说一下，如果你有的话，我爱你们所有人。与同事分享，与同行分享。&lt;/p>
&lt;p>但是他们已经说过，仅仅通过参加调查，他们已经离开了，甚至在报告出来之前，他们已经走开了有关如何使他们的工作更好的非常有趣的想法和技巧和见解。&lt;/p>
&lt;p>迈克朱利安：是的，想到这一点很疯狂，参加调查的行为实际上改善了我的工作。因为我采取的大多数调查，我已经完成了，我想，“嗯，这有点浪费时间。”感觉就像我只是放弃了一堆东西而没有得到任何东西。&lt;/p>
&lt;p>Nicole Forsgren：是的，我认为这种方式起作用的原因是因为我们对问题的处理方式非常谨慎，有时只是采取调查的行为可以帮助你思考你的工作方式。因此，采取某些问题的行为可以帮助人们思考他们正在做的事情。然后，当然，就像我开玩笑说，这是我的生活圈，调查将持续到5月3日，然后我将进入数据分析和报告撰写。我们预计报告本身将在8月中旬左右公布。&lt;/p>
&lt;p>迈克朱利安：嗯，为什么我们不退后几步说&amp;hellip;每个人都喜欢一个好的起源故事。很多年前，我相信你和我在一次LISA会面。您正在与Carolyn Rowland联合举办研讨会 -&lt;/p>
&lt;p>Nicole Forsgren：哦，我喜欢Carolyn。&lt;/p>
&lt;p>迈克朱利安：是的，她也很精彩。我应该让她在这里。&lt;/p>
&lt;p>妮可福斯格伦：我的双胞胎。是。绝对。&lt;/p>
&lt;p>迈克朱利安：所以当我第一次见到你时你就是一名教授。我想，你知道教授在LISA上闲逛，并就如何理解商业价值给出了所有这些很好的建议，我认为这绝对令人着迷。教授，在DevOps世界中闲逛，这是怎么发生的？&lt;/p>
&lt;p>Nicole Forsgren：哦，天哪。好的，有趣的是，我实际上是从工业开始的。我的第一份工作是在一个主框架上，编写医疗系统，然后编写财务系统。所以我是一名大型机程序员。然后支持我的主框架系统，对吧？这就是Ops中我们这么多人在Ops中开始的原因，有人说，“好吧，有人必须这样做。”对？我还在学校，然后我最终成为DEV，对吗？我在IBM担任软件工程师已有好几年了，然后转向学术界。我得到了博士学位，在那里我开始询问有关如何分析系统的问题，所以我实际上在做NLP，自然语言处理。&lt;/p>
&lt;p>迈克朱利安：很有意思。&lt;/p>
&lt;p>Nicole Forsgren：是的，我在做&amp;hellip;&amp;hellip;&lt;/p>
&lt;p>迈克朱利安：是的，这是一个奇怪的切入点。绝对不是我所期望的。&lt;/p>
&lt;p>Nicole Forsgren：是的，所以疯狂的事情，我的第一年实际上是欺骗检测。&lt;/p>
&lt;p>迈克朱利安：我打赌这太棒了。&lt;/p>
&lt;p>Nicole Forsgren：这真的很有趣，非常有趣。但是我从系统工作中充分利用了我的背景，对吧？因为我们做什么？我们分析日志系统。&lt;/p>
&lt;p>迈克朱利安：对。&lt;/p>
&lt;p>妮可福斯格伦：对吗？我们习惯于以凌乱的格式分析大量数据，很多时候基于文本，超级嘈杂，不能总是信任它，对吧？现在人们都说，“我不相信调查。人们撒谎。”孩子们，我们的系统也是如此。&lt;/p>
&lt;p>迈克朱利安：一直以来。&lt;/p>
&lt;p>妮可福斯格伦：对吗？所以，他们喜欢我的一大堆这项工作。突然间，我随机对系统管理员进行了可用性研究。我们写了结果，把它们还给了IBM，IBM就像是，“你的意思是什么？我们遵循UCD指南，用户中心设计指南。这应该是适用的。”我就像是，“等等，哇哇哇哇哇哇哇哇哇哇哇哇哇哇&lt;/p>
&lt;p>当时，他们为所有用户提供了一套UCD指南。超级先进，高级别的高级系统管理员，他们正在做备份，灾难恢复，一切。那些买过笔记本电脑并且在生命中第一次使用电子邮件的人。&lt;/p>
&lt;p>迈克朱利安：我确信那个过得很好。&lt;/p>
&lt;p>妮可福斯格伦：什么？我想，“就是这样。改变我的论文。”当然，这让我的顾问惊慌失措。他们就像是，“你会去做什么？”所以我开始做什么，当时是DevOps的基础。那是什么，你如何理解和预测信息系统？通过信息系统，技术，自动化，使用和预测，然后是团队，组织层面的个人团队的结果和影响。&lt;/p>
&lt;p>现在，我说了所有这些，那是大词，这是学术用语，基本上是什么是DevOps。我如何理解人们何时使用自动化和流程以及工具和文化，以及我如何知道它汇总起来以产生影响并增加价值？现在我们就像，“哦，那是DevOps。”&lt;/p>
&lt;p>这是2007年末。&lt;/p>
&lt;p>迈克朱利安：哦，哇。所以你和我们在一起很早。&lt;/p>
&lt;p>Nicole Forsgren：是的。这是一个非常有趣的平行轨道，因为现在我们回顾过去，我们就像，大约10年前。这与DevOps同时是新生的起源，对吧？所以，我们这么多人在同一时间偶然发现了它。我不知道这是在工业中发生的事情。我一直在偷偷摸摸，我一直这样做，偶然发现LISA，试图连接数据，当然，就像每个好学者一样。拼命想找到数据。&lt;/p>
&lt;p>偶然发现，撞到了一个收集类似东西但使用不同粗糙方法的小组。一个来自一个可爱的小配置管理创业公司的团队叫做Puppet，对吧？开始与他们合作，邀请自己参与该项目。上帝保佑他们，我对他们有如此多的爱和尊重，因为他们基本上让这个随机的，随机的学术撕裂他们的研究并重做它并亲切地告诉我以前从未见过的这两个家伙，在电话中，名叫Jean和Jez，他们做错了什么，他们使用的这个词不是正确的词。 Redid，在2013年末，DevOps状态报告，使其在学术上严谨，然后，持续了几年，对吗？然后突然间，我们在几年后重新编写了一堆东西。&lt;/p>
&lt;p>我离开学术界，离开即将任职的地方，去另一个可爱的小配置管理创业公司Chef，这很有趣，对吗？因此，我正在与Puppet合作，为Chef工作，并继续研究并与组织和公司合作。我离开了学术界，因为我看到这个疯狂的DevOps事情有所作为。但是在学术界，他们还没有完全掌握它。而且我想确保我可以做出更大的改变，因为我在98,99,2000开始在大学的科技工作;我们举起这个疯狂的网络泡沫破灭。&lt;/p>
&lt;p>它不是一场萧条，因为一切都崩溃了，世界就像人们想象的那样结束了，但公司失败了，它对人们的遭遇产生了巨大的影响和影响。他们失去了工作，打破了家庭，他们感到沮丧，影响了他们的生活，有些人正在自杀。而且我非常担心当我们再次击中这一波时会发生什么，我们又开始看到那次击中。那么，如果公司和组织不了解制造技术的智能方法会发生什么，因为你不能只是让人们不顾问题，或者让同样的人陷入困境。当我说同样的人扔我的意思时，七天强行游行。&lt;/p>
&lt;p>当他们让我们这样做时，我在IBM，对吗？他们陷入集体诉讼，你不能这样做。这不是一种生活方式。&lt;/p>
&lt;p>迈克朱利安：是的，我参与其中很多，他们是残酷的。而且它们没有任何有用的结果。&lt;/p>
&lt;p>Nicole Forsgren：这只是破碎的心灵和破碎的生命，对吧？所以，有些人喜欢说，你真的关心这个。我只是这个书呆子的学者，他只关心我做的事情。因此，如果我们真的可以，从根本上改变人们制作软件的方式，因为如果它实际上实际上，从根本上改善了他们的生活&amp;hellip;&amp;hellip;让我们这样做。&lt;/p>
&lt;p>然后，感谢上帝，我们发现它确实存在。当然，它很好地为企业提供价值，但这很重要，因为那时它的作用是帮助他们做出更明智的投资，因为这样可以减少倦怠。它让人们更快乐，让他们的生活更美好，我认为这是重要的部分。&lt;/p>
&lt;p>迈克朱利安：所以你发现的是，一家公司实施所有这些更好的持续部署实践，更快的交付时间，更快的价值实现&amp;hellip;&amp;hellip;它使人们的生活更好地完成了工作？&lt;/p>
&lt;p>Nicole Forsgren：是的，John Shook也发现了这一点。对？他在精益中做了这项伟大的工作，为了改变&amp;hellip;有些人说，“你如何改变文化？”让我们找到改变文化的方法。有时，改变文化的最佳方式是改变你的工作方式，我相信我们已经看到了自己，对吗？在我们生活的其他方面。改变我们的感受，改变家庭的工作方式，改变我们的关系工作方式。你实际上改变了你的生活经历，或者你生活经历的某些方面。&lt;/p>
&lt;p>因此，如果我们改变我们制作软件的方式，我们将改变我们团队的运作方式，这正在改变文化的方式。换句话说，如果我们可以告诉我们的组织在技术和流程方面做出哪些明智的投资，那么我们也可以改善文化。我们也可以改变人们的生活吧？微软Bing团队发现了这个，对吧？他们希望在持续交付方面进行明智的投资。&lt;/p>
&lt;p>在一年之内，他们看到了工作生涯的分数，我将其从头脑中拉下来，但我想说它从38％上升到75％。那太大了。&lt;/p>
&lt;p>迈克朱利安：这是一个令人难以置信的跳跃。&lt;/p>
&lt;p>妮可福斯格伦：对。这是因为人们能够在工作中离开工作然后回家。你可以去看你的家人，你可以去看电影，你可以去吃饭，你可以有爱好，或者你可以去狂欢看格雷的解剖。你可以做你想做的。&lt;/p>
&lt;p>迈克朱利安：这对我来说最令人难以置信的事情之一是，为了让公司取得成功，他们必须推动员工，让他们通过振铃器。直观地说，这是永远不会正确的。而你实际上有数据表明这是不对的。做这些事实上让每个人都变得更好。业务得到了显着改善，人们的生活得到了极大的改善，而且一切都很棒。&lt;/p>
&lt;p>Nicole Forsgren：是的，如果我们想要推动人们，这是不可持续的。如果有的话，我们希望推动人们做他们擅长的事情，我们希望利用自动化来实现自动化擅长的事情。那是什么意思呢？&lt;/p>
&lt;p>我们希望让人们做有创意，创新，新颖的事情。让我们让人们解决问题，让自动化做我们需要的一致性，可靠性，可重复性，可自动性。让我们不要让人敲打锤子并不断进行手动测试。让我们让人们弄清楚如何解决问题，做一两次以确保这是正确的事情，自动化，将其委托给自动化，机器和工具，交付，完成，然后拉人回到循环中进入循环，找出新的东西。&lt;/p>
&lt;p>我认为是Jesse Purcell说：“我想让自己不断自动化。”对？使自己脱离当前的工作，然后找到一份新工作，让自己再次自动化。我们永远不会失业。&lt;/p>
&lt;p>Mike Julian：是的，当我第一次开始使用DevOps时，我常常担心这一点，实际上，当我第一次开始自动化时，当时并不是DevOps，它是在大学中自动化Windows桌面部署。这是在21世纪初。我最大的担忧之一是，因为我花了半个星期的时间来做这件事，如果我要自动化，我会花一个小时做这个，剩下的时间我会做什么呢？他们只是要解雇我，因为他们不再需要我了。&lt;/p>
&lt;p>事实证明，不，这根本不是发生的事情。更高的工作价值变得有效，因为我并没有那么专注于辛劳。&lt;/p>
&lt;p>Nicole Forsgren：对，那些类型的东西，机器和电脑都做不到。而另一件事，我曾经告诉我的所有朋友，在工作保障方面不考虑这一点，对吧？不要试图将自己描绘成一个别人无法做到的事情，因为那样你就无法被替换，因为这也意味着你永远无法得到晋升。&lt;/p>
&lt;p>如果我们始终确保工作的某些方面可以实现自动化，以便我们有机会获得新工作，那么这只会为创造更多的事物创造更多机会。总会有问题，我们总有一些问题需要解决。我不想被困在做无聊的工作。&lt;/p>
&lt;p>迈克朱利安：是的，上帝知道这是事实。&lt;/p>
&lt;p>妮可福斯格伦：哦，天哪，我知道。我不想被困在做无聊，重复的工作。这简直令人头痛。如果我们能找到，特别是真正具有挑战性的复杂事物，如果我们能找到自动化的方法，相信我，我们永远不会把自己挖到那个洞的底部。那总是存在的。&lt;/p>
&lt;p>Mike Julian：所以我想谈谈DevOps状态报告，我想先问一个你之前提到过的问题。你提到这句话，学术严谨。那是什么意思？&lt;/p>
&lt;p>Nicole Forsgren：学术严谨包括一些事情，好吗？因此学术严谨的一部分是研究设计。所以这不只是在回答一堆问题&amp;hellip;&amp;hellip;对不起，yolo是我的简写，“你的方法论是有问题的。”&lt;/p>
&lt;p>迈克朱利安：我最近看到很多调查结果出来了。&lt;/p>
&lt;p>Nicole Forsgren：是的。所以一个是研究设计。有人说，“妮可，研究设计是什么意思？”那么研究设计是，您要求的问题类型是否与您用于收集数据的方法相匹配？对？这些东西是否匹配？对于某些事情，调查是恰当的。一次，所以一次是横截面，一个时间跨整个行业的调查。有些事情适合。有些事情不适合。&lt;/p>
&lt;p>一个很好的例子，很多人真的希望我在DevOps状态报告中做开放空间和问题。&lt;/p>
&lt;p>迈克朱利安：这是什么意思？喜欢开放式问题？&lt;/p>
&lt;p>Nicole Forsgren：不，开放空间。所以很多人对开放式办公空间有很多感觉。我应该在开放的办公空间工作吗？开放办公空间会影响生产力吗？或配对编程&amp;hellip;&amp;hellip;配对编程会影响生产力吗？配对编程会影响质量吗？人们对这些事情有很多感觉。在DevOps状态报告中使用的研究设计类型是一个完全匿名部署的调查，在整个行业中的单个时间点，并不适合回答其中任何一个问题的研究设计。&lt;/p>
&lt;p>迈克朱利安：那是为什么？&lt;/p>
&lt;p>Nicole Forsgren：因为您需要做的是拥有更加可控的研究设计。所以我需要知道，例如，你和谁一起工作。我需要知道，所以让我们继续进行同行评审，我需要知道你正在处理的问题类型，代码问题的类型，我现在需要问题的复杂性，我需要知道它花了多长时间，对吧？如果你现在想要提高生产力，对吧？因为我需要了解一定的生产力。我需要知道结果是什么。因此，如果我的结果是生产力，我需要衡量生产力，因为我需要控制困惑，对吧？因为事情比较复杂，我们希望花更长的时间。那些不那么复杂的东西，我希望不会那么久，对吧？&lt;/p>
&lt;p>然后我需要匹配和控制。对？甚至像开放式办公空间这样的东西，对吧？因为如果你在一个开放的办公空间而不是一个开放的办公空间进行同行编程，如果你在办公室里这样做，我需要知道这个人的资历，或者一些资历代理。我现在需要你如何配对，你是否与你的近似经验水平的人配对，如果不是资历经验水平。我需要知道配对编程是如何工作的，我需要知道所涉及的技术，我需要知道你是否偏远，或者你是否真的坐在一起。我需要知道你是否能够同时输入文本，或者是否有人插入而另一个人没有。&lt;/p>
&lt;p>因此，当我进行比较时，我知道比较是什么样的。&lt;/p>
&lt;p>迈克朱利安：这是一个令人难以置信的信息量。我没想到你必须知道这么多才能从中得到一个好的答案。&lt;/p>
&lt;p>Nicole Forsgren：这不是我的头脑。是的，因为你问了我一个很好的问题，我吐了一口气。这只是研究设计，然后你继续分析，对吗？当您继续进行分析时，我们需要了解您提出的问题类型。这些类型的问题，我们是否在考虑相关性？我们在看预测吗？我们在考虑因果关系吗？我们提供哪些类型的数据以及适合哪种类型的分析和问题？&lt;/p>
&lt;p>同样，他们需要以正确的方式匹配。某些类型的数据不适用于某些类型的分析或问题。所以你真的需要确保每一个都适合于正确类型的东西。对？某些类型的分析，如机械，调查问题，永远不适合机械分析，对吧？虽然，老实说，没有人会做机械分析。从来没有，顺便说一句，如果有人来找我并说他们正在做机械分析，我会坐下来非常专心地听你的，非常感兴趣，因为我认为没有人在做机械&amp;hellip;&amp;hellip;这不是一个事情。&lt;/p>
&lt;p>迈克朱利安：所以当你分析调查结果时，我们看到的是一个问题，然后是另一个问题，接下来是另一个问题，你知道数百个问题。当您分析这些内容时，您是在一次查看问题，还是在查看多个问题，然后根据您在几个不同问题中看到的内容来解释答案？&lt;/p>
&lt;p>Nicole Forsgren：所以当我写完结果时，当我写这份报告时，我正在写出我的分析结果，而我的分析正在考虑一个非常非常仔细的研究设计。现在意味着什么，我的研究设计经过精心构建，以尽量减少误解。它试图尽量减少答案中的漂移。所以，我们这样做的一种方式，这在加速的第二部分中概述，如果有任何想要阅读的统计数据书呆子，我们做的事情称为潜在结构。&lt;/p>
&lt;p>所以，你问过只有几个问题或几个问题。我提到过，我们这样做的一种方式称为潜在构造。如果我想问你关于文化的话，我可以向10个人询问文化，我会得到15个答案。因为文化可能意味着许多不同的事情，对吗？一般来说，当我们在DevOps环境中谈论文化时，我们倾向于得到一些东西&amp;hellip;&amp;hellip;人们会说非常常见的事情，如打破孤岛，拥有良好的信任，拥有新奇，对吧？&lt;/p>
&lt;p>因此，我们所做的是从定义开始，然后我们将提出几个项目，问题，捕获每个维度。所以你可能想要考虑一个涂料维恩图，其中每个问题都被覆盖，然后是所有他们拥有最大或完美覆盖的东西，它们是中心，那个小坚果，这就是构造是什么。这就是文化，即文化所代表的。&lt;/p>
&lt;p>然后每个圈子都是问题。这就是我们在研究设计中所做的。研究设计的一部分。当我进入统计分析模式时，我会考虑所有问题，所有项目，不仅仅是文化，而是我正在考虑的每一件事。因此，在过去的几年里，我已经完成了监视可观察性，我已经完成了CI，我已经完成了自动化测试，我已经完成了版本控制，我已经完成了所有这些工作，并且我将所有这些都扔进了漏斗，对？&lt;/p>
&lt;p>迈克朱利安：我敢肯定，这可能是你庞大的Excel电子表格。&lt;/p>
&lt;p>Nicole Forsgren：不，这是SPSS。我使用SPSS但您可以使用几种不同的统计工具。我们做主成分分析。而我们所做的就是它们如何加载？基本上，他们如何组合在一起，我们是否具有收敛有效性？它们会聚合吗？他们只测量他们应该测量的东西吗？我们是否有判别有效性？他们不衡量他们不应该衡量的东西吗？我们有可靠性吗？每个阅读这些问题的人都会以非常相似的方式阅读吗？&lt;/p>
&lt;p>一旦我们掌握了所有这些，并且对所有这些事情进行了几次统计测试，那么我说，“好的，这些项目，通常是三到五项，所有这些项目都是文化，”或“所有这些项目一起是CI，“或”所有这些，正确的这些项目分组，代表了这一点。“好的，现在，现在，我可以开始查看关联，预测或其他内容，然后我会看到报告，现在我只想谈谈文化。&lt;/p>
&lt;p>所以我把它作为一件事情谈论，但实际上是几件事，然后当我谈到文化时，我可以说，“这就是文化是什么”，我可以用这种细微的，多维的方式谈论它，我知道那些维度是什么，因为它由三到五，六到七个问题组成，顺便说一下，如果其中一个问题不合适，因为我从统计分析中知道，我可以抛弃它，我知道为什么。我总是有几件事。如果您只有一个问题或者您只有两个问题，那就是风险。如果其中一个不起作用，哪一个是错误的？你不知道。对？因为，是A还是B？我不知道。&lt;/p>
&lt;p>至少如果我从三开始，一个失败，那么它可能是好的两个。&lt;/p>
&lt;p>迈克朱利安：是的。这里的许多听众已经采取了很多由营销组织进行的调查，除了调查也是由营销人员设计的&amp;hellip;&lt;/p>
&lt;p>Nicole Forsgren：他们是由想要特定答案的人设计的。&lt;/p>
&lt;p>迈克朱利安：没错。&lt;/p>
&lt;p>Nicole Forsgren：这就是挑战。&lt;/p>
&lt;p>迈克朱利安：是的，然而，为了清楚地说明，DevOps状态报告根本就不是这样。正如你所说，有很多东西都是严格的。&lt;/p>
&lt;p>Nicole Forsgren：好的一点是，我们一直是供应商和工具无关的。&lt;/p>
&lt;p>迈克朱利安：你不是在寻找一个非常特别的答案，你想知道实际上是什么。&lt;/p>
&lt;p>Nicole Forsgren：我们并不是在寻找产品的答案。那么，在CI的例子中，什么是CI？我不关心工具。我说，如果你正在做CI，如果你正在进行CI，持续集成，以一种预测智能结果的方式，你将拥有这四样东西。其中的力量是，任何人都可以回过头来看待这个评估工具。如果您是经理，领导者或开发人员，您可以说，“我使用的任何工具，世界上的任何工具，我应该寻找这四件事”，或“我自己构建的任何工具，或者如果我正在做CI，我应该有这四件事。“&lt;/p>
&lt;p>如果你是一个供应商，你应该说，“如果我认为我正在建立或销售CI，我最好有这四件事。对吗？这就是伟大的事情，我必须说，上帝保佑我的新团队。他们让我以同样的方式运行它。它仍然是相同的。它仍然是供应商和工具无关，它仍然是能力集中。你寻找的每一件事，无论是自动化或流程，文化或结果，它的供应商和工具不可知，它的能力集中，再次，权力是你可以用它作为一个评估工具。&lt;/p>
&lt;p>我的团队是这样做的吗？我的工具是这样做的吗？我的技术是这样做的吗？我能做到吗？如果我不是，我的弱点是什么？我的约束是什么？因为如果我把我们带回到开头，是什么驱使我和DORA团队，那么我们想要摆脱这一点是什么？我们想让事情变得更好。我们该怎么做？我们可以为人们提供简单的评估标准。而且我并不是说这很容易，因为所有这些都很简单，需要工作。但如果有明确的评估标准，我们就有了可以去的地方。&lt;/p>
&lt;p>Mike Julian：因为我知道你喜欢谈论你几年来所做的事情。您提出了哪些最有趣的结果？&lt;/p>
&lt;p>Nicole Forsgren：哦，有很多好的。&lt;/p>
&lt;p>迈克朱利安：让我们选择你的前三名。&lt;/p>
&lt;p>Nicole Forsgren：好的，我认为我的最爱之一是，我会用俗气的营销方式来做&amp;hellip;&lt;/p>
&lt;p>迈克朱利安：请接受。我们已经做好了准备。&lt;/p>
&lt;p>Nicole Forsgren：有一个小创业公司并且不得不假装它作为营销人员一分钟的人，我们将看到我在这方面做了什么。&lt;/p>
&lt;p>架构很重要，而不是技术没有。第一。好的。那是什么意思呢？这意味着，我们发现如果您以正确的方式构建它，您的架构结果会比您的技术堆栈产生更大的影响。所以架构成果，一些关键问题是：我可以测试吗？我可以部署吗？我可以建立没有细粒度的沟通和协调吗？&lt;/p>
&lt;p>迈克朱利安：细粒度意味着什么？&lt;/p>
&lt;p>Nicole Forsgren：我是否必须与他人见面并一起工作并征用一些东西，我是否需要开辟一些疯狂的新测试环境，还是必须获得17个不同团队的批准？请注意，我刚刚提到过团队。沟通和协调可能是技术限制，也可能是人的限制。这让人很难回到康威定律。&lt;/p>
&lt;p>迈克朱利安：我最喜欢的法律之一。&lt;/p>
&lt;p>妮可福斯格伦：对吗？这是一个DevOp的事情。但是，这是真的。无论我们的沟通模式如何，我们通常最终会融入我们的技术。现在，我将说这在云和云原生环境中通常更容易实现，但它也可以在Legacy和Mainframe环境中完全实现。我们没有看到前几年布朗菲尔德和格林菲尔德受访者之间存在统计学上的显着差异。&lt;/p>
&lt;p>迈克朱利安：很高兴知道。&lt;/p>
&lt;p>Nicole Forsgren：是的，我喜欢那个。那个人很有趣。&lt;/p>
&lt;p>好的，第二个。云很重要，但只有你做得对。&lt;/p>
&lt;p>迈克朱利安：噢，这意味着什么？&lt;/p>
&lt;p>Nicole Forsgren：Dun dun duh。所以，这是我最喜欢的统计数据之一。我们发现，如果您正在执行所有五个重要的云特征，那么您成为精英表演者的可能性要高23倍。根据美国国家标准技术研究院（NIST）的说法，我想你可以说你是否正在完成云计算的所有五个基本特征。所以我没有提出这个，这来自NIST，好吗？&lt;/p>
&lt;p>所以它很有趣，因为我们询问了很多人是否在云端。他们就像，当然我们在云端，我们完全在云端，对吗？但只有22％的人正在做五件事。那这五个是什么？所以这五个是按需自助服务。您可以在没有人工干预的情况下配置资源，如果您必须填写一张票并等待一个人办票，这不算数。没有积分。&lt;/p>
&lt;p>另一个是广泛的网络访问。因此，您可以通过任何类型的平台访问您的云端内容;手机，平板电脑，笔记本电脑，工作站。大多数人都非常擅长这一点。另一个是资源池，因此可以根据需要动态分配和重新分配资源。另一个是快速弹性，对，爆裂魔法。我们通常都知道这个。&lt;/p>
&lt;p>现在最后一个是测量服务。所以我们只支付我们使用的费用。因此，最常查看的通常是广泛的网络访问和按需自助服务。&lt;/p>
&lt;p>迈克朱利安：是的，有趣的是，对我来说，那里没有任何东西阻止，比如说，从排位赛开始的内部开放堆栈集群。&lt;/p>
&lt;p>Nicole Forsgren：没错，对。所以这可能是私有云。我爱你指出了这一点。之所以如此重要的原因是，它只是归结为执行。它可以完成，另一个挑战是组织，管理人员或董事会经常说你必须去云，所以有人说，“哦，是的，我们要去云端。”但后来有人重新定义了云中的意义。对？所以，你到达那里，有人检查他们的小盒子，把金星放在某人的图表上，他们走开了，他们就像是，“好吧，我们没有看到任何好处。”好吧，是的，因为你没有这样做。&lt;/p>
&lt;p>迈克朱利安：对。是的。&lt;/p>
&lt;p>Nicole Forsgren：就像是，“我买了一个健身房会员，我已经完成了。”不，再说一遍，我不是说这很容易，对吧？有一些工作涉及。现在我喜欢的另一件事是，让我们说你不在云端，由于某种原因你必须留在Legacy环境中，你可以看看这五件事你可以尽可能多地实现，你仍然可以实现利益。&lt;/p>
&lt;p>迈克朱利安：对。这不是一个全有或全无的方法。你可以做其中的一些，并从中获得很多好处。&lt;/p>
&lt;p>Nicole Forsgren：这几乎就像一个骗子回到了第一，这是建筑问题，技术没有。我怎么能做一个备忘单，看看如何到达那里的一些非常好的技巧？&lt;/p>
&lt;p>迈克朱利安：那你的三号是什么？&lt;/p>
&lt;p>Nicole Forsgren：我的第三个可能是，外包不起作用。&lt;/p>
&lt;p>迈克朱利安：是的。&lt;/p>
&lt;p>Nicole Forsgren：有些人讨厌我，他们从他们的眼睛射出激光束。所以我们说外包不起作用*。&lt;/p>
&lt;p>迈克朱利安：好的，什么是星号？&lt;/p>
&lt;p>Nicole Forsgren：Asterisk，星号将是功能性外包不起作用。&lt;/p>
&lt;p>迈克朱利安：好的，所以说外包我的待命职责，可能不会那么好用。&lt;/p>
&lt;p>Nicole Forsgren：拿走所有的DEV，把它运走。全部采用TEST，将其运走。拿走所有OPS，运送它。现在，为什么呢？因为那样，你们所做的一切都是另一套交接，你们创造了另一个孤岛。你还批量完成了大量的工作，而你却让每个人都等待这种情况发生。目标是创造价值而不是让人们等待。如果现在每个人都必须等待所有东西回来，如果你正在做高价值的工作等待低价值的工作，因为它必须回到一起，这通常是它的工作方式，你是骨头。&lt;/p>
&lt;p>现在，功能外包。如果您有一个与您合作并与您协调并以相同的节奏交付的外包合作伙伴，那么这不是功能性外包。那是星号。&lt;/p>
&lt;p>迈克朱利安：好的，有问题。&lt;/p>
&lt;p>Nicole Forsgren：另外，如果他们是你的团队的一部分，他们是你公司的一部分，但他们基本上一次消失了三个月。对不起孩子，这是功能外包。我没有任何积分，愿上帝怜悯你的灵魂。这没用。&lt;/p>
&lt;p>迈克朱利安：对。在我看来，你怎么知道你是否处于这种困境中，如果你的团队和你给这些项目的人之间有明显的交接，你就有功能外包。那会是对的吗？&lt;/p>
&lt;p>Nicole Forsgren：是的，特别是如果有一个明显的手，然后是一个黑盒子的神秘。&lt;/p>
&lt;p>迈克朱利安：就像，工作是如何完成的？&lt;/p>
&lt;p>Nicole Forsgren：第一步，第二步，问号，第三步：获利。&lt;/p>
&lt;p>迈克朱利安：也许吧。所以前两个，这一切都很好，因为我们可以看到从哪里去，但第三个实际上看起来有点困难，因为如果我是一个系统管理员，我完全无法控制这个功能外包。我可能也讨厌它，我可能自己讨厌它，但我对它没有任何控制权。我可以做什么作为系统管理员，或操作员，开发人员，我该如何改善这种情况？&lt;/p>
&lt;p>妮可福斯格伦：所以一些想法可能包括一些事情，看看是否有任何方法可以改善过渡期间的沟通或节奏。对？您可能仍然拥有该外包合作伙伴，因为这就是它的方式。但是，假设您已经以三个月的增量进行了工作，有没有办法将切换增加到每月一次？有没有什么方法可以让我们知道我们知道我们导入的功能，小批量工作，只是增加切换？有什么方法可以将它们整合到我们的节奏中，融入我们的团队吗？&lt;/p>
&lt;p>现在我意识到这里有一些挑战，因为从法律的角度来看，我们不能像我们的团队那样对待他们，因为那时，至少从美国的角度来看，一旦我们像对待员工那样对待他们，那么我们就要对就业税负责以及所有其他合法的东西。但是，如果我们能够将它们整合到我们的工作节奏中，或者更接近我们的工作节奏，那么我们的结果就会得到改善。&lt;/p>
&lt;p>迈克朱利安：好的，很酷。这更有意义。这听起来并不像我担心的那么难。&lt;/p>
&lt;p>Nicole Forsgren：所以它可以开始减少节奏的延迟，要求稍微更清楚地了解正在发生的事情，如果它是一个完整的黑盒子，那就是寻找它。&lt;/p>
&lt;p>迈克朱利安：妮可，这绝对是太棒了。非常感谢你加入我。我有两个最后的问题。人们在哪里可以找到这个DevOps状态报告来进行调查？调查在哪里？&lt;/p>
&lt;p>Nicole Forsgren：哦，我们已经发布了调查结果。我可以将它包含在演出笔记中吗？&lt;/p>
&lt;p>迈克朱利安：当然。好的，大家，查看链接的节目说明。我的最后一个问题是除了这项调查之外，人们可以在哪里找到更多关于你和你的工作的信息？&lt;/p>
&lt;p>Nicole Forsgren：我有几个地方。所以我自己的网站是在nicolefv.com，我总是在Twitter上，通常谈论冰淇淋和健怡可乐，那是@nicolefv。&lt;/p>
&lt;p>迈克朱利安：我确实爱你Twitter推特。这是我的最爱之一。&lt;/p>
&lt;p>Nicole Forsgren：是的，每个人都来打个招呼。我的DM是开放的。&lt;/p>
&lt;p>迈克朱利安：我最喜欢你的Twitter提要大概是在你写报告的时候，说：“天哪，我为什么要这样做？”&lt;/p>
&lt;p>Nicole Forsgren：是的，我试着把它锁起来，但每隔一段时间就会有什么东西会滑落，比如“哦，我的天哪，一件好事正在发生”，或者“哦，我忘记了这一件事”，或“那么多好事正在发生。“&lt;/p>
&lt;p>迈克朱利安：是的，我记得去年就像，“哦，我的上帝，这太酷了，但我无法告诉你。”&lt;/p>
&lt;hr></description></item></channel></rss>
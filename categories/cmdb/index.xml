<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CMDB on Martin Liu's Blog</title><link>https://martinliu.cn/categories/cmdb/</link><description>Recent content in CMDB on Martin Liu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://martinliu.cn/categories/cmdb/index.xml" rel="self" type="application/rss+xml"/><item><title>Achilles的脚后跟</title><link>https://martinliu.cn/2015/06/04/achillese79a84e8849ae5908ee8b79f/</link><pubDate>Thu, 04 Jun 2015 05:15:53 +0000</pubDate><guid>https://martinliu.cn/2015/06/04/achillese79a84e8849ae5908ee8b79f/</guid><description>&lt;p>今天是红帽服务团队深圳 Bootcamp 的最后一天，我是最后一个 session 的演讲者，讲的内容是补丁管理，这是个老生常谈的话题，看看我怎么构思和解读的。&lt;/p>
&lt;p>[su_button url=&amp;ldquo;http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/06/Patch-Management.pdf&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;stroked&amp;rdquo; size=&amp;ldquo;2&amp;rdquo; icon=&amp;ldquo;icon: cloud-download&amp;rdquo;]PPT 下载在这里[/su_button]&lt;/p>
&lt;p>主要思路还是把目前的相关知识梳理一边。特别是借鉴了公司安全大师 Shawn 的一些内容。&lt;/p>
&lt;h2 id="玩好防塔游戏">玩好防塔游戏
&lt;/h2>&lt;p>把操作系统的该打的补丁都打好，避免已知漏洞的暴露。&lt;/p>
&lt;h2 id="做好安全加固">做好安全加固
&lt;/h2>&lt;p>修补 Achilles 的脚后跟，是说把安全配置基线落实到系统中，并行成为长效保持机制。&lt;/p>
&lt;p>其实这些还是和配置管理有关和 CMDB 有关，真是老生常谈呵呵&lt;/p></description></item><item><title>BMC Atrium CMDB CI数据迁移</title><link>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-ci/</link><pubDate>Wed, 12 Jan 2011 05:08:23 +0000</pubDate><guid>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-ci/</guid><description>&lt;p>在不同的 CMDB 服务器之间做数据迁移之前一定要注意两点：1）保持两边的 CDM 相同；2）先导入 CI 数据在导入 CI 相关的关系数据。另外就是每个类导入完毕之后要做数据完整性和正确性的抽检。以下使用的工具是 cmdbdriver，该命令初始化和一般性的参数介绍请参考相关文档。&lt;/p>
&lt;p>&lt;em>&lt;strong>CI 数据导出示例&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Command: xexpdt
XEXPORT DATA
Export instance data from all classes? (F):
Classes to export data from:
Class and its subclasses, From namespace (1,2) (1):
Namespace (): BMC.CORE
Class name (): BMC_ComputerSystem
Dataset ID (): BMC.ASSET
Filename for exported data: C:\DEMO\cs-ci
Exporting Class BMC_ComputerSystem
i=0: namespaceName = BMC.CORE, className = BMC_ComputerSystemExported without errorsExporting Class BMC_MainframeExporti
ng Class BMC_PrinterExporting Class BMC_StorageSubsystem
CMDBExportData  results
ReturnCode:  OK
Status List : 0 items&lt;/p>
&lt;p>到相应目录下面找到导出的文件，导出的结果至少是两个文件一个是 META_FILE 其他的才是 CI 数据文件。&lt;/p>
&lt;p>&lt;em>&lt;strong>关系数据导出示例&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Command: xexpdt
XEXPORT DATA
Export instance data from all classes? (F):
Classes to export data from:
Class and its subclasses, From namespace (1,2) (1):
Namespace (): BMC.CORE
Class name (): BMC_Dependency
Dataset ID (): BMC.ASSET
Filename for exported data: C:\DEMO\REL-DEP.XML
Exporting Class BMC_Dependency
i=0: namespaceName = BMC.CORE, className = BMC_DependencyExported without errorsExporting Class BMC_AccountOnSystemExpor
ting Class BMC_HostedAccessPointExporting Class BMC_HostedServiceExporting Class BMC_InventoryBulkItemsExporting Class B
MC_InventoryComputerSystemsExporting Class BMC_InventoryEquipmentExporting Class BMC_InventorySystemComponents
CMDBExportData  results
ReturnCode:  OK
Status List : 0 items&lt;/p>
&lt;p>到相应目录下面找到导出的文件，导出的结果至少是两个文件一个是 META_FILE 其他的才是 CI 数据文件。&lt;/p>
&lt;p>&lt;em>&lt;strong>导入数据示例&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Command: impdt
IMPORT INSTANCE DATA
Handle duplicate Instance Ids:
(Error/New ID for Dup/Merge/New ID for All) (1-4) (1): 3
Filename containing import data: c:\demo\cs-ci_0_0  (导入包含 CI 数据的文件)&lt;/p>
&lt;p>CMDBImportData  results
ReturnCode:  OK
Status List : 0 items
Total items Processed             :  2
Items Imported successfully       :  2
Items for which Import failed     :  0&lt;/p>
&lt;p>Command: impdt
IMPORT INSTANCE DATA
Handle duplicate Instance Ids:
(Error/New ID for Dup/Merge/New ID for All) (1-4) (1): 3
Filename containing import data: c:\demo\REL-DEP.XML_0_0 (导入包含关系数据的文件)&lt;/p>
&lt;p>CMDBImportData  results
ReturnCode:  OK
Status List : 0 items
Total items Processed             :  1
Items Imported successfully       :  1
Items for which Import failed     :  0&lt;/p>
&lt;p>导入完毕之后使用 Remedy User 到相应的表格中查找，确认导入的数据是否正确。&lt;/p></description></item><item><title>BMC Atrium CMDB 类定义迁移</title><link>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-sync-cdm-class/</link><pubDate>Wed, 12 Jan 2011 04:22:44 +0000</pubDate><guid>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-sync-cdm-class/</guid><description>&lt;p>当对 CDM 做了定制，并且要在不同的服务器直接做类的迁移的时候，需要把定制过的类都导出，然后在目标机上导入。可以使用的 CMDB 自带的命令行 cmdbdriver 工具。&lt;/p>
&lt;p>&lt;em>&lt;strong>cmdbdriver.exe 能支持的参数&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Options:
-u&lt;!-- raw HTML omitted -->
-a&lt;!-- raw HTML omitted -->
-p&lt;!-- raw HTML omitted -->
-l&lt;!-- raw HTML omitted -->
-s&lt;!-- raw HTML omitted -->
-x&amp;lt;INPUTFILE_FULLPATH&amp;gt;
-t&amp;lt;PORT_NUMBER&amp;gt;
-q&amp;lt;QUIET_MODE_NUMBER&amp;gt;&lt;/p>
&lt;p>登录 CMDBdriver 实例：   cmdbdriver -u Demo -p bmc@XXX -s atriumcmdb -t 9988&lt;/p>
&lt;p>登录之后在运行另外用于初始化的两个命令 init 和 log&lt;/p>
&lt;p>Command: init
INITIALIZATION&lt;/p>
&lt;p>CMDBInitialization  results
ReturnCode:  OK
Status List : 0 items&lt;/p>
&lt;p>Command: log
Control record:
Authentication string () :
User name () : Demo
Password () : &lt;strong>&lt;strong>**&lt;/strong>&lt;/strong>
Locale[.charSet] () :
TimeZone () :
Server () : atriumcmdb&lt;/p>
&lt;p>&lt;em>&lt;strong>导出类定义的方法实例&lt;/strong>&lt;/em>
Command: xexpdf
XEXPORT DEFINITION
Export all classes? (F):
Classes to export:
Class and its subclasses, From namespace (1,2) (1):
Namespace (): BMC.CORE
Class name (): BMC_ComputerSystem
Export all attributes with classes? (T):
Filename for exported data: c:\demo\BMC_ComputerSystem.xml&lt;/p>
&lt;p>CMDBXExportDef  results
ReturnCode:  OK
Status List : 0 items&lt;/p>
&lt;p>使用文本编辑器查看 c:\demo\BMC_ComputerSystem.xml 的导出结果&lt;/p>
&lt;p>&lt;em>&lt;strong>导入类定义的方法：&lt;/strong>&lt;/em>
Command: impdf
DEFINITION IMPORT
Import Item List:
Number of import items (0):
Import option : Create/Overwrite (1-2) (1): 2
Filename containing import data: c:\demo\cs.xml&lt;/p>
&lt;p>CMDBImportDef  results
ReturnCode:  OK
Status List : 0 items&lt;/p>
&lt;p>使用 Remedy User，用 Demo 登录，把语言切换到英文，然后在查 BMC_ComputerSystem 表达，在 custom 2 ～ n 的 tab 页面里面查看哪些导入的属性。或者使用 class manager 查看确认导入是否成功。&lt;/p></description></item><item><title>[ZT]ITIL V3 服务转换篇 之 资产和配置管理</title><link>https://martinliu.cn/2010/12/20/itil-v3-asset-configuration/</link><pubDate>Mon, 20 Dec 2010 03:01:40 +0000</pubDate><guid>https://martinliu.cn/2010/12/20/itil-v3-asset-configuration/</guid><description>&lt;p>为了定义和控制服务和基础设施组件。维持当前计划中、历史的服务和基础设施状况配置信息的准确性
**一、先介绍几个基本概念
**1、配置项（CI）
配置项是正在或将要在配置管理控制下的资产、服务组件或其他。配置项在复杂性、大小、种类有很大不同，从整个服务或系统包括硬件、&lt;a class="link" href="http://portal.vsharing.com/industry/1593.html" target="_blank" rel="noopener"
>软件&lt;/a>、文档、支持人员到单独软件模块或硬件组件。配置项可以集中或分组管理。配置项可以选择使用既定的选择标准、分组、分类和识别方式在整个生命周期中管理和追溯。其包括：
A) 服务 CI 项：服务能力资产、服务资源资产、服务模式、服务包、发布包、验收标准等
B) 组织 CI 项
C) 内部 CI 项
D) 外部 CI 项：包括外部客户需求和协议、供应商发布、分包商及对外服务。
E) 接口 CI 项：端到端的服务，跨越服务提供者的接口
2、配置管理系统（CMS）
为了管理大型复杂的 IT 服务和基础设施，资产和配置管理需要使用配置管理系统 CMS。在指定范围内 CMS 掌握着所有配置项信息。CMS 为所有服务组件与相关事故、问题、已知错误、变更发布、文档、公司数据、供应商、客户信息做关联。
在数据层面 CMS 能使数据库存在多个物理 CMDB 中而后共同组成一个联合的 CMDB。其他数据来源也可以加入 CMS 中。
3、配置管理数据库(CMDB)
所有配置项的信息都包括在配置管理数据库(CMDB)中。配置管理数据库(CMDB)对所有 IT 组件、组件的不同版本和状态以及组件之间的相互关系进行跟踪。在其最基本的形式下，配置管理数据库(CMDB)可能仅由一些纸质表格或一套电子表格 (Spreadsheets)组成。
4、最终介质库(DML)
DML 是用来存储和保护所有已授权的被确认版本介质配置项。 他们存储经过质检的主拷贝版本。这个库可以有一个或多个软件库或存放区来存放开发、测试和实时存储文件。他们包含组织所有软件的主拷贝、购买软件的副本及 受控文件的电子版。DML 包含物理的拷贝存储，DML 是发布管理的基础。&lt;/p>
&lt;p>**二、配置管理的目的：
** 1.  确定、控制、记录、报告、审计、验证服务资产和配置项包括版本、基线、组成成分、属性和相关关系。 2.通过服务&lt;a class="link" href="http://plm.vsharing.com/" target="_blank" rel="noopener"
>生命周期管理&lt;/a>保护资产完整、配置项等账户。确保只有已授权的组件被使用和已授权变更被执行。 3.通过服务生命周期保护服务资产、配置项的完整性。为了建立和维持一个准确和完整的配置管理系统，确保资产和控制服务、IT 基础设施的配置需求的完整性。&lt;/p>
&lt;p>&lt;strong>三、资产、配置管理的活动&lt;/strong>&lt;/p>
&lt;p>&lt;img src="http://blog.amteam.org/Uploads/UserDirs/3/1169/467255/b%281%29.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;a class="link" href="http://blog.amteam.org/Uploads/UserDirs/3/1169/467255/b%281%29.jpg" target="_blank" rel="noopener"
>&lt;img src="http://blog.amteam.org/Uploads/UserDirs/3/1169/467255/b%281%29.jpg"
loading="lazy"
alt="点击查看原图"
>&lt;/a>&lt;/p>
&lt;p>1、规划
2、识别
配置项识别过程：
A) 定义和制定标准文件来选择配置项和他们的组件构成
B) 依据标准选择配置项及其组件并记录他们
C) 给配置项分配唯一的标识符
D) 指定每个配置项相关属性
E) 确认每个配置项是受配置项管理来管理
F) 确定每个配置项的责任人
3、控制
必须有效控制信息以维持配置管理数据库(CMDB)的及时更新。一旦某项活动改变了配置项已记录的特征或配置项之间的关系，则必须在配置管理数据库 (CMDB)中记录该项变动。需注意的是：只有变更管理才有权批准对配置项的特征进行变动，事件管理只能改变某个现有的配置项的状态来反映现实状况。
配置管理负责控制组织接收到的所有 IT 组件并需确保这些组件被记录在系统中。硬件可在其已订购或已交付时进行记录，而软件则通常在其被纳入 DML 时进行记录。
4、记录
组件的生命周期可被划分成多个阶段，每个阶段都可以分配一个状态代码，但具体分成几个阶段则取决于公希望记录 IT 基础设施的哪些特征。保持对每次状态变化日期的记录可以提供关于一个产品的生命周期的有用信息，如订购时间、安装时间以及所需的维护和支持。组件的状态决 定了可以对其进行操作的余地。
5、审核和报告
执行审计是为了核实配置管理数据库(CMDB)中记录的信息是否仍然反映了当前的现实状况。这些信息可用来检查和更新配置管理数据库(CMDB)。
在下列情形下需要执行审计：
A) 在建立了新的配置管理数据库(CMDB)之后；
B) 建立配置管理数据库(CMDB)一段时间之后；
C) 重大变更之前或之后；
D) 灾难恢复之后；
E) 其他任何方便的时候。
审计也可以随机地或在配置经理认为配置管理数据库(CMDB)中的信息不正确时进行。如果配置管理系统与审计工具之间存在关联，则可以每天生成针对某个相 关领域的审计报告。在发现差异时，不应该允许审计工具自动更新配置管理数据库(CMDB)。所有的差异都表明变更管理流程可能被忽视了，所以应该对这些差 异进行调查并通过变更管理对这些差异进行追溯性处理。
&lt;strong>三、配置管理管理报告&lt;/strong>
配置管理流程的管理报告可能包括下列信息：
a) 有关流程质量的信息；
b) 在审计中发现的记录与实际情形不符的次数；
c) 发现未经批准的配置的次数；
d) 出现已记录的配置不能被找到情形的次数；
e) 审计中发现的有关配置项属性详细程度方面的差异；
f) 处理信息记录请求所需的时间；
g) 超过给定事件或变更次数的配置项的列表；
h) 有关 IT 基础设施的结构和组成的统计信息；
i)  有关 IT 基础设施发展情况及其他方面的信息；
j) 有关改进措施的总结、报告和建议，例如，针对由于业务、技术、市场价格和其他相关变化所导致的配置管理追踪记录的配置项的范围和详细程度的变更所提出建议；
k) 有关实施流程所耗费的人力成本的清单。&lt;/p>
&lt;p>&lt;strong>四、配置管理的绩效指标指标&lt;/strong>
a) 闲置许可数量;
b) CMDB 错误导致变更失败的数量;
c) 未授权配置数量;
d) 配置项文档错误导致变更失败所引起的事故数量;
e) 因为 CMDB 错误导致违反 SLA 的数量;
f) 无相应配置项刷新的变更请求数量;
g) 不精确配置项百分比;
h) 客户满意度 ;&lt;/p>
&lt;p>&lt;strong>五、与其他流程的关系&lt;/strong>&lt;/p>
&lt;p>&lt;img src="http://blog.amteam.org/Uploads/UserDirs/3/1169/467255/a.jpg"
loading="lazy"
>&lt;/p>
&lt;p>转帖学习一下。&lt;/p>
&lt;p>From &lt;a class="link" href="http://blog.amteam.org/standard/A1159174.html" target="_blank" rel="noopener"
>http://blog.amteam.org/standard/A1159174.html&lt;/a>&lt;/p></description></item><item><title>规划CMDB数据填充-003</title><link>https://martinliu.cn/2010/07/20/cmdb003/</link><pubDate>Tue, 20 Jul 2010 11:35:44 +0000</pubDate><guid>https://martinliu.cn/2010/07/20/cmdb003/</guid><description>&lt;p>From 《Step by step to build a CMDB》步骤 17-规划 CMDB 数据填充&lt;/p>
&lt;p>本文描述填充过程的任务 3 到任务 4：&lt;/p>
&lt;p>&lt;img src="http://martinliu.cn/wp-content/gallery/cmdb/ci-data-mapping.png"
loading="lazy"
alt="ci-data-mapping"
>&lt;/p>
&lt;p>&lt;strong>任务 3 映射 CI 和数据源&lt;/strong>
现在拿出您的 CI 清单，并把每一类 CI 与具有相关信息的数据源映射起来。一个简单的电子数据表格，像图 17.2 一样的就足够了。有更复杂数据需求的大一点的企业可能需要多个数据页或者通过 CI 分类来连接到不同的数据页。&lt;/p>
&lt;p>这项工作的最终目标不仅是识别用以填充 CMDB 数据源，而且还识别了流程和平台的接触点，有些平台对数据填充是有影响的。这项工作也是至关重要，用来定义数据调和规则，定义数据优先度，这些会在下面的步骤，任务 7“建立调和规则”中用的。
工具映射如下图 17.2 所示，包括了每一个 CI 类，相关的属性，相关的关系数据，和数据源。
图 17.2 Ci 和数据源之间的对照关系图样例
您可能会发现一些 s 数据源之间的重叠，特别是 CI 库存清单的属性数据。这些数据通常包括唯一物理特性和 CI 的地点的说明 ，例如：型号、序列号、地点和所有者。此信息可能被存储在其他多个地方，它们也可用于 CI 数据填充的来源和日常维护的来源。
多种的资产和库存清单数据来源可能包括如下：&lt;/p>
&lt;ul>
&lt;li>审计（资产清单或者配置发现数据库；无代理和有代理方式）&lt;/li>
&lt;li>资产管理系统&lt;/li>
&lt;li>采购系统和许可证管理&lt;/li>
&lt;li>财会系统（采购或者收货）&lt;/li>
&lt;li>合同管理系统&lt;/li>
&lt;li>变更管理系统&lt;/li>
&lt;li>其他财务应用和系统&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>任务 4 访问数据源环境&lt;/strong>
为了确保数据质量，你应该访问所有的数据源环境，而不仅仅只是 CMDB，还包括连接工具和相关技术，要逐一访问查看每一个数据源。在这里，“进来的是垃圾，出去的就是垃圾”这个俗语是适用的。CMDB 项目的成功可能依赖于对系统或者基础架构的更新，以适应网络流量和数据量，还依赖于确保每一个数据源的数据质量。&lt;/p>
&lt;p>当你规划 CMDB 数据填充的时候，要自问这样几个问题，是有关外部映射数据源质量的：&lt;/p>
&lt;ul>
&lt;li>现在那些信息在那里、怎样被存储的？ &amp;ndash;数据库、电子表格、Word 文档？&lt;/li>
&lt;li>当前环境中有没有审计（发现）工具、软件分发、配置管理或者采购系统，用来自动的跟踪和存储这些信息？ 或者数据时被手工地收集和更新的？&lt;/li>
&lt;li>这些系统是基于开放标准还是私有技术的？&lt;/li>
&lt;li>这些系统的厂商有没有标准化的工具？或者 CMDB 厂商？&lt;/li>
&lt;li>需要被继承的数据源的物理位置在那里？&lt;/li>
&lt;li>在 CMDB 和数据源之间，通讯的方式是双向的还是单向的？&lt;/li>
&lt;/ul>
&lt;p>还要考虑有关映射数据源性能相关的问题：&lt;/p>
&lt;ul>
&lt;li>就当前的数据源来说，现实的性能、容量和可靠性是怎样的？&lt;/li>
&lt;li>系统上当前的活动状况怎样？&lt;/li>
&lt;li>活动用户数&lt;/li>
&lt;li>其他并发继承此数据源的工具&lt;/li>
&lt;li>备份、病毒扫描、报表或者数据挖掘的日程&lt;/li>
&lt;li>审计工具（配置发现或者库存清单）扫描或者排队日程&lt;/li>
&lt;li>其他任何将影响性能的事情&lt;/li>
&lt;li>硬件和当前环境是不是能完全满足今后数据迁移所需要的附加工作量和空间需求？以及满足对于以后的日常数据同步？有没有对今后几年里增长率有做过计算？&lt;/li>
&lt;li>是不是需要考虑要满足什么约束或者特殊权限？&lt;/li>
&lt;li>厂商是否在与他们数据库集成方面有建议的最佳实践？（使用热备的生产机来降低作业压力）&lt;/li>
&lt;li>CMDB 周边的数据集和连接技术是什么？&lt;/li>
&lt;li>网络环境中物理的限制（带宽、距离等）是否会有影响？&lt;/li>
&lt;li>当前的版本是多少？在以后的六个月或者一年里是否有升级的计划？有哪些好处？&lt;/li>
&lt;li>为当前的解决方案是否得到了足够的资料来负责架构、排错以及连接系统的维护？&lt;/li>
&lt;/ul>
&lt;p>通过尽早的回答这些问题，就可以避免后续可能出现的性能问题，那些问题会影响项目的成功。如果数据源不太可靠，而且数据质量和性能方面是有问题的，这个时候，可以回到这些数据的关键利益相关者那里，与他们讨论，并确定这是否会影响到使用方面的关键需求。如果没有，需要把这部分数据需求从 CMDB 项目计划的第一阶段中展示放弃。这里最重要的是第一阶段的合理部署，实施结果能够获得用户全面的适应。然而，如果这些数据依然是比较关键的需求，那么需要与数据所有者，和收益者各方进行沟通，并引起各方的高度重视，共同确定一个解决方案。&lt;/p></description></item><item><title>规划CMDB数据填充-002</title><link>https://martinliu.cn/2010/07/20/plan-cmdb-population-002/</link><pubDate>Tue, 20 Jul 2010 11:25:18 +0000</pubDate><guid>https://martinliu.cn/2010/07/20/plan-cmdb-population-002/</guid><description>&lt;p>From 《Step by step to build a CMDB》步骤 17-规划 CMDB 数据填充&lt;/p>
&lt;p>本文描述填充过程的任务 1 到任务 2：&lt;/p>
&lt;p>&lt;img src="http://martinliu.cn/wp-content/gallery/cmdb/cmdb-data-sources-re.png"
loading="lazy"
alt="cmdb-data-sources-re"
>&lt;/p>
&lt;p>&lt;strong>任务 1  再次回顾 CMDB 范围&lt;/strong>
现在进行现实检验。你能否确实交付在第 2 阶段即“定义需求和创建 IT 服务模型蓝图”中定义的 CI 范围涉及的相关数据？你在 CI 数据一旦交付以后，能否有足够的资源来维护整个系统和所有数据？这些都是重要的问题，因为您所选择的 CMDB 解决方案，可能很容易地就超越了您需要的范围，超出了你可以能容易维护的程度。&lt;/p>
&lt;p>在规划 CMDB 数据填充时，您的思想应该是“少即是多“。先学会走再跑。让 CMDB 的首次推广得到充分验证后在考虑扩大范围。您需要帮助保持 CMDB 的团队和 CMDB 数据用户的积极性。同时避免项目范围的蔓延，否则可能破坏的实施的效果，以及用户对新的解决方案的接受度。&lt;/p>
&lt;p>请谨记这样几个考虑因素，从而来帮助您始终专注于那些核心需求上，并能对关键的限制作出反应：&lt;/p>
&lt;ul>
&lt;li>成本 – 每个人都必须面对业务现实，包括预算和费用的现实。因此，在您的 CMDB 项目预算范围里，对主要需求排列优先级。如果出现新的想法，那么也只是在新的预算来下了以后才考虑。&lt;/li>
&lt;li>时间 &amp;ndash; 您可能需要在给定的时间内实施 CMDB，来使您企业在此方面的业务需求得到满足，如 Sarbanes-Oxley 法规，或支持一个非常关键的新流程。当您计划了 CI 数据填充的顺序后（后面介绍的这一步），不仅要对 CI 数据排优先级，而且还要明确时间的限制。&lt;/li>
&lt;li>实用性 – 如果没有足够的资源用来实施和维持 CMDB，以满足 CMDB 要求，那么您可能需要缩小实施范围，以便您可以在您实际有限的资源里运作项目。你还可以考虑分两个阶段进行实施，把非关键的要求放到第二个阶段中。&lt;/li>
&lt;li>外部强加的优先事项 – 有些业务的运作，例如企业治理、数据保护和信息自由，可能会影响您既定的优先次序。您可以通过分阶段实施 CMDB 数据填充来减少外部因素的影响。如果你没有从一开始就计划足够的时间来达成最后期限，那么你可以尝试投入更多的资源来克服时间上的限制。然而，还要意识到，以后你要申请更多的资源，没有资源的保证，你可能无法充分管理好项目。&lt;/li>
&lt;li>所有权 – 有时 IT 资产的负责人并不属于 IT 组织。如果资产所有者决定不参与的 CMDB，这会严重限制了 CI 数据内容的提供。您可以提供 CMDB 部分功能的有限的访问给他们，用来消除他们顾虑，并参与进来。&lt;/li>
&lt;li>地区 – 地理区域上的边界，可能会限制建立企业范围的 CMDB。由于地理或行政上可能的边界，我们可能听过“最好再也不要从总部传来这样神经质数据库方案”。最好预防这种情况的办法是，尽可能早的让所有地区的相关人员参与到 CMDB 项目里来。&lt;/li>
&lt;li>组织架构 – 很多企业把 IT 划分成为清晰地、各自为政的独立部门，通过这种方式来对 CMDB 里的不同范围负责。例如：通信部门的人可能是一个单独的组织结构，他们可能拒绝参与到项目中来，因为他们觉得这超出了他们的控制范围。这时候就要让其他的 IT 组织参与其中，让每个人都知道谁是项目负责人。&lt;/li>
&lt;/ul>
&lt;p>当你计划你的 CMDB 数据填充的时候，越能专注于关键受益人的需求，就越能够达成项目的业务目标，就越能让您的项目顺利。您需要就已经确定的 CMDB 范围，与所有的利益方沟通它可能的影响和效果。收集他们的反馈，并对有必要方面做进一步讨论。&lt;/p>
&lt;p>&lt;strong>任务 2 识别 CI&lt;/strong>
使用在第 15 步即“设计 IT 服务模型蓝图”中设计的 IT 服务模型蓝图为基础，来生成用于 CMDB 数据填充的 CI 以及相关属性和关系数据的清单。这个清单的细节应该到数据字段级别，以便，你能够识别并且映射一个或者多个数据源到特定的 CI 数据。
例如，如果你把一个实际的服务器 CI 的属性和关系数据都列出清单，你就可以找出一些现有的能提供属性数据的数据源，可能包括库存管理的数据库和发现或者网络管理工具。但是另外一些数据字段可能没有现成的数据源。你将在第 18 步“选择自动化 CMDB 数据填充工具”中用到以上差距分析。或者您可能决定使用手工的方式来填充和更新这个字段，这里还需要仔细的考虑到数据的负责人，和在 21 步“建立 CI 生命周期管理流程”中需要支持的流程。
至此，你需要专注于用来满足项目目标的要求。在步骤 11 到 14，你定义了与其他流程的结合点，明确的 CI 需求。专注于那些能直接对流程收益人产生直接影响的 CI 数据。&lt;/p></description></item><item><title>规划CMDB数据填充-001</title><link>https://martinliu.cn/2010/06/04/plan-cmdb-population-001/</link><pubDate>Fri, 04 Jun 2010 06:13:20 +0000</pubDate><guid>https://martinliu.cn/2010/06/04/plan-cmdb-population-001/</guid><description>&lt;p>From 《Step by step to build a CMDB》步骤 17-规划 CMDB 数据填充&lt;/p>
&lt;p>目标&lt;/p>
&lt;p>在这一 CMDB 关键的步骤中，会为 CMDB 的初始化 CI 数据填充，做精细的计划。需要考虑到所有 CI 数据，把不同 CI 类型对应到不同的数据集中，安排正确的顺序将这些数据集 CMDB。其中定义对应的规则来调和重复数据是很重要的，不仅在 CMDB 初始化数据填充阶段重要，在以后的日常维护过程中也是非常重要的。做出了本阶段的详细规划后，这样在第 18 步即“选择自动化 CMDB 填充工具”时，就能考虑需要什么样的配置发现和自动化工具了。&lt;/p>
&lt;p>&lt;img src="http://pursuitmag.com/wp-content/uploads/2010/01/private-investigator-database.jpg"
loading="lazy"
>&lt;/p>
&lt;p>实际上，把数据填充到 CMDB 中是非常基础的工作，必须事前做好充分的数据范围和类型的分析。对于一个典型的 CMDB 数据填过程来说，将需要做如下工作：&lt;/p>
&lt;ul>
&lt;li>建立里项目程碑和高阶项目计划，以及配套的支撑数据库和操作流程。&lt;/li>
&lt;li>安排项目启动会议，单周或者双周的项目进度沟通会。&lt;/li>
&lt;li>识别子项目（每个数据集分为一个子项目），建立每个子项目的目标和需求清单。识别和制定项目工作活动内容，确定项目的工作流程，并且按照项目计划排程所有活动。包括：
&amp;mdash;并行开展项目（用户界面定制，DSL 数据填充）；
&amp;mdash;串行开展项目（发现工具，数据调和，等等）&lt;/li>
&lt;li>为每个子项目分配项目负责人，让他们来负责汇报项目的进展、问题升级和下一步的工作。&lt;/li>
&lt;li>为所有项目参与人员建立一个开放的沟通平台，包括所有内部、外部人员（邮件组方式，数据库、通报）&lt;/li>
&lt;li>为可能出现的紧急事件预留至少 10%的时间和预算的缓冲。&lt;/li>
&lt;/ul>
&lt;p>自动配置采集工具是一种很好的数据填充和数据维护方式，您也会在某种发现工具的诱惑下，在很短的时间里，就采集到了大量的数据。可是您还是需要注意：一个被填充了大量数据的CMDB并不意味着是一个好CMDB。一旦您建立和填充了CMDB，您就将需要对它进行积极地维护。如果CMDB中存储着很多超出用户需求的数据，即使在最好的情况下，您也是对这些无用的数据做大量无谓创建和维护工作，这是一个巨大的浪费且没有意义的事。而在最糟的情况下，如果你所填充入CMDB的数据，在后来是没有被及时更新和维护的，那么当用户使用到这些质量低和不精确的数据数据后，就会对CMDB失去信心，这样也对 CMDB在企业里的推广和应用造成一定阻碍。&lt;/p>
&lt;p>按照您在第二步-“定义需求和创建 IT 服务模型蓝图”中的需求，来设计和部署 CMDB。从你的服务模型蓝图出发，来识别 CI，把他们分组到各个数据集中。识别每个数据集应该对应的数据源，把每个 CI 类型和相关数据源对应起来。并且按照既定的 CMDB 数据导入的工作顺序，来规划不同数据源中数据。最后，把以上所有规划和设计用文档记录下来，包括识别重复数据的调和规则等。&lt;/p>
&lt;p>在这一步里，您必须专注于 CMDB 所需要的范围，交付可实现的东西，而非可能的东西。在敲定最终的规划之前，你需要组织分析会议进行仔细地计划。&lt;/p></description></item><item><title>联邦的CMDB–神话/现实/需求/还是策略？</title><link>https://martinliu.cn/2010/05/31/federation-cmdb/</link><pubDate>Mon, 31 May 2010 03:53:06 +0000</pubDate><guid>https://martinliu.cn/2010/05/31/federation-cmdb/</guid><description>&lt;p>来自：Jonathan Markworth（CompuCom Systems 有限公司管理顾问，探讨联邦数据库的优点）&lt;/p>
&lt;p>使用一个具有单一的、全知的、万能的和自维护功能的工具，来管理 IT 基础架的方方面面信息，是否是最好的方案呢？使用一个能做所有工作的全集成平台，来替换您积累下来的所有管理工具是否是最佳方式？现实情况是，大多数组织都已经实施了几十种应用程序、工具、实用程序、数据存储、硬件平台和管理框架，它们一起运行着一个或更多的 IT 服务管理功能。它们中的每一个应用都有自己的数据库，对当前环境中的一些关键管理功能提供信息支持。在 CMDB 应用场景中，这些工具相关的数据库中，其实也包含了大量关键的 CI 属性，这些属性可以用于识别 CI 之间的关系。重要的问题是，如何利用现有的投资和资源来建立一个底层共享的数据库，比如一个 CMDB。&lt;/p>
&lt;p>&lt;img src="http://www.jevotrust.com/Site/graphics/cmdb_config_management.jpg"
loading="lazy"
>&lt;/p>
&lt;p>一种方法是“集中存储和管理”，从这些数据源中导出 CI 的唯一标识、属性、以及关系，然后都整合到一个数据库中。但在经过了一段很长的时间后，这种方案所产生的数据将很难维护，因为伴随着数据源数量的增长，整套系统的维护会变的愈来愈复杂。&lt;/p>
&lt;p>另一种方法是“建立联邦的 CMDB”，建立一个核心 CMDB，用来整合所有配置项的唯一标识、核心属性和关系数据，为所有需要它的 IT 流程随时提供配置数据，而不需要对所有数据进行集中式地复制。用联邦的模式，让 CMDB 持有所有 CI 及其核心属性数据，然后再连接到其他相关的数据源；如服务台事件单、服务水平协议、甚至其他监控的管理控制台界面。通过正确地部署，联邦模式可以使得企业的 CMDB 能横跨所有的个 IT 组织，如果需要的话可以对既有的相关系统进行分阶段的实施，这样不仅可以让 IT 组织能够继续日常业务，还不会带来什么干扰。&lt;/p>
&lt;p>&lt;img src="http://farm1.static.flickr.com/131/398876934_548e99f7e0.jpg"
loading="lazy"
>&lt;/p>
&lt;p>摘自 BMC 软件公司公布的 VIEWPOINT “CMDB 的潜力—驾驭新的 IT 现实”，CMDB 为主题的文章。&lt;/p></description></item><item><title>CMDB配置采集工具部署之4大挑战</title><link>https://martinliu.cn/2010/04/26/cmdb-addm-tool-implement-good-practice/</link><pubDate>Mon, 26 Apr 2010 12:24:24 +0000</pubDate><guid>https://martinliu.cn/2010/04/26/cmdb-addm-tool-implement-good-practice/</guid><description>&lt;p>[singlepic id=84 w=320 h=240 mode=watermark float=left] &lt;em>&lt;strong>挑战 1：沟通成本大&lt;/strong>&lt;/em>
项目的参与沟通方可能很多，最多的情况下，可能包括：网络部门、系统部门、安全部门和各个业务部门。沟通的内容主要是配置采集的实施技术方式。其中采集的安全性，风险分析是最重要的部分；在部门多的情况下，面对多种选择的时候，逐一给项目各方说清所有方案，特别是讲清楚利弊是非常耗时的。在充分沟通了所有技术可能性之后，才能做出倾向性选择。逐一这是第一轮沟通，搞清楚了倾向性而已。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战 2：决策成本大&lt;/em>&lt;/strong>
特别是银行等金融企业，安全性要求特别高。安全风险方面的建议往往是最重要的，他们的建议对配置采集工具的实施具有决定性意义。在各方都充分理解了配置采集工具的架构和安全性之后，就是拍板定夺了。这种逐级的审批和决策是需要较长的周期。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战 3：前导时间成本太大&lt;/em>&lt;/strong>
在前导时间里，可能还没有部署正式的 ADDM 采集服务器。在这个阶段里，要配置网络，让以后的采集服务器能够处于能够扫描到所有目标服务器设备。还可能需要在每台服务器上配置相关的准备工作，主要是坚持主机的操作系统的账户、采集协议和安全配置等是否满足配置采集工具的要求。这写工作是一个群众性运动，需要让所有的系统管理员配合。此项工作的设计人员设备多，最好能尽早的开始。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战 4：用户的期望太大&lt;/em>&lt;/strong>
用户对配置工具的期望主要是集中在深度和细度方面。其实这也不为过，只是在实施的过程中，最好还能把发现工具的一下特有的功能和特殊推广给用户。如软件和硬件的 EOL 信息，一些开合即用的报表和图形化展示功能，全文搜索等等功能其实都可以给客户带去意想不到的价值 。&lt;/p></description></item><item><title>掀起CMDB的盖头来</title><link>https://martinliu.cn/2010/03/30/phase-roll-out-cmdb-implement/</link><pubDate>Tue, 30 Mar 2010 14:00:01 +0000</pubDate><guid>https://martinliu.cn/2010/03/30/phase-roll-out-cmdb-implement/</guid><description>&lt;p>今天是项目计划提交后的第二天，客户方项目经理对项目的推迟表示感到非常吃惊，期望能让我们给出一个合理的解释。其实这也同样的超出了我的预料，难道软件项目管理和运作都是所谓的人月神话么？&lt;/p>
&lt;p>[singlepic id=22 w=320 h=240 mode=watermark float=left]在我看来 CMDB 项目的实施和运作有是有可能分阶段、逐步地交付项目成果的。简单的来说首先交付的当然是 CMDB 和配套发现工具系统本身，丑媳妇不要怕见公婆，把这个不加粉饰的原型系统拿出来，让项目各方包括最终用户来试用和评估。接着按照 CMDB 配置数据的来源的不同，把数据顺序的导入 CMDB，并且开展数据的调和工作，完成基础数据的初始化。在基础数据的基础上，需要对 CMDB 服务模型加以验证，选取重点的系统来验证，让系统经理和 CMDB 相关用户也参与进来，用事实和数据讲话，对模型和工具做最终的确认。这个其实是一个小范围内的推广，它的经验可以直接应用于下一个阶段。接下来是对其他所有被采集对象的普遍扫描和 CI 数据同步，在这个阶段里还需要实现 CMDB 和所有 ITIL 流程的集成，ITIL 流程是 CMDB 的主要消费者 ，这个集成往往是两家不同的产品，这种情况下，如果集成的效果欠佳，CMDB 的实施成果也会打折扣。最后结尾的交付物可以是 CMDB 的审核和报表等产品。&lt;/p>
&lt;p>正如 ITIL 的实施一样，没有两个国内公司的 ITSM 实施是相似的，就像国内不存在两片相同的树叶一样。那么国外的树叶又如何呢？从 ITSM 实施方面来看，相同的树叶在国外还是非常多的。相同的原因在于，往往用户选择了相同的产品如 Remedy ITSM 套件，往往由于定制化的人力成本很多用户也在尽量避免对产品的定制，如果通过配置可以实现的需求，绝不定制或者开发。我们也应该多走工业化标准生产的道路，少以中国特色为借口来实施个性化二次开发。&lt;/p></description></item><item><title>CMDB需求分析之最佳实践</title><link>https://martinliu.cn/2010/03/29/cmdb-requirement-analysis-practice/</link><pubDate>Mon, 29 Mar 2010 15:19:20 +0000</pubDate><guid>https://martinliu.cn/2010/03/29/cmdb-requirement-analysis-practice/</guid><description>&lt;p>[singlepic id=4 w=320 h=240 mode=watermark float=right]今天终于移师厦门开发中心，这意味着我所经历的史上最长 CMDB 需求分析基本告一阶段，也意味着 CMDB 的构建、集成、定制和 测试工作也徐徐拉开了大幕。&lt;/p>
&lt;p>回忆前三个月所做的的需求分析工作，虽然各项调研和讨论工作进行的缓慢，不过细致的工作最终还是换回了令人满意的成果，起码我是这么认为。&lt;/p>
&lt;p>需求分析的过程是对需求的重新整理、重新定义和梳理。项目的立项并不意味着项目目标树立的精准，项目范围控制的合理。实际需求可以在实施的初期阶段来重定义，从新分析，着觉得不是浪费时间。而且这一点对于中国用户至关重要。国内很多项目都是资金或者预算驱动的，先有需求，通过需求推到出项目的价值，在通过项目的投资回报率申报项目预算的过程在国内是很少见得。国内的项目往往是有多少钱需要花，那么大家在来看，如何把需求花到极致，达到最大的产出。这也是很多需求分析做的贪多、贪大、求全的根源，这样做的好处是在一个项目周期内就把需求实现的尽善尽美（愿望是这样），坏处是：可能导致厂商和服务商的服务成本超支，从而造成的项目质量降低，从用户角度来说一次性接受一大堆的系统功能，负担重，接受度低，同时客户满意度低，项目满意度差。&lt;/p>
&lt;p>我认为较好的最佳实践还要抓项目的主要目标，抓需要实现的主要价值点，抓重点放弃那些可做可不做的功能。懂得放弃的人才懂得获得。把所有的功能需求做成能够分批、分期上线的成果；确保让系统用户能 buy in 每一个阶段性成果，不要奢望给用户带来革命性的提高，由于那样也意味着，你对他们当前工作方式的影响是巨大的，没有用户愿意接受巨变。&lt;/p>
&lt;p>需求分析时，从技术上讲，对会议组织人要求很高。需要此人能非常熟悉 CMDB 项目实施的方法论，需要此人能够非常熟悉产品的各个功能点，需要引导有效的需求分析会议。在白板上尽可能多的画图，用 Visio 或者 ppt 等工具尽量多的讲解各种架构图、功能图、流程图具有事半功倍的效果。不管会议上您可能收到怎样的抱怨、抵制、反对；stakeholder 的反馈将是你最宝贵的收获。没有互动和反馈的需求分析会是相当无聊和浪费时间的。切忌在大型的企业中，要慎重地计划每一次需求分析会，理由也很简单，企业组织越大，沟通的成本也越高。需求分析沟通的效率和成功完全取决于 CMDB 项目执行的方法论，取决于分析引导人的各种项目背景经验，还取决于对客户状况了解和上手的速度。&lt;/p></description></item><item><title>CMDB Value Points 价值点</title><link>https://martinliu.cn/2010/01/01/cmdb-value-points/</link><pubDate>Fri, 01 Jan 2010 05:23:06 +0000</pubDate><guid>https://martinliu.cn/2010/01/01/cmdb-value-points/</guid><description>&lt;p>&lt;a class="link" href="http://www.flickr.com/photos/waywardsheep/682513568/" target="_blank" rel="noopener"
>&lt;img src="http://farm2.static.flickr.com/1296/682513568_4476244046.jpg"
loading="lazy"
alt="The point value"
>&lt;/a>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->CMDB 的价值点分为两类：硬收益和软收益。从硬收益的角度，CMDB 的用户可能会让你来描述 CMDB 对他们的价值点。下面的几个轶事可以作为收集 CMDB 可能为你的企业带来价值点的几个方向：&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;ul>
&lt;li>&lt;strong>把IT环境的可视化带到更高程度&lt;/strong> &amp;ndash;一领先的制热和冷却系统供应商指出，他们始终无法很好的理解一个计划外停机时间对用户所造成影响。例如，当只有25个用户受到了网络中断问题的影响，IT部门必须通知用户群中的全部100个用户。这会导致一个客户满意度低的反馈。CMDB使该公司能够理解配置项之间的关系，并确切地知道在任何确定时刻什么用户会受到影响。现在用户间可信的沟通能够来自于各个IT部门，并且使IT成为业务不可分割的一部分。
&lt;!-- raw HTML omitted -->&lt;/li>
&lt;li>&lt;strong>按业务目标来安排系统变更的优先度&lt;/strong>&amp;ndash;大型设备制造商不得不关闭了其所有的系统，后来发现不知道哪些服务器应该先启动。CMDB使公司能区分关键业务元素的优先度，确保减少计划外的停机时间，无形中降低了收入损失的风险。
&lt;!-- raw HTML omitted -->&lt;/li>
&lt;li>&lt;strong>减少软件许可证的费用的同时确保用户和服务器能整体的满足许可证遵从性&lt;/strong> &amp;ndash; -的半导体制造商开展了一个审计，结果另他们感到震惊：该公司支持在为大量已经报废的服务器支付支持和维护费用。实际上，该公司关于报废资产的数量已经长期和实际不符了。CMDB有助于该公司发现这一问题，并重新分配预算资金，以更好地支持现有的基础设施。
&lt;!-- raw HTML omitted -->&lt;/li>
&lt;li>&lt;strong>为加快服务器整合提供更深层次的资产和关系信息&lt;/strong> &amp;ndash; 一大型的金融服务提供商注意到，在其行业的公司通常在一个较短的时间内，会进行几次成功并购和整合。对于如何整合所有的IT部门是一个重大挑战（有时是次要的），他们往往是停留在相互隔离的工作状态下。然而，使用CMDB的公司就能够有效地集成新的收购，从而节省资金和为公司内部建立统一的IT业务形象。
&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->IT要实现CMDB的硬收益，一般通过降低以下对象的相关成本来实现：人、第三方服务、软件、硬件和设施。这些方面的价值点可以通过财务方面的分析报表来反映出来。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/li>
&lt;/ul>
&lt;p>CMDB能够实现的价值还包括哪些很难衡量的方面，例如下面的例子解释了这些软价值：&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;ul>
&lt;li>&lt;strong>服务台&lt;/strong> &amp;ndash; CMDB可以从提高事件和问题处理和解决效率和效果的方面来体现出硬利益的成效。还可以认为，CMDB使这种改善更可行，往往服务台技术员从尖锐的客户那里来收集信息是一项非常不快的工作，CMDB可能会提高支持人员支持客户的效率，提高客户满意度。另外，通过为服务团队提供更好的信息，你可能使用较低技术水平的工作人员来完成的相同水平的服务工作，降低在工资成本上的成本。
&lt;!-- raw HTML omitted -->&lt;/li>
&lt;li>&lt;strong>变更管理&lt;/strong> &amp;ndash; 通过CMDB这个流程得到了很大的提升，更完善的风险评估，提供更多的信息来评价类似类型CI在过去时间里的变更成功率，并能更好的理解变更CI与其上游和下游其他基础设施组件的依存关系。其结果可能是使企业用户对IT所提供给他们的服务感到更满意，但这是难以像硬效益一样的量化的。
&lt;!-- raw HTML omitted -->&lt;/li>
&lt;li>&lt;strong>连续性管理&lt;/strong> &amp;ndash; CMDB的变成了持续管理的记录源泉。拥有了能准确的、更新的描述IT环境状况的信息后，灾难恢复被大大地简化了，这提高了整个组织的信心。这是一个明确的好处，但也不是那么容易量化。
&lt;!-- raw HTML omitted -->&lt;/li>
&lt;li>&lt;strong>与业务的影响与和谐&lt;/strong> &amp;ndash; CMDB使CI依赖关系能被更深入的了解。这种理解大大简化了连接CI到依赖于IT基础设施的业务流程或者服务的过程。使IT与业务更紧密的和谐是至关重要的，例如提升响应速度和让业务具有更好的竞争优势，但对比硬利益它也可能是难以量化。
&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->以上内容参考了BMC出版的&amp;laquo;step by step to build a cmdb&amp;raquo;;以上软效益对于不同的企业而言可能是不同的，总的来说前两条是显而易见的，你也可能有更好的关于硬效益和软效益的总结和期望。如果有的话一定需要在项目建设前，或者初期阶段中，与CMDB项目相关的利益人和用户做细致的价值点讨论和确认是非常关键的。更进一步价值点的确认也更进一步的指导了CMDB项目实施的方案。BMC Atrium CMDB通过其完备的功能，以及那些以CMDB为核心而建立的ITSM流程应用，能很好的为企业用户实现以上的相关效益。&lt;/li>
&lt;/ul></description></item><item><title>资产CI的一生</title><link>https://martinliu.cn/2009/12/13/service-asset-ci-life-cycle/</link><pubDate>Sun, 13 Dec 2009 07:45:00 +0000</pubDate><guid>https://martinliu.cn/2009/12/13/service-asset-ci-life-cycle/</guid><description>&lt;p>在 ITIL v3 以后，配置管理进化为“服务资产和配置管理 SACM”，换句话说，资产和配置管理不分家。两个流程应该是融合的。从微观上看资产管理设计到 CI 的所有生命周期状态，而这个服务资产在 CMDB 中出现的状态为整个生命周期中的一部分。&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;img src="http://www.butterfliesandart.com/Butterfly_Life_Cycle/Lifecycle3large.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->最好能通过资产管理为统一入口，来完成对 CMDB 中资产的生命周期管理。例如：一台服务器在到货以后，完成资产入库后，就应该在 CMDB 中自动创建 CI，在上架部署了软件后，有配置资产自动采集工具，采集回详细配置信息后，资产状态就自动变为“部署”，当在运行维护中服务器宕机或者维护时，在资产管理中也能看到更新的信息。下面是建议的服务资产的生命周期状态:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>CMDB选型解密</title><link>https://martinliu.cn/2009/11/19/how-to-select-a-cmdb/</link><pubDate>Thu, 19 Nov 2009 16:32:22 +0000</pubDate><guid>https://martinliu.cn/2009/11/19/how-to-select-a-cmdb/</guid><description>&lt;p>自打承接了《Step by Step Guide to Building a CMDB (Updated for ITIL V3)》的翻译工作之后，由于平时工作太忙，翻译工程只能在业余时间完成；现在渐渐感到了此项工作的压力，每每想到读者对英文翻译版本读物的高期望和要求时，就愈加感到此项工作责任之重。不过本书对我来说还是一剂很好的补品，对我最近的 ITSM 项目都有直接的借鉴和指导作用。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->说来此书有很多实用且精彩之处，相信读了英文原版的人更能有所体会。我忍不住想把其中的部分内容提前与你们探讨，这里想与你们分享如下两个内容。&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;a class="link" href="http://www.flickr.com/photos/liuzheng/4117747508/" target="_blank" rel="noopener"
>&lt;img src="http://farm3.static.flickr.com/2604/4117747508_d3d109c936.jpg"
loading="lazy"
alt="CMDB core functions for consideration"
>&lt;/a>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->上图还给所有 CMDB 用户一个清晰地 CMDB 功能点考察点，CMDB 作为业务服务管理的核心，各个厂商其实并没有达成解决方案功能的标准和共识。通常情况下厂商提供的 CMDB 产品的发展和起源有以下几种情况：1）按照 ITIL 中对 CMDB 的需求和标准从无到有开发的标准 CMDB 产品；2）伴随变更流程或者业务影响管理而开发的 CMDB 功能模块；3）伴随配置自动化发现工具而开发的相应 CMDB 功能模块；4）应资产管理或者监控工具扩展而生的 CMDB 功能产品。用户在挑选 CMDB 产品的时候一定要明确 CMDB 的核心功能，除了以上功能外，其他的附加功能可能是 nice to have 的功能，而非必须。本图位于原版书的 134 页，如果您对我的翻译有建议请留言，多谢！&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;a class="link" href="http://www.flickr.com/photos/liuzheng/4117761602/" target="_blank" rel="noopener"
>&lt;img src="http://farm3.static.flickr.com/2639/4117761602_c0bd1ffe63.jpg"
loading="lazy"
alt="Example of vendor scoring system"
>&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>上表为评估一个 CMDB 产品厂商的综合打分评价表样例。在选择并且评测一个 CMDB 厂商时，需要仔细考察的产品功能共有 8 点。用户需要注意的是一定要搞清楚其中的每一个功能是否是由厂商的 CMDB 产品的相关模块所提供的，如果不是的话需要搞清楚，每个功能是否是 CMDB 的外围或者其他产品模块，或者二次开发实现的。如果是这样的话，这种解决方案可能不是一套集成统一的解决方案，可能出现其他附加非 CMDB 产品的采购，可能在实施阶段付出不必要的集成和开发费用。虽然这些潜在因素在采购和实施阶段可能是隐形出现的。征集上表中相关术语的中文翻译：Weighted ，Weighted Rating Score，Total Weighted Score。有好的建议请留言。本图位于原版书籍的 141 页。&lt;/p></description></item><item><title>选书名</title><link>https://martinliu.cn/2009/10/29/pick-a-book-name-for-step-by-step-guide-to-building-a-cmdb/</link><pubDate>Thu, 29 Oct 2009 01:48:58 +0000</pubDate><guid>https://martinliu.cn/2009/10/29/pick-a-book-name-for-step-by-step-guide-to-building-a-cmdb/</guid><description>&lt;p>好消息《Step by Step Guide to Building a CMDB (Updated for ITIL V3)》即将翻译成中文出版。市场里 ITIL 的书越来越多，但是讲 CMDB 的书却一直很少，能讲解清楚 CMDB 建设过程的的书就更少。可是国内 ITIL 用户 CMDB 建设之瓶颈却越来越明显，我们希望有一本好的书作为这项重要工作的参考指南。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://www.bmc.com/products/product-listing/53556216-141391-2117.html" target="_blank" rel="noopener"
>&lt;img src="http://ecx.images-amazon.com/images/I/41obkAD85tL._SL500_AA240_.jpg"
loading="lazy"
>&lt;/a>&lt;!-- raw HTML omitted -->给此书起一个好的名字是头等大事，目前能想到的书名如下：&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://answers.polldaddy.com/poll/2182921/" target="_blank" rel="noopener"
>Step by Step Guide to Building a CMDB 中文书名？&lt;/a>(&lt;a class="link" href="http://answers.polldaddy.com" target="_blank" rel="noopener"
>polls&lt;/a>)&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->寻求前 100 名投票者，请对以上书名投票，并评论；如果您有更好的书名，欢迎推荐；请在下面留言，请正确填写邮箱，您推荐书名一旦被选用必有感谢送上。&lt;/p></description></item><item><title>手把手教您构建CMDB/CMS</title><link>https://martinliu.cn/2009/10/17/step-by-step-guide-to-building-a-cmdb/</link><pubDate>Sat, 17 Oct 2009 09:37:08 +0000</pubDate><guid>https://martinliu.cn/2009/10/17/step-by-step-guide-to-building-a-cmdb/</guid><description>&lt;p>If you have no idea about how to build a CMDB, you should check out this document. &lt;img src="http://media.cms.bmc.com/images/products-graphics-logo-atrium.gif"
loading="lazy"
>&lt;!-- raw HTML omitted -->It come from &lt;a class="link" href="http://www.bmc.com/products/product-listing/53556216-141391-2117.html" target="_blank" rel="noopener"
>http://www.bmc.com/products/product-listing/53556216-141391-2117.html&lt;/a>&lt;!-- raw HTML omitted -->Download it: &lt;a class="link" href="http://documents.bmc.com/products/documents/60/54/96054/96054.pdf" target="_blank" rel="noopener"
>Step by Step Guide to Building a CMDB (Updated for ITIL V3)&lt;/a> (pdf)&lt;!-- raw HTML omitted -->该《手把手 CMDB/CMS 构建指导手册》包括了配置管理数据库/系统建设的所有相关流程、技术和指导性建议。如果你有 CMDB 的建设意向，该手册非常值得仔细阅读。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->欢迎留下一个反馈，投票或者留言都行。&lt;!-- raw HTML omitted -->[poll id=&amp;ldquo;8&amp;rdquo;]&lt;/p></description></item><item><title>CMDB中存什么？</title><link>https://martinliu.cn/2009/10/05/what-does-cmdb-store/</link><pubDate>Mon, 05 Oct 2009 15:21:24 +0000</pubDate><guid>https://martinliu.cn/2009/10/05/what-does-cmdb-store/</guid><description>&lt;p>[caption id=&amp;quot;&amp;quot; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;406&amp;rdquo; caption=&amp;ldquo;dmtf.org&amp;rdquo;]&lt;img src="http://www.dmtf.org/home/Computer_stoxx.JPG"
loading="lazy"
alt="dmtf.org"
>[/caption]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->当然是配置项和它们之间的关系，即：CI 和   Relationship。 那么如何规划那些类型的 CI 和 Relationship 需要保存到 CMDB 中呢？可以参考的数据模型是 DMTF 的通用信息模型，它是以面相对象的方式来描述各类 CI 和关系。它是一个工具用来帮你对环境中的各种物理和逻辑的 CI 和关系进行分类，参考这个模型选择一些有用的类（广度），然后在参考它对每个类属性的描述（粒度）。这些类的选择只是一个初步的研究，每个 CMDB 厂商和工具对其实施和参考的力度都不同，也需要看您具体实施的是什么工具。例如：你需要描述银行基金业务系统，你可能选择的 CI 类包括：客户群、业务流程、业务活动、业务服务、IT 服务、应用系统、应用、软件服务器、服务器、网络、存储等；关系包括：组件、依赖和影响。CI 类和关系的选择也基本上遵循够用就好的原则；而且每个类对应的 CI 实例都需要有人负责管理维护，需遵循，谁负责、谁维护的原则保障其属性的精确性。对于整个 CMDB 来说如果存在没有 Onwer 的 CI 或者关系，如果它是由自动化配置发现工具来更新的；那么它可以存在，如果不是的话，它可能根本就不该存在。所以 CMDB 中保存的数据不是越多，越细越好；而是够用就好，能保证更新就好。由于数据根本就不是免费的，即使国内的人力成本低，也不应该雇用一帮专职更新 CMDB 的人。 综上所述：我们说明了 CMDB 中数据选取和存放的最基本原则和方法，在 CMDB 产品选型过程中需要着重考察产品的数据模型本身和其管理的能力，还包括其 CI 和关系的扩展和定制能力；包括数据类型的支持和界面定制的程度。那么 CMDB 中的 CI 和关系有该如何展现呢？这是 CMDB 系统的另外一个功能：可视化。下面是一个 CI 和关系展示的实例供参考：&lt;!-- raw HTML omitted -->[http://media-001.yo2cdn.com/wp-content/uploads/266/26670/2009/10/s1-4-blog.swf#swf&amp;amp;width=320&amp;amp;height=320]&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://martinliu.cn/2009/10/05/what-does-cmdb-store/s1-4-blog/" target="_blank" rel="noopener"
>&lt;/a>&lt;a class="link" href="http://media-001.yo2cdn.com/wp-content/uploads/266/26670/2009/10/s1-4-blog.swf" target="_blank" rel="noopener"
>全屏查看或者下载 Flash 文件&lt;/a>&lt;!-- raw HTML omitted -->第一代的配置展示方式是，纯数据表格方式。第二代具有一种固定格式的图形展示方式，除了那几张视图外，别的需要单独开发。下一代的具有各种视图定制功能，并且支持关系和 ci 的过滤等等。&lt;/p></description></item><item><title>MartinMarks for 29th August</title><link>https://martinliu.cn/2009/08/29/martinmarks-for-29th-august/</link><pubDate>Sat, 29 Aug 2009 16:27:38 +0000</pubDate><guid>https://martinliu.cn/2009/08/29/martinmarks-for-29th-august/</guid><description>&lt;p>&lt;strong>&lt;a class="link" href="http://www.cio.com/article/437682/New_IT_Job_CMDB_Manager/1" target="_blank" rel="noopener"
>New IT Job: CMDB Manager&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->从此 IT 部门有多了一个职位 CMDB 经理，不过某人的工作量加倍了也没准哈哈，从这个文章中可以看出这并不是一个可有可无的职位，而且 CMDB 的建设和推广，以及管理和其他的 ITIL 流程没有区别，需要结合技术、流程和人老三样，而且要再次改造人们对于配置管理的行为方式和文化了。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.forrester.com/Research/Document/Excerpt/0,7211,44798,00.html" target="_blank" rel="noopener"
>Role Overview: CMDB Manager&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->CMDB 经理负责管理和维护您的 CI，工作内容都有了，CIT/CTO 招不招这个人由您。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.networkworld.com/news/2006/073106-configuration-management-database.html" target="_blank" rel="noopener"
>CMDBs reduce costs, automate tasks&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->CMDB 更多的不是一种技术，更多的是流程，联邦技术让您从一个集中的 CMDB 来访问这个多元化多变的世界。CMDB 信息需要多种来源、产品和工具。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.itskeptic.org/itil-cmdb-skeptic" target="_blank" rel="noopener"
>Top 10 reasons NOT to implement CMDB&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->不去实施 CMDB 的 10 个理由&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://blog.evergreensys.com/post/2007/05/31/Top-Ten-Reasons-to-Implement-a-CMDB.aspx" target="_blank" rel="noopener"
>Top Ten Reasons to Implement a CMDB&lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->实施 CMDB 的 10 个理由&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>&lt;a class="link" href="http://www.networkworld.com/newsletters/nsm/2007/0305nsm2.html" target="_blank" rel="noopener"
>The federated CMDB: Getting past the hype to the good stuff &lt;/a>&lt;/strong>&lt;!-- raw HTML omitted -->cmdbf 标准的实施在各家产品中尚处于开始阶段，是否大家都会照着做呢。联邦让所有的配置数据更易访问。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>Logo Mark&lt;/strong>&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://www.itsmcommunity.org/" target="_blank" rel="noopener"
>&lt;img src="http://www.itsmcommunity.org/themes/itsmcommunity/banner.jpg"
loading="lazy"
alt="ITSM Community"
>&lt;/a>&lt;/p></description></item><item><title>IT服务管理考核向左走向右走: CSF OR KPI?</title><link>https://martinliu.cn/2009/08/29/csf-or-kpi-matrix-itsm/</link><pubDate>Sat, 29 Aug 2009 14:18:33 +0000</pubDate><guid>https://martinliu.cn/2009/08/29/csf-or-kpi-matrix-itsm/</guid><description>&lt;p>最近做的一个项目中需要帮用户设计一个 CMDB 的成熟度模型，能够从该模型中持续的检查 CMDB 的建设程度。所以我研究注意了一下的一些书籍，考虑有机会可以买回来研究一下：&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->IT 服务管理的持续改进需要一定的手段实现，这是 ITIL V3 中的一个重要流程。CSF 是关键成功因素，KPI 是关键性能指标，这些都是 metrics 管理过程中需要关注的手段。每个流程都可以找到相应的 CSF 和 KPI。CSF 算是 V3 的新生事物，我想它可能会对 IT 管理质量的衡量和改进带来新的方式。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->别的不说，我只想说说 KPI 管理方法可能带来的坏处。举个例子：有个公司想通过“事件单数”来考核服务台一线人员的工作。结果当他们在执行了一段时间后，他们发现服务台中有大量重复的事件单，实际上服务台对每个收到的电话都新建一个事件单，并没有做重复事件匹配查找的工作。进一步的也影响了通过重复事件来做进一步的问题管理。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->从考核管理的角度看，ITSM 的考核指标和体系如何建立的合理，如何才能建立的正确的设计和实施的确是一件大事。否则会有什么后果，我们可以想想三鹿毒奶粉事件，奶粉的蛋白质含量是奶粉质量的重要指标 KPI，营养健康是奶粉的终极 CSF 目标。三鹿真的给了我们一个血的教训啊，想让你的 IT 服务质量如何呢？可以想想三鹿。不过还是需要多多学习所有可能的 CSF 和 KPI，从何设计出确实可行的管理方式。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>Implementing Metrics for IT Service Management (ITSM)&lt;/strong>&lt;!-- raw HTML omitted -->ISBN: 9789087531140&lt;!-- raw HTML omitted -->Author: David Smith, Micromation Canada&lt;!-- raw HTML omitted -->&lt;img src="http://ecx.images-amazon.com/images/I/41QQV4NN6EL._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA240_SH20_OU01_.jpg"
loading="lazy"
>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>Metrics for IT Service Management (Paperback)&lt;/strong>&lt;!-- raw HTML omitted -->by Peter Brooks (Author)&lt;!-- raw HTML omitted -->&lt;img src="http://ecx.images-amazon.com/images/I/51G2GFVEZZL._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA240_SH20_OU01_.jpg"
loading="lazy"
>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>Measuring ITIL: Measuring, Reporting and Modeling&lt;/strong>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->** ** - the IT Service Management Metrics That Matter Most to IT Senior Executives (Paperback)&lt;!-- raw HTML omitted -->by Randy A. Steinberg&lt;!-- raw HTML omitted -->&lt;img src="http://ecx.images-amazon.com/images/I/41QQV4NN6EL._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA240_SH20_OU01_.jpg"
loading="lazy"
>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->**Step-by-Step Guide to Building a CMDB **&lt;!-- raw HTML omitted -->by BMC Software; Inc (Author)&lt;!-- raw HTML omitted -->&lt;img src="http://ecx.images-amazon.com/images/I/41obkAD85tL._SL500_AA240_.jpg"
loading="lazy"
>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->后来发现了这个 ITSM metrics modeling tools ，觉得这个真的不错。可行性很高。&lt;!-- raw HTML omitted -->&lt;a class="link" href="http://www.itsmcommunity.org/resources/tool/itsm_metrics_modeling_tool/" target="_blank" rel="noopener"
>ITSM Metrics Modeling Tool&lt;/a>&lt;/p></description></item><item><title>CMS/CMDB 配置管理系统和发现工具</title><link>https://martinliu.cn/2009/07/15/cms-cmdb-and-discovery-tools/</link><pubDate>Wed, 15 Jul 2009 03:45:03 +0000</pubDate><guid>https://martinliu.cn/2009/07/15/cms-cmdb-and-discovery-tools/</guid><description>&lt;p>最近的一些 CMDB 项目和测试中都用到和测到了自动发现工具，很多用户对此的理解和看法还不是很到位。&lt;img src="http://www.re-soft.com/images/viewscreen.jpg"
loading="lazy"
>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->**首先：“自动化配置和关系发现工具是什么？” **&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->它是 CMS 工具集当中的数据采集工具。 从产品名称上看，往外都带 DDM，它是 Discovery Dependency Mapping 的缩写。意思就是帮你发现 CI 和 CI 之间关系的工具。很多用户的各种 IT 管理工具都可以自动发现网络、服务器和应用的配置项以及之间的关系，那么为什么还需要在购买一个新的发现工具呢？其实发现工具解决的真实发现工具不统一和发现数据不统一的问题，更重要的是它可以发现配置项之间的依赖和影响关系。对于一个数据中心来说，变更会经常发生，那么一套应用运行了一段时间之后，你很难准确的说出它都连接了那些其他相关的设备，很难理解它当前的部署状态。我们希望发现工具能帮我们更好的洞察当前 IT 基础架构的构成，应用对设备的依赖，底层 IT 服务对业务的影响。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->**其次：“它是如何工作的？” **&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->它的工作原理和其他所有的管理软件也没什么太大的差异。基本上讲有两种技术：无代理发现和有代理发现；三种产品形式：纯粹无代理扫描方式、纯有代理方式和混合方式。无代理采集必须依赖被采集设备的开放协议，常用的采集协议有：snmp,wmi,telnet,ssh,jmx,http 等。往往需要在被采集设备上配合一定的账号和权限。采集动作往往是定时、周期性或者触发式执行。扫描结果返回一个数据库中，准备向 CMDB 同步。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>再次：“它是 CMDB 必须的工具么？”&lt;/strong>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->对于下面几种情况我个人认为它是一个必的工具：1）数据中心用户，服务器和应用成百上千套，变更每周都会进行，新业务系统增长快。CMDB 需要使用它来自动更新配置项信息。2）应用多是多层的复杂应用，CI 之间依赖关系复杂，物理连接图已经不足够用来做影响分析，CMDB 需要它来自动化维护配置自己的关联关系，通过它可以减少进 70%的手工工作量。从国外的一些项目经验上来看，50%的 CMDB 用户并没有使用配置自动发现工具，他们使用的配置数据多是监控管理系统中已有的，CI 间的关系靠手工维护。&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;strong>最后：“它是如何与 CMDB 同步的？”&lt;/strong>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->有些厂商的 CMDB 是从发现工具上起家的，所以他们本来就使用的一个库，没有同步问题。有些厂商的发现工具是整合的其他产品工具或者收购的，他们自己的同步就需要一定得数据模型了。通过数据模型来解决数据字段映射的关系，一般来讲 CMDB 中会有数据模型 CDM，发现工具同步的时候就以该模型为准，把 CI 和关系经过一定的过滤条件同步到 CMDB 中。不同厂商的发现工具和 CMDB 如果需要同步的话，需要满足起码这样几点需要：CMDB 必须有标准的数据模型来做数据映射；需要有某种数据集成和同步的工具来连接两个数据库；CMDB 中需要具有强大的数据调和功能来处理发现工具带来的数据。&lt;/p></description></item></channel></rss>